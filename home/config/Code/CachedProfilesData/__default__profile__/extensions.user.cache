{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/griffin/.vscode/extensions/extensions.json","path":"/home/griffin/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1719149784671,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.90.1","productDate":"2024-06-11T21:02:43.666Z","productCommit":"611f9bfce64f25108829dd295f54a6894e87339d","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.27.3","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["onStartupFinished","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]","pattern":"^(.:.)?(,.:.)*$"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1,"maximum":10000},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VS Code to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":["#005f5f","#ffffff"]},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":["#5f0000","#ffffff"]},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":["#5f00af","#ffffff"]},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":["#005f87","#ffffff"]},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":["#86592d","#ffffff"]},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":["#00000","#ffffff"]},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":["#007acc","#ffffff"]},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `#vim.neovimConfigPath#`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `#vim.neovimUseConfigFile#` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"Vimscript","extensions":[".vim",".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"Vimscript","scopeName":"source.vimscript","path":"./syntaxes/vimscript.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"eslint .","lint:fix":"eslint . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky install"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"5.1.0","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.2.1","@types/diff-match-patch":"1.0.36","@types/glob":"8.1.0","@types/lodash":"4.17.4","@types/mocha":"10.0.6","@types/node":"18.19.33","@types/parsimmon":"1.10.9","@types/sinon":"17.0.3","@types/vscode":"1.74.0","@typescript-eslint/eslint-plugin":"^7.0.0","@typescript-eslint/parser":"^7.0.0","@vscode/test-electron":"2.3.10","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","eslint":"^8.52.0","eslint-config-prettier":"^9.0.0","eslint-plugin-jsdoc":"^48.0.0","eslint-plugin-prefer-arrow":"^1.2.3","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"9.0.2","gulp":"5.0.0","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^9.0.0","lint-staged":"^15.0.0","minimist":"1.2.8","mocha":"10.4.0","plugin-error":"2.0.1","prettier":"3.2.5","sinon":"18.0.0","ts-loader":"9.5.1","typescript":"5.4.5","vsce":"2.15.0","webpack":"5.91.0","webpack-cli":"5.1.4","webpack-merge":"5.10.0","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.ts":"eslint --fix"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/vscodevim.vim-1.27.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vscodevim","metadata":{"id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1716823809309,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.15.2","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-release"},"bugs":{"url":"https://aka.ms/microsoft/vscode-copilot-release"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.89.0-20240424","npm":">=9.0.0","node":">=18.0.0"},"categories":["Programming Languages","Machine Learning","Education","Snippets"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelAccess:copilot-gpt-3.5-turbo","onLanguageModelAccess:copilot-gpt-4"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","chatProvider","codeActionAI","findTextInFiles","findFiles2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipant","chatParticipantAdditions","defaultChatParticipant","chatVariableResolver","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider"],"contributes":{"chatParticipants":[{"id":"github.copilot.default","name":"GitHub Copilot","description":"Ask Copilot or type / for commands","isDefault":true,"locations":["panel"]},{"id":"github.copilot.editor","name":"GitHub Copilot","description":"Ask Copilot or type / for commands","isDefault":true,"locations":["editor"],"defaultImplicitVariables":["_inlineChatContext","_inlineChatDocument"],"commands":[{"name":"doc","description":"Add documentation comment for this symbol"},{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"tests","description":"Generate unit tests for the selected code"},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"github.copilot.chat.fixTestFailures.enabled"}]},{"id":"github.copilot.workspace","name":"workspace","description":"Ask about your workspace","commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"config.github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code"},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"%copilot.workspace.newNotebook.sampleRequest"},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"github.copilot.chat.fixTestFailures.enabled"},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"}]},{"id":"github.copilot.vscode","name":"vscode","description":"Ask questions about VS Code","commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"api","description":"Ask about VS Code extension development","sampleRequest":"How do I add text to the status bar?"}]},{"id":"github.copilot.terminal","name":"terminal","description":"Ask how to do something in the terminal","locations":["panel","terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]}],"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"workbench.panel.chat.view.copilot","contents":"Sign in with GitHub to use Copilot, your AI pair programmer.\n[Sign In](command:github.copilotChat.signIn)","when":"!github.copilot.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled"},{"view":"workbench.panel.chat.view.copilot","contents":"Get started with GitHub Copilot.\n\n[Start 30-day Free Trial](https://github.com/github-copilot/signup?editor=vscode)","when":"github.copilot.interactiveSession.individual.disabled"},{"view":"workbench.panel.chat.view.copilot","contents":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"view":"workbench.panel.chat.view.copilot","contents":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"view":"workbench.panel.chat.view.copilot","contents":"You are currently offline. Please connect to the internet to use Copilot.\n[Retry Connection](command:github.copilot.offline)","when":"github.copilot.offline"}],"commands":[{"command":"github.copilotChat.signIn","title":"Sign in to Chat","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.explain","title":"Explain This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.explain.palette","title":"Explain This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review","title":"Review This","enablement":"config.github.copilot.advanced.review.intent && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.palette","title":"Review This","enablement":"config.github.copilot.advanced.review.palette && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generate","title":"Generate This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.fix","title":"Fix This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.ghpr.applySuggestion","title":"Apply Suggestion with Copilot","icon":"$(sparkle)","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelection","title":"Explain This (Terminal)","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","title":"Copilot: Explain This","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Command (Terminal)","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message with Copilot","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration with Copilot","category":"GitHub Copilot"},{"command":"github.copilot.debug.contentExclusions","title":"View Content Exclusion Session Info","category":"GitHub Copilot","enablement":"github.copilot.copilotIgnoreEnabled"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"}],"configuration":{"title":"Copilot","properties":{"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Enable/disable copilot code actions"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.welcomeMessage":{"type":"string","default":"first","markdownDescription":"Control when to show the detailed welcome chat message.","markdownEnumDescriptions":["Show the welcome message once per session","Always show the detailed welcome message","Never show the detailed welcome message"],"enum":["first","always","never"]},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where char queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection.","tags":["experimental"]},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"}}},"submenus":[{"id":"copilot","label":"Copilot"}],"menus":{"editor/context":[{"submenu":"copilot","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"1_copilot@0"}],"copilot":[{"command":"inlineChat.start","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilot@1"},{"command":"github.copilot.interactiveEditor.explain","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@1"},{"command":"github.copilot.interactiveEditor.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@2"},{"command":"github.copilot.interactiveEditor.review","when":"config.github.copilot.advanced.review.intent && !github.copilot.interactiveSession.disabled","group":"copilotAction@3"},{"command":"github.copilot.interactiveEditor.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@4"},{"command":"github.copilot.interactiveEditor.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@5"}],"terminal/context":[{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","group":"1_copilot@0"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.interactiveEditor.explain","when":"false"},{"command":"github.copilot.interactiveEditor.review","when":"false"},{"command":"github.copilot.interactiveEditor.review.palette","when":"config.github.copilot.advanced.review.palette && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"}],"view/title":[{"command":"github.copilot.interactiveSession.feedback","when":"view == workbench.panel.chat.view.copilot"},{"command":"github.copilot.debug.contentExclusions","when":"view == workbench.panel.chat.view.copilot && github.copilot.copilotIgnoreEnabled"}],"comments/comment/title":[{"command":"github.copilot.ghpr.applySuggestion","title":"Apply Suggestion with Copilot","group":"inline@0","when":"commentController =~ /^github-review/ && !(comment =~ /hasSuggestion/)"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri && github.copilot.chat.fixTestFailures.enabled","group":"inline@1"}]},"icons":{"copilot-logo":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"]}]},"extensionPack":["GitHub.copilot"],"scripts":{"postinstall":"tsx ./script/postinstall.ts","prepare":"tsx script/setup/prepare.ts","husky:install":"husky install","vscode:prepublish":"npm run build","vscode-dts:dev":"npx vscode-dts dev && mv vscode.proposed.*.ts src/extension","build":"tsx .esbuild.ts","compile":"tsx .esbuild.ts --dev","watch":"npm-run-all -p watch:*","watch:esbuild":"tsx .esbuild.ts --watch --dev","watch:tsc-extension":"tsc --noEmit --watch --project tsconfig.json","watch:tsc-simulation-workbench":"tsc --noEmit --watch --project test/simulation/workbench/tsconfig.json","typecheck":"tsc --noEmit -project tsconfig.json && tsc --noEmit --project test/simulation/workbench/tsconfig.json","lint":"eslint src test --max-warnings=0 --ext ts --ext tsx","lint-staged":"eslint --max-warnings=0 --ext ts --ext tsx","tsfmt":"npx tsfmt -r --verify","test":"npm-run-all test:*","test:extension":"vscode-test","test:unit":"mocha -u tdd dist/test-unit.js --require source-map-support/register --exit --timeout=5000","test:unit_vitest":"vitest --run","vitest":"vitest","get_token":"tsx script/setup/getToken.mts","patch-release":"tsx script/build/applyPatchForRelease.ts","patch-prerelease":"tsx script/build/applyPatchForRelease.ts -- --prerelease","prettier":"prettier --list-different --write --cache .","simulate":"node dist/simulationMain.js","simulate-ci":"node dist/simulationMain.js --ci --require-cache","simulate-baseline":"node dist/simulationMain.js --update-baseline","setup":"python script/setup/setup.py && npm run get_token","setup:dotnet":"run-script-os","setup:dotnet:darwin:linux":"curl -O https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh && chmod u+x dotnet-install.sh && ./dotnet-install.sh --version latest --quality GA --channel STS && rm dotnet-install.sh","setup:dotnet:win32":"Invoke-WebRequest -Uri https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.ps1 && chmod u+x dotnet-install.ps1 && ./dotnet-install.ps1 --version latest --quality GA --channel STS && rm dotnet-install.ps1","aml":"python test/aml/run.py","package":"vsce package"},"devDependencies":{"@fluentui/react-components":"^9.44.4","@fluentui/react-icons":"^2.0.224","@nteract/messaging":"^7.0.20","@parcel/watcher":"^2.4.1","@types/eslint":"8.44.8","@types/kerberos":"^1.1.5","@types/markdown-it":"^13.0.7","@types/minimist":"^1.2.5","@types/mocha":"^10.0.6","@types/node":"^20.10.3","@types/picomatch":"^2.3.3","@types/react":"17.0.44","@types/react-dom":"^18.2.17","@types/sinon":"^17.0.2","@types/source-map-support":"^0.5.10","@types/tar":"^6.1.10","@types/vscode":"^1.85.0","@typescript-eslint/eslint-plugin":"^6.13.2","@typescript-eslint/parser":"^6.13.2","@typescript-eslint/typescript-estree":"^6.13.2","@vitest/snapshot":"^1.5.0","@vscode/dts":"^0.4.0","@vscode/test-cli":"^0.0.4","@vscode/test-electron":"^2.3.9","@vscode/vsce":"2.22.0","@vscode/zeromq":"0.2.0","csv-parse":"^5.5.2","dotenv":"^16.3.1","electron":"^27.1.3","esbuild":"^0.19.8","eslint":"^8.55.0","eslint-import-resolver-typescript":"^3.6.1","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.29.0","eslint-plugin-jsdoc":"^46.9.0","eslint-plugin-local":"^1.0.0","eslint-plugin-no-only-tests":"^3.1.0","glob":"^10.3.10","husky":"^8.0.3","lint-staged":"^15.2.0","minimist":"^1.2.8","mobx":"^6.12.0","mobx-react-lite":"^4.0.5","mocha":"^10.2.0","monaco-editor":"0.44.0","npm-run-all":"^4.1.5","open":"^10.0.4","outdent":"^0.8.0","picomatch":"^3.0.1","prettier":"^2.8.7","react":"^17.0.2","react-dom":"17.0.2","run-script-os":"^1.1.6","sinon":"^17.0.1","tar":"^6.2.0","tree-sitter-c-sharp":"^0.20.0","tree-sitter-cli":"^0.20.8","tree-sitter-cpp":"^0.20.3","tree-sitter-go":"^0.20.0","tree-sitter-java":"^0.20.2","tree-sitter-javascript":"^0.20.1","tree-sitter-python":"^0.20.4","tree-sitter-ruby":"^0.19.0","tree-sitter-rust":"^0.20.4","tree-sitter-typescript":"^0.20.3","ts-dedent":"^2.2.0","ts-node":"^10.9.1","tsx":"^4.6.2","typescript":"^5.3.2","typescript-formatter":"7.2.2","vite-plugin-top-level-await":"^1.4.1","vite-plugin-wasm":"^3.3.0","vitest":"^1.5.0","zeromq":"github:rebornix/zeromq.js#a19e8e373b3abc677f91b936d3f00d49b1b61792","zlib":"^1.0.5"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#eaa2f1344d93625e1bddb83d6846be5eea007e94","@humanwhocodes/gitignore-to-minimatch":"1.0.2","@roamhq/mac-ca":"^1.0.7","@vscode/extension-telemetry":"^0.9.4","@vscode/l10n":"^0.0.17","@vscode/prompt-tsx":"^0.1.5-alpha","applicationinsights":"^2.9.1","ignore":"^5.3.0","isbinaryfile":"^5.0.0","jsonc-parser":"^3.2.0","markdown-it":"^14.0.0","minimatch":"^9.0.3","source-map-support":"^0.5.21","vscode-tas-client":"^0.1.84","web-tree-sitter":"^0.20.8"},"isPreRelease":false},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/github.copilot-chat-0.15.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1716823809322,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"4ops.terraform","uuid":"b861aa84-146f-440f-b6be-76124b02b729"},"manifest":{"name":"terraform","displayName":"Terraform","description":"Terraform configuration language support (includes Terragrunt)","version":"0.2.5","icon":"icon.png","keywords":["terraform","tf","tfvars","tfstate","hashicorp","hcl","terragrunt"],"publisher":"4ops","author":{"name":"Anton Kulikov"},"repository":{"type":"git","url":"https://github.com/4ops/vscode-language-terraform.git"},"bugs":{"url":"https://github.com/4ops/vscode-language-terraform/issues"},"license":"MIT","engines":{"vscode":"^1.34.0"},"categories":["Programming Languages","Snippets"],"contributes":{"languages":[{"id":"tf","aliases":["Terraform","terraform"],"extensions":[".tf"],"configuration":"./language-configuration.json"},{"id":"tfvars","aliases":["Terraform Variables"],"extensions":[".tfvars"],"configuration":"./language-configuration.json"},{"id":"terragrunt","aliases":["Terragrunt"],"extensions":[".hcl"],"configuration":"./language-configuration.json"},{"id":"json","extensions":[".tfstate"]}],"grammars":[{"language":"tf","scopeName":"source.tf","path":"./grammars/tf.json"},{"language":"tfvars","scopeName":"source.tfvars","path":"./grammars/tfvars.json"},{"language":"terragrunt","scopeName":"source.terragrunt","path":"./grammars/terragrunt.json"}],"snippets":[{"language":"tf","path":"./snippets/tf.json"}]},"scripts":{"build":"npm run compile -s","compile-tf":"yq eval --prettyPrint -o=json grammars/tf.yaml > grammars/tf.json","compile-tfvars":"yq eval --prettyPrint -o=json grammars/tfvars.yaml > grammars/tfvars.json","compile-terragrunt":"yq eval --prettyPrint -o=json grammars/terragrunt.yaml > grammars/terragrunt.json","compile-snippets":"yq eval --prettyPrint -o=json snippets/tf.yaml > snippets/tf.json","compile":"npm run compile-tf && npm run compile-tfvars && npm run compile-terragrunt && npm run compile-snippets","preversion":"git add -A .","postversion":"npm run push -s","prepush":"git push","push":"git push --tags","version":"npm run build -s"},"devDependencies":{"vsce":"^2.7.0"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/4ops.terraform-0.2.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Anton Kulikov","metadata":{"id":"b861aa84-146f-440f-b6be-76124b02b729","publisherId":"db4dabe0-34d0-481a-884f-371ffc5cb27f","publisherDisplayName":"Anton Kulikov","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1716823988573,"pinned":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"hashicorp.terraform","uuid":"4a23294b-fd16-4c51-9759-da9936474cf8"},"manifest":{"icon":"assets/icons/terraform_logo_mark_light_universal.png","name":"terraform","displayName":"HashiCorp Terraform","description":"Syntax highlighting and autocompletion for Terraform","version":"2.30.2","publisher":"hashicorp","appInsightsKey":"885372d2-6f3c-499f-9d25-b8b219983a52","license":"MPL-2.0","preview":false,"private":true,"extensionKind":["workspace"],"engines":{"npm":"~10.X","node":"~18.X","vscode":"^1.86.2"},"langServer":{"version":"0.33.2"},"syntax":{"version":"0.5.0"},"qna":"https://discuss.hashicorp.com/c/terraform-core/terraform-editor-integrations/46","bugs":{"url":"https://github.com/hashicorp/vscode-terraform/issues","email":"terraform-vscode@hashicorp.com"},"categories":["Programming Languages","Other","Formatters","Linters"],"keywords":["devops","terraform","hcl"],"galleryBanner":{"color":"#FFF","theme":"light"},"repository":{"type":"git","url":"https://github.com/hashicorp/vscode-terraform.git"},"activationEvents":["onAuthenticationRequest:terraform","onView:terraform-modules","workspaceContains:**/*.tf","workspaceContains:**/*.tfvars"],"main":"./out/extension","browser":"./out/web/extension","contributes":{"languages":[{"id":"terraform","aliases":["Terraform","terraform"],"extensions":[".tf"],"configuration":"./language-configuration.json"},{"id":"terraform-vars","extensions":[".tfvars"],"configuration":"./language-configuration.json"},{"id":"json","extensions":[".tfstate"]}],"grammars":[{"language":"terraform","scopeName":"source.hcl.terraform","path":"./syntaxes/terraform.tmGrammar.json"},{"language":"terraform-vars","scopeName":"source.hcl.terraform","path":"./syntaxes/terraform.tmGrammar.json"}],"semanticTokenTypes":[{"id":"hcl-attrName","superType":"property","description":"Attribute name"},{"id":"hcl-blockType","superType":"type","description":"Block type"},{"id":"hcl-blockLabel","superType":"enumMember","description":"Block label"},{"id":"hcl-bool","superType":"keyword","description":"Boolean"},{"id":"hcl-string","superType":"string","description":"String"},{"id":"hcl-number","superType":"number","description":"Number"},{"id":"hcl-objectKey","superType":"parameter","description":"Object key"},{"id":"hcl-mapKey","superType":"parameter","description":"Map key"},{"id":"hcl-keyword","superType":"variable","description":"Keyword"},{"id":"hcl-referenceStep","superType":"variable","description":"Reference step"},{"id":"hcl-typeComplex","superType":"keyword","description":"Type (complex)"},{"id":"hcl-typePrimitive","superType":"keyword","description":"Type (primitive)"},{"id":"hcl-functionName","superType":"function","description":"Function name"}],"semanticTokenScopes":[{"scopes":{"hcl-attrName":["variable.other.property"],"hcl-blockType":["entity.name.type"],"hcl-blockLabel":["variable.other.enummember"],"hcl-bool":["keyword.control"],"hcl-string":["string"],"hcl-number":["constant.numeric"],"hcl-objectKey":["variable.parameter"],"hcl-mapKey":["variable.parameter"],"hcl-keyword":["keyword.control"],"hcl-referenceStep":["variable.other.readwrite"],"hcl-typeComplex":["keyword.control"],"hcl-typePrimitive":["keyword.control"],"hcl-functionName":["support.function"]}}],"semanticTokenModifiers":[{"id":"hcl-dependent","description":"Dependent"},{"id":"terraform-data","description":"Data source"},{"id":"terraform-locals","description":"Locals"},{"id":"terraform-module","description":"Module"},{"id":"terraform-output","description":"Output"},{"id":"terraform-provider","description":"Provider"},{"id":"terraform-resource","description":"Resource"},{"id":"terraform-provisioner","description":"Provisioner"},{"id":"terraform-connection","description":"Connection"},{"id":"terraform-variable","description":"Variable"},{"id":"terraform-terraform","description":"Terraform"},{"id":"terraform-backend","description":"Backend"},{"id":"terraform-name","description":"Name"},{"id":"terraform-type","description":"Type"},{"id":"terraform-requiredProviders","description":"Required providers"}],"icons":{"run-status-running":{"description":"Run Status icon","default":{"fontPath":"./assets/icons/running.woff","fontCharacter":"D"}}},"snippets":[{"language":"terraform","path":"./snippets/terraform.json"}],"configuration":[{"title":"General","order":0,"properties":{"terraform.codelens.referenceCount":{"scope":"window","type":"boolean","default":false,"description":"Display reference counts above top level blocks and attributes."},"terraform.validation.enableEnhancedValidation":{"scope":"window","type":"boolean","default":true,"description":"Enable enhanced validation of Terraform files and modules"}}},{"title":"Language Server","order":1,"properties":{"terraform.languageServer.enable":{"scope":"window","order":"0","type":"boolean","default":true,"description":"Enable Terraform Language Server"},"terraform.languageServer.path":{"order":"1","scope":"machine","type":"string","default":"","description":"Path to the Terraform Language Server binary (optional)"},"terraform.languageServer.args":{"order":"2","scope":"machine","type":"array","items":{"type":"string"},"default":["serve"],"description":"Arguments to pass to language server binary"},"terraform.languageServer.tcp.port":{"order":4,"type":["number",null],"scope":"machine","default":null,"markdownDescription":"Language server TCP port to connect to. This is not compatible with `#terraform.languageServer.path#`. This is used when you want the extension to connect via TCP to an already running language server process."},"terraform.languageServer.ignoreSingleFileWarning":{"order":"3","scope":"window","type":"boolean","default":false,"description":"Enable warning when opening a single Terraform file instead of a Terraform folder. Enabling this will prevent the message being sent"},"terraform.languageServer.indexing.ignorePaths":{"scope":"machine","type":"array","items":{"type":"string"},"default":[],"description":"Per-workspace list of paths for the language server to ignore when indexing files"},"terraform.languageServer.indexing.ignoreDirectoryNames":{"scope":"machine","type":"array","items":{"type":"string"},"default":[],"description":"Per-workspace list of directory names for the language server to ignore when indexing files"}}},{"title":"Terraform Features","order":3,"properties":{"terraform.languageServer.terraform.path":{"order":0,"scope":"machine","type":"string","description":"Path to the Terraform binary used by the Terraform Language Server"},"terraform.languageServer.terraform.timeout":{"order":1,"scope":"machine","type":"string","description":"Overrides Terraform execution timeout (e.g. 30s) used by the Terraform Language Server"},"terraform.languageServer.terraform.logFilePath":{"order":2,"scope":"machine","type":"string","markdownDescription":"Path to a file (`TF_LOG_PATH`) for Terraform executions to be logged used by the the Terraform Language Server. Support for variables (e.g. timestamp, pid, ppid) via Go template syntax `{{varName}}`"}}},{"title":"Experimental Features","order":4,"properties":{"terraform.experimentalFeatures.validateOnSave":{"description":"Enable validating the currently open file on save","scope":"window","type":"boolean","default":false},"terraform.experimentalFeatures.prefillRequiredFields":{"markdownDescription":"Enable autocompletion for required fields when completing Terraform blocks. Combine with `#editor.suggest.preview#` and the editor will provide inline snippet suggestions for blocks of code","scope":"window","type":"boolean","default":false}}}],"commands":[{"command":"terraform.generateBugReport","title":"HashiCorp Terraform: Generate Bug Report"},{"command":"terraform.enableLanguageServer","title":"HashiCorp Terraform: Enable Language Server"},{"command":"terraform.disableLanguageServer","title":"HashiCorp Terraform: Disable Language Server"},{"command":"terraform.init","title":"HashiCorp Terraform: init"},{"command":"terraform.initCurrent","title":"HashiCorp Terraform: init current folder","icon":"$(cloud-download)"},{"command":"terraform.validate","title":"HashiCorp Terraform: validate"},{"command":"terraform.plan","title":"HashiCorp Terraform: plan"},{"command":"terraform.modules.refreshList","title":"Refresh Module Calls","icon":"$(refresh)"},{"command":"terraform.providers.refreshList","title":"Refresh Module Providers","icon":"$(refresh)"},{"command":"terraform.modules.openDocumentation","title":"Open Documentation","icon":"$(book)"},{"command":"terraform.providers.openDocumentation","title":"Open Documentation","icon":"$(book)"},{"command":"terraform.cloud.login","title":"HCP Terraform: Login","enablement":"terraform.cloud.signed-in === false"},{"command":"terraform.cloud.workspaces.refresh","title":"Refresh","icon":"$(refresh)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.workspaces.viewInBrowser","title":"View workspace","icon":"$(globe)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.runs.refresh","title":"Refresh","icon":"$(refresh)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.run.viewInBrowser","title":"View run","icon":"$(globe)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.run.plan.downloadLog","title":"View raw plan log","icon":"$(console)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.run.viewPlan","title":"View plan output","icon":"$(output)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.run.apply.downloadLog","title":"View raw apply log","icon":"$(output)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.run.viewApply","title":"View apply output","icon":"$(output)"},{"command":"terraform.cloud.organization.picker","title":"HCP Terraform: Pick Organization","icon":"$(account)","enablement":"terraform.cloud.signed-in"},{"command":"terraform.cloud.workspaces.filterByProject","title":"Filter by project","icon":"$(filter)","enablement":"terraform.cloud.signed-in"}],"menus":{"commandPalette":[{"command":"terraform.enableLanguageServer","when":"config.terraform.languageServer.enable == false"},{"command":"terraform.disableLanguageServer","when":"config.terraform.languageServer.enable == true"},{"command":"terraform.init","when":"config.terraform.languageServer.enable == true"},{"command":"terraform.initCurrent","when":"config.terraform.languageServer.enable == true"},{"command":"terraform.validate","when":"config.terraform.languageServer.enable == true"},{"command":"terraform.plan","when":"config.terraform.languageServer.enable == true"},{"command":"terraform.modules.refreshList","when":"false"},{"command":"terraform.providers.refreshList","when":"false"},{"command":"terraform.modules.openDocumentation","when":"false"},{"command":"terraform.providers.openDocumentation","when":"false"},{"command":"terraform.cloud.login","when":"terraform.cloud.signed-in === false && terraform.cloud.views.visible"},{"command":"terraform.cloud.organization.picker","when":"terraform.cloud.signed-in"},{"command":"terraform.cloud.workspaces.viewInBrowser","when":"false"},{"command":"terraform.cloud.run.viewInBrowser","when":"false"},{"command":"terraform.cloud.run.plan.downloadLog","when":"false"},{"command":"terraform.cloud.run.viewPlan","when":"false"},{"command":"terraform.cloud.runs.refresh","when":"false"},{"command":"terraform.cloud.run.apply.downloadLog","when":"false"},{"command":"terraform.cloud.run.viewApply","when":"false"},{"command":"terraform.cloud.workspaces.filterByProject","when":"false"},{"command":"terraform.cloud.workspaces.refresh","when":"false"}],"view/title":[{"command":"terraform.modules.refreshList","when":"view == terraform.modules","group":"navigation"},{"command":"terraform.providers.refreshList","when":"view == terraform.providers","group":"navigation"},{"command":"terraform.initCurrent","when":"view == terraform.providers","group":"navigation"},{"command":"terraform.cloud.workspaces.filterByProject","when":"view == terraform.cloud.workspaces","group":"navigation"},{"command":"terraform.cloud.organization.picker","when":"view == terraform.cloud.workspaces","group":"navigation"},{"command":"terraform.cloud.workspaces.refresh","when":"view == terraform.cloud.workspaces","group":"navigation"},{"command":"terraform.cloud.runs.refresh","when":"view == terraform.cloud.runs","group":"navigation"}],"view/item/context":[{"command":"terraform.modules.openDocumentation","when":"view == terraform.modules"},{"command":"terraform.providers.openDocumentation","when":"view == terraform.providers && viewItem == moduleProviderHasDocs"},{"command":"terraform.cloud.workspaces.viewInBrowser","when":"view == terraform.cloud.workspaces && viewItem =~ /hasLink/","group":"inline"},{"command":"terraform.cloud.run.viewInBrowser","when":"view == terraform.cloud.runs && viewItem =~ /isRun/","group":"inline"},{"command":"terraform.cloud.run.plan.downloadLog","when":"view == terraform.cloud.runs && viewItem =~ /hasRawPlan/","group":"inline"},{"command":"terraform.cloud.run.viewPlan","when":"view == terraform.cloud.runs && viewItem =~ /hasStructuredPlan/","group":"inline"},{"command":"terraform.cloud.run.apply.downloadLog","when":"view == terraform.cloud.runs && viewItem =~ /hasRawApply/","group":"inline"},{"command":"terraform.cloud.run.viewApply","when":"view == terraform.cloud.runs && viewItem =~ /hasStructuredApply/","group":"inline"}]},"views":{"terraform":[{"id":"terraform.providers","name":"Providers"},{"id":"terraform.modules","name":"Module Calls"}],"terraform-cloud":[{"id":"terraform.cloud.workspaces","name":"Workspaces","contextualTitle":"HCP Terraform workspaces"},{"id":"terraform.cloud.runs","name":"Runs","contextualTitle":"HCP Terraform runs"}],"terraform-cloud-panel":[{"id":"terraform.cloud.run.plan","name":"Plan","when":"terraform.cloud.run.viewingPlan"},{"id":"terraform.cloud.run.apply","name":"Apply","when":"terraform.cloud.run.viewingApply"}]},"viewsContainers":{"activitybar":[{"id":"terraform","title":"HashiCorp Terraform","icon":"assets/icons/vs_code_terraform.svg"},{"id":"terraform-cloud","title":"HCP Terraform","icon":"assets/icons/vs_code_terraform_cloud.svg"}],"panel":[{"id":"terraform-cloud-panel","title":"HCP Terraform","icon":"assets/icons/vs_code_terraform_cloud.svg"}]},"viewsWelcome":[{"view":"terraform.providers","contents":"This view requires the language server to be enabled:\n[Open Settings](command:terraform.openSettingsJson)","when":"config.terraform.languageServer.enable === false"},{"view":"terraform.providers","contents":"There are no open Terraform files. Please open a Terraform configuration file to see installed providers.","when":"config.terraform.languageServer.enable && terraform.providers.documentOpened === false"},{"view":"terraform.providers","contents":"The active document is not a Terraform file. Please open a Terraform configuration file to see installed providers.","when":"config.terraform.languageServer.enable && terraform.providers.documentIsTerraform === false"},{"view":"terraform.providers","contents":"There are no installed providers found for the current open file.\n[Learn more about providers](https://www.terraform.io/docs/language/providers/index.html)","when":"config.terraform.languageServer.enable && terraform.providers.noProviders === true"},{"view":"terraform.providers","contents":"The active editor cannot provide information about installed providers.\n[Learn more about providers](https://www.terraform.io/docs/language/providers/index.html)","when":"config.terraform.languageServer.enable && terraform.providers.noResponse === true"},{"view":"terraform.modules","contents":"This view requires the language server to be enabled:\n[Open Settings](command:terraform.openSettingsJson)","when":"config.terraform.languageServer.enable === false"},{"view":"terraform.modules","contents":"There are no open Terraform files. Please open a Terraform configuration file to see installed modules.","when":"config.terraform.languageServer.enable && terraform.modules.documentOpened === false"},{"view":"terraform.modules","contents":"The active document is not a Terraform file. Please open a Terraform configuration file to see installed modules.","when":"config.terraform.languageServer.enable && terraform.modules.documentIsTerraform === false"},{"view":"terraform.modules","contents":"There are no installed modules found for the current open file.\n[Learn more about modules](https://www.terraform.io/docs/language/modules/develop/index.html)","when":"config.terraform.languageServer.enable && terraform.modules.noModules === true"},{"view":"terraform.modules","contents":"The active editor cannot provide information about installed modules.\n[Learn more about modules](https://www.terraform.io/docs/language/modules/develop/index.html)","when":"config.terraform.languageServer.enable && terraform.modules.noResponse === true"},{"view":"terraform.cloud.workspaces","contents":"In order to use HCP Terraform features, you need to be logged in\n[Login to HCP Terraform](command:terraform.cloud.login)","when":"terraform.cloud.signed-in === false"},{"view":"terraform.cloud.workspaces","contents":"No organizations found for this token. Please create a new HCP Terraform organization to get started\n[Create or select an organization](command:terraform.cloud.organization.picker)","when":"terraform.cloud.signed-in && !terraform.cloud.organizationsExist && !terraform.cloud.organizationsChosen"},{"view":"terraform.cloud.workspaces","contents":"Please choose an organization:\n[Select a organization](command:terraform.cloud.organization.picker)","when":"terraform.cloud.signed-in && terraform.cloud.organizationsExist && !terraform.cloud.organizationsChosen"},{"view":"terraform.cloud.workspaces","contents":"There are no workspaces in this organization.\n[Create a new workspace](command:terraform.cloud.workspaces.picker)\n[Choose a different organization](command:terraform.cloud.organization.picker)","when":"terraform.cloud.signed-in && terraform.cloud.organizationsExist && terraform.cloud.organizationsChosen && !terraform.cloud.projectFilterUsed && !terraform.cloud.workspacesExist && !terraform.cloud.pendingOrgMembership"},{"view":"terraform.cloud.workspaces","contents":"You have not yet accepted the invitation to this organization\n[See pending invitations](command:terraform.cloud.organization.viewInBrowser)\n[Choose a different organization](command:terraform.cloud.organization.picker)","when":"terraform.cloud.signed-in && terraform.cloud.organizationsExist && terraform.cloud.organizationsChosen && !terraform.cloud.projectFilterUsed && !terraform.cloud.workspacesExist && terraform.cloud.pendingOrgMembership"},{"view":"terraform.cloud.workspaces","contents":"There are no workspaces in this project\n[Create a new workspace](command:terraform.cloud.workspaces.picker)\n[Clear filter](command:terraform.cloud.workspaces.resetProjectFilter)","when":"terraform.cloud.signed-in && terraform.cloud.organizationsExist && terraform.cloud.organizationsChosen && terraform.cloud.projectFilterUsed && !terraform.cloud.workspacesExist"},{"view":"terraform.cloud.runs","contents":"Select a workspace to view a list of runs"},{"view":"terraform.cloud.run.plan","contents":"Select a run to view a plan"},{"view":"terraform.cloud.run.apply","contents":"Select a run to view an apply"}]},"scripts":{"prepare":"npm run download:artifacts && cd src/test/e2e && npm install","compile":"webpack","compile:test":"tsc --project ./","compile:test:watch":"tsc --project ./ --watch","compile:prod":"webpack --mode production --devtool hidden-source-map","watch":"webpack --watch --mode development","web":"npm run compile && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ./testFixture","web:serve":"npx serve --cors -l 5001","web:tunnel":"npx localtunnel -p 5001","download:artifacts":"ts-node ./build/downloader.ts","vscode:prepublish":"npm run compile:prod","package":"vsce package","test":"npm run compile:test && vscode-test","lint":"eslint src --ext ts","prettier":"prettier \"**/*.+(js|json|ts)\"","format":"npm run prettier -- --write","check-format":"npm run prettier -- --check","wdio":"npm run compile && wdio run ./src/test/e2e/wdio.conf.ts","changelog:build":"changie batch auto && changie merge && npm i --package-lock-only"},"dependencies":{"@vscode/extension-telemetry":"^0.4.9","@zodios/core":"^10.9.2","@zodios/plugins":"^10.6.0","axios":"^1.4.0","semver":"^7.5.4","vscode-languageclient":"^9.0.1","vscode-uri":"^3.0.7","which":"^3.0.1","zod":"^3.21.4"},"devDependencies":{"@hashicorp/js-releases":"^1.7.1","@playwright/browser-chromium":"^1.39.0","@types/chai":"^4.3.5","@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"^18.x","@types/vscode":"~1.86","@types/webpack-env":"^1.18.0","@types/which":"^3.0.0","@typescript-eslint/eslint-plugin":"^5.59.5","@typescript-eslint/parser":"^5.59.5","@vscode/test-cli":"^0.0.9","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.50","@vscode/vsce":"^2.19.0","@wdio/cli":"^8.38.1","@wdio/local-runner":"^8.38.0","@wdio/mocha-framework":"^8.38.0","@wdio/spec-reporter":"^8.38.0","assert":"^2.0.0","chai":"^4.3.7","esbuild-loader":"^4.1.0","eslint":"^8.40.0","eslint-config-prettier":"^8.8.0","eslint-plugin-prettier":"^4.2.1","mocha":"^10.2.0","msw":"^2.0.11","prettier":"^2.8.8","process":"^0.11.10","ts-loader":"^9.4.2","ts-node":"^10.9.2","typescript":"^5.1.3","wdio-vscode-service":"^6.0.3","wdio-wait-for":"^3.0.11","webpack":"^5.82.0","webpack-cli":"^5.1.1"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/hashicorp.terraform-2.30.2-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"HashiCorp","metadata":{"id":"4a23294b-fd16-4c51-9759-da9936474cf8","publisherId":"a8dd781d-e144-400a-943c-417165981be2","publisherDisplayName":"HashiCorp","targetPlatform":"linux-x64","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1718920967464,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.16.1","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-release"},"bugs":{"url":"https://aka.ms/microsoft/vscode-copilot-release"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.90.0","npm":">=9.0.0","node":">=18.0.0"},"categories":["Programming Languages","Machine Learning","Education","Snippets"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","chatProvider","codeActionAI","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findFiles2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipantAdditions","defaultChatParticipant","chatVariableResolver","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider","chatParticipantPrivate"],"contributes":{"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot or type / for commands","isDefault":true,"locations":["panel"]},{"id":"github.copilot.editor","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot or type / for commands","isDefault":true,"locations":["editor"],"defaultImplicitVariables":["_inlineChatContext","_inlineChatDocument"],"commands":[{"name":"doc","description":"Add documentation comment for this symbol"},{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent.enabled"},{"name":"tests","description":"Generate unit tests for the selected code"},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"github.copilot.chat.fixTestFailures.enabled"}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot or type / for commands","isDefault":true,"locations":["notebook"],"defaultImplicitVariables":["_inlineChatContext","_inlineChatDocument","_notebookChatInput"],"commands":[]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","sampleRequest":"How do I build this project?","commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent.enabled"},{"name":"tests","description":"Generate unit tests for the selected code"},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?"},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"github.copilot.chat.fixTestFailures.enabled"},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","sampleRequest":"What is the command to open the integrated terminal?","commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"api","description":"Ask about VS Code extension development","sampleRequest":"How do I add text to the status bar?"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel","terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]}],"languageModels":{"vendor":"copilot"},"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"workbench.panel.chat.view.copilot","contents":"Sign in with GitHub to use Copilot, your AI pair programmer.\n[Sign In](command:github.copilotChat.signIn)","when":"!github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled"},{"view":"workbench.panel.chat.view.copilot","contents":"Get started with GitHub Copilot.\n\n[Start 30-day Free Trial](https://github.com/github-copilot/signup?editor=vscode)\n\n If you have a different account with a Copilot subscription, you can [sign in to that account](command:github.copilotChat.signIn?%22force%22).","when":"github.copilot.interactiveSession.individual.disabled"},{"view":"workbench.panel.chat.view.copilot","contents":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"view":"workbench.panel.chat.view.copilot","contents":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"view":"workbench.panel.chat.view.copilot","contents":"You are currently offline. Please connect to the internet to use Copilot.\n[Retry Connection](command:github.copilot.offline)","when":"github.copilot.offline"}],"commands":[{"command":"github.copilotChat.signIn","title":"Sign in to Chat","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.explain","title":"Explain This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.explain.palette","title":"Explain This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review","title":"Review This","enablement":"github.copilot.advanced.review.contextmenu.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.palette","title":"Review This","enablement":"github.copilot.advanced.review.palette.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.apply","title":"Suggest Change","icon":"$(sparkle)","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.discard","title":"Discard","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.stagedChanges","title":"Review Staged Changes with Copilot","icon":"$(sparkle)","enablement":"github.copilot.advanced.review.scmviewlet.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.changes","title":"Review Changes with Copilot","icon":"$(sparkle)","enablement":"github.copilot.advanced.review.scmviewlet.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.review.continueInChat","title":"Continue in Chat","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generate","title":"Generate This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveEditor.fix","title":"Fix This","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.ghpr.applySuggestion","title":"Apply Suggestion with Copilot","icon":"$(sparkle)","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelection","title":"Explain This (Terminal)","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","title":"Copilot: Explain This","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Command (Terminal)","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message with Copilot","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration with Copilot","category":"GitHub Copilot"},{"command":"github.copilot.debug.contentExclusions","title":"View Content Exclusion Session Info","category":"GitHub Copilot","enablement":"github.copilot.copilotIgnoreEnabled"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"},{"command":"github.copilot.chat.attachFile","title":"Add File to Chat","category":"GitHub Copilot","enablement":"resourceScheme == 'file'"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","category":"GitHub Copilot","enablement":"editorHasSelection && resourceScheme == 'file'"}],"configuration":{"title":"Copilot","properties":{"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Enable/disable copilot code actions"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Enable/disable copilot automatic rename suggestions"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.welcomeMessage":{"type":"string","default":"first","markdownDescription":"Control when to show the detailed welcome chat message.","markdownEnumDescriptions":["Show the welcome message once per session","Always show the detailed welcome message","Never show the detailed welcome message"],"enum":["first","always","never"]},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where char queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection.","tags":["experimental"]},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.preferredAccount":{"type":"string","markdownDescription":"Preferred GitHub account for GitHub Copilot"}}},"submenus":[{"id":"copilot","label":"Copilot"}],"menus":{"editor/context":[{"submenu":"copilot","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"1_copilot@0"}],"copilot":[{"command":"github.copilot.chat.attachFile","when":"resourceScheme == 'file'","group":"context@2"},{"command":"github.copilot.chat.attachSelection","when":"editorHasSelection && resourceScheme == 'file'","group":"context@1"},{"command":"inlineChat.start","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilot@1"},{"command":"github.copilot.interactiveEditor.explain","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@1"},{"command":"github.copilot.interactiveEditor.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@2"},{"command":"github.copilot.interactiveEditor.review","when":"github.copilot.advanced.review.contextmenu.enabled && !github.copilot.interactiveSession.disabled","group":"copilotAction@3"},{"command":"github.copilot.interactiveEditor.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@4"},{"command":"github.copilot.interactiveEditor.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@5"}],"terminal/context":[{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","group":"1_copilot@0"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.interactiveEditor.explain","when":"false"},{"command":"github.copilot.interactiveEditor.review","when":"false"},{"command":"github.copilot.interactiveEditor.review.palette","when":"github.copilot.advanced.review.palette.enabled && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.interactiveEditor.review.apply","when":"false"},{"command":"github.copilot.interactiveEditor.review.discard","when":"false"},{"command":"github.copilot.interactiveEditor.review.discardAll","when":"false"},{"command":"github.copilot.interactiveEditor.review.stagedChanges","when":"false"},{"command":"github.copilot.interactiveEditor.review.changes","when":"false"},{"command":"github.copilot.interactiveEditor.review.previous","when":"false"},{"command":"github.copilot.interactiveEditor.review.next","when":"false"},{"command":"github.copilot.interactiveEditor.review.continueInChat","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.ghpr.applySuggestion","when":"false"}],"view/title":[{"command":"github.copilot.interactiveSession.feedback","when":"view == workbench.panel.chat.view.copilot"},{"command":"github.copilot.debug.contentExclusions","when":"view == workbench.panel.chat.view.copilot && github.copilot.copilotIgnoreEnabled"}],"comments/comment/title":[{"command":"github.copilot.ghpr.applySuggestion","title":"Apply Suggestion with Copilot","group":"inline@0","when":"commentController =~ /^github-review/ && !(comment =~ /hasSuggestion/)"}],"commentsView/commentThread/context":[{"command":"github.copilot.interactiveEditor.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.interactiveEditor.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.interactiveEditor.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"command":"github.copilot.interactiveEditor.review.apply","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.interactiveEditor.review.continueInChat","group":"inline@2","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.interactiveEditor.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.interactiveEditor.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.interactiveEditor.review.discard","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.interactiveEditor.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"scm/resourceGroup/context":[{"command":"github.copilot.interactiveEditor.review.stagedChanges","when":"github.copilot.advanced.review.scmviewlet.enabled && scmProvider == git && scmResourceGroup == index","group":"inline@3"},{"command":"github.copilot.interactiveEditor.review.changes","when":"github.copilot.advanced.review.scmviewlet.enabled && scmProvider == git && scmResourceGroup == workingTree","group":"inline@3"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri && github.copilot.chat.fixTestFailures.enabled","group":"inline@1"}]},"icons":{"copilot-logo":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"]}]},"extensionPack":["GitHub.copilot"],"isPreRelease":false},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/github.copilot-chat-0.16.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1719061682761,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"timonwong.shellcheck","uuid":"f95d8fff-f70a-4ae5-bb06-5c47ddbc8fc6"},"manifest":{"name":"shellcheck","displayName":"ShellCheck","description":"Integrates ShellCheck into VS Code, a linter for Shell scripts.","version":"0.37.1","publisher":"timonwong","author":"Timon Wong <timon86.wang@gmail.com> (https://github.com/timonwong)","contributors":["Felipe Santos <felipecassiors@gmail.com> (https://github.com/felipecrs)"],"license":"MIT","categories":["Linters","Programming Languages"],"keywords":["shell","shellscript","linter","lint","sh","bash","dash","ksh","posix"],"homepage":"https://github.com/vscode-shellcheck/vscode-shellcheck#readme","private":true,"repository":{"type":"git","url":"https://github.com/vscode-shellcheck/vscode-shellcheck.git"},"bugs":{"url":"https://github.com/vscode-shellcheck/vscode-shellcheck/issues"},"sponsor":{"url":"https://github.com/vscode-shellcheck/vscode-shellcheck"},"icon":"shellcheck.png","activationEvents":["onLanguage:shellscript","workspaceContains:**/.shellcheckrc"],"main":"./dist/extension.js","capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only the user defined `shellcheck` executable will be taken into account when running in untrusted mode.","restrictedConfigurations":["shellcheck.executablePath"]},"virtualWorkspaces":{"supported":false,"description":"Virtual Workspaces are not supported due to dependency on a local `shellcheck` binary."}},"contributes":{"snippets":[{"language":"shellscript","path":"./snippets/snippets.json"}],"languages":[{"id":"shellcheckrc","extensions":[".shellcheckrc"],"configuration":"./languages/shellcheckrc/language-configuration.json"},{"id":"shellcheck-output","configuration":"./languages/shellcheck-output/language-configuration.json"}],"grammars":[{"language":"shellcheckrc","scopeName":"source.shellcheckrc","path":"./languages/shellcheckrc/tmLanguage.json"},{"language":"shellcheck-output","scopeName":"shellcheck-output","path":"./languages/shellcheck-output/tmLanguage.json"}],"commands":[{"command":"shellcheck.runLint","title":"ShellCheck: Lint Current Document"},{"command":"shellcheck.collectDiagnostics","title":"ShellCheck: Collect Diagnostics For Current Document"}],"configuration":{"title":"ShellCheck","type":"object","properties":{"shellcheck.enable":{"description":"Whether ShellCheck is enabled or not.","type":"boolean","scope":"resource","default":true},"shellcheck.enableQuickFix":{"description":"Whether to enable the _Quick Fix_ feature or not.","type":"boolean","scope":"resource","default":true},"shellcheck.executablePath":{"description":"Path to the `shellcheck` executable (bundled binaries will be used if empty).","examples":["shellcheck"],"type":"string","scope":"machine-overridable"},"shellcheck.run":{"description":"Whether ShellCheck is run on save, on type, or manually.","type":"string","enum":["onSave","onType","manual"],"scope":"resource","default":"onType"},"shellcheck.exclude":{"markdownDescription":"Exclude certain error codes. For example, to exclude [SC1017](https://shellcheck.net/wiki/SC1017), enter _1017_. Enumerated error codes can be found [in this gist](https://gist.github.com/nicerobot/53cee11ee0abbdc997661e65b348f375). Always prefer to use a `.shellcheckrc` file instead of this setting.","type":"array","items":{"type":"string","pattern":"^(SC)?\\d{4}$","patternErrorMessage":"Valid shellcheck error code should be 4-digit numbers, 1017 for example.\n"},"scope":"resource","default":[],"examples":[["1017"]]},"shellcheck.customArgs":{"markdownDescription":"Custom arguments to pass when calling the `shellcheck` binary. Always prefer to use a `.shellcheckrc` file instead of this setting.","type":"array","items":{"type":"string"},"scope":"resource","default":[],"examples":[["--external-sources"]]},"shellcheck.ignorePatterns":{"markdownDescription":"Configure glob patterns for excluding files and folders by ShellCheck. Glob patterns are interpreted relative to the workspace's root folder. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/glob-patterns).","examples":[{"**/*.zsh":true,"**/*.zsh*":true,"**/.git/*.sh":true,"**/folder/**/*.sh":true}],"type":"object","scope":"resource","additionalProperties":{"type":"boolean","description":"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."},"default":{"**/*.csh":true,"**/*.cshrc":true,"**/*.fish":true,"**/*.login":true,"**/*.logout":true,"**/*.tcsh":true,"**/*.tcshrc":true,"**/*.xonshrc":true,"**/*.xsh":true,"**/*.zsh":true,"**/*.zshrc":true,"**/zshrc":true,"**/*.zprofile":true,"**/zprofile":true,"**/*.zlogin":true,"**/zlogin":true,"**/*.zlogout":true,"**/zlogout":true,"**/*.zshenv":true,"**/zshenv":true,"**/*.zsh-theme":true}},"shellcheck.ignoreFileSchemes":{"description":"Matching file schemes are being ignored by shellcheck.","type":"array","items":{"type":"string"},"scope":"application","default":["git","gitfs","output"]},"shellcheck.useWorkspaceRootAsCwd":{"description":"Whether to use the workspace root directory as the current working directory when launching `shellcheck`. Otherwise, the directory of the file being linted will be used.","type":"boolean","scope":"resource","default":false},"shellcheck.logLevel":{"description":"The trace level the extension logs at, defaults to 'info'.","type":"string","scope":"window","enum":["trace","debug","info","warn","error","off"],"default":"info"},"shellcheck.disableVersionCheck":{"description":"Whether to disable shellcheck binary version check, which prompts for updating when an outdated version is found.","type":"boolean","scope":"machine-overridable","default":false}}}},"scripts":{"prepare":"bindl","build":"webpack","build:watch":"webpack --watch","build:prod":"webpack --mode production --devtool hidden-source-map","build:test":"tsc --project tsconfig.test.json","build:test:watch":"tsc --project tsconfig.test.json --watch","build:all":"run-p build build:test","build:all:watch":"run-p build:watch build:test:watch","vscode:prepublish":"npm run build:prod","package":"vsce package","publish":"vsce publish","lint":"eslint .","lint:fix":"eslint --fix .","format":"prettier --write . **/*.sh","format:check":"prettier --check . **/*.sh","spell":"cspell \"**\"","pretest":"npm run build:all","test":"node ./out/test/runTest.js","posttest":"npm run lint && npm run format:check && npm run spell","release":"semantic-release"},"dependencies":{"execa":"^5.1.1","lodash":"^4.17.21","minimatch":"^9.0.3","semver":"^7.6.0"},"devDependencies":{"@semantic-release/changelog":"^6.0.3","@semantic-release/git":"^10.0.1","@types/lodash":"^4.17.0","@types/mocha":"^10.0.6","@types/node":"^16.18.96","@types/semver":"^7.5.8","@types/vscode":"~1.66.0","@typescript-eslint/eslint-plugin":"^7.6.0","@typescript-eslint/parser":"^7.6.0","@vscode/test-electron":"^2.3.9","bindl":"^4.2.5","conventional-changelog-conventionalcommits":"^7.0.2","cspell":"^8.7.0","eslint":"^8.57.0","eslint-config-prettier":"^9.1.0","glob":"^10.3.12","kind-of":"^6.0.3","mocha":"^10.4.0","npm-run-all":"^4.1.5","prettier":"^3.2.5","prettier-plugin-sh":"^0.14.0","semantic-release":"^23.0.2","semantic-release-stop-before-publish":"^1.0.0","semantic-release-vsce":"^5.7.1","ts-loader":"^9.5.1","typescript":"^5.4.5","webpack":"^5.91.0","webpack-cli":"^5.1.4"},"overrides":{"keytar":"./see_vscode_vsce_issue_786"},"engines":{"vscode":"^1.66.0"},"volta":{"node":"20.11.1","npm":"10.5.0"},"shellcheckVersion":"0.10.0"},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/timonwong.shellcheck-0.37.1-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Timon Wong","metadata":{"id":"f95d8fff-f70a-4ae5-bb06-5c47ddbc8fc6","publisherId":"04757770-dd50-443e-aae4-e1c7cf9c24f5","publisherDisplayName":"Timon Wong","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1718930125177,"pinned":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"github.copilot","uuid":"23c4aeee-f844-43cd-b53e-1113e483f1a6"},"manifest":{"name":"copilot","displayName":"GitHub Copilot","description":"Your AI pair programmer","version":"1.206.0","build":"948","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot?editor=vscode","license":"https://docs.github.com/en/site-policy/github-terms/github-terms-for-additional-products-and-features","bugs":{"url":"https://github.com/community/community/discussions/categories/copilot"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","extensionPack":["GitHub.copilot-chat"],"engines":{"vscode":"^1.79.0","node":">=16.14.0","npm":">=9.0.0"},"categories":["Programming Languages","Machine Learning","Education","Snippets"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions"],"contributes":{"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and with less work","when":"!isWeb","steps":[{"id":"copilot.signin","title":"Sign in with GitHub","description":"To get started with Copilot, sign in with your GitHub account.\nDouble-check to use the right GitHub account. You can also sign in later using the account menu.\n \n[Sign In](command:github.copilot.signIn)","when":"!github.copilot.activated","completionEvents":["onContext:github.copilot.activated"],"media":{"image":"assets/walkthrough/sign-in.svg","altText":"Sign in to GitHub via Copilot's notification or VS Code's account menu"}},{"id":"copilot.firstsuggest","title":"AI-powered suggestions","description":"Copilot suggests lines of code **as you type** and multiple lines for **function signatures**.\n  \n**Prompts in comments** make suggestions specific to your desired outcome, logic and steps.\n  \n[Getting started videos](https://github.com/features/copilot/getting-started?utm_source=editor&utm_medium=walkthrough&utm_campaign=2024q3-em-MSFT-videolandingpage)","media":{"svg":"assets/walkthrough/ai-powered-suggestions.svg","altText":"Different types of suggestions visualized"}},{"id":"copilot.chatWin","title":"Chat with Copilot","description":"Ask Copilot general programming questions with chat. Copilot can also fix problems, scaffold tests, or refactor your code. Type ``/`` to view all available chat commands. Use `ctrl + shift + i` to open inline chat.\n[Chat with Copilot](command:workbench.panel.chat.view.copilot.focus)","when":"isWindows && !github.copilot.interactiveSession.disabled","media":{"svg":"assets/walkthrough/copilot-chat.svg","altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.chatNonWin","title":"Chat with Copilot","description":"Ask Copilot general programming questions with chat. Copilot can also fix problems, scaffold tests, or refactor your code. Type ``/`` to view all available chat commands. Use `cmd + shift + i` to open inline chat.\n[Chat with Copilot](command:workbench.panel.chat.view.copilot.focus)","when":"!isWindows && !github.copilot.interactiveSession.disabled","media":{"svg":"assets/walkthrough/copilot-chat.svg","altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.realfiles.openrecent","title":"Harness the power of context","description":"The **more specific context** you provide Copilot, the **better** suggestions get! Context is not just current code and comments, but other open files.\n  \n[Try Copilot in Your Code](command:workbench.action.openRecent)","when":"workspaceFolderCount == 0","media":{"svg":"assets/walkthrough/code-as-context.svg","altText":"An editor with code being suggested by Copilot in gray text"}},{"id":"copilot.realfiles.quickopen","title":"Harness the power of context","description":"The **more context** you give Copilot, the **better** suggestions get! Context is not just the current code, but other open files.\n  \n[Try Copilot in Your Code](command:workbench.action.quickOpen)","when":"workspaceFolderCount != 0","media":{"svg":"assets/walkthrough/code-as-context.svg","altText":"An editor with code being suggested by Copilot in gray text"}},{"id":"copilot.iterate","title":"You are in control","description":"Just as you would review a colleague's code, you should always assess, analyze, and validate AI-generated code.\n  \nIf the first suggestion doesn't work, Copilot can generate more options. You can edit the Copilot settings and keyboard shortcuts to personalize your experience.\n  \n[Edit keyboard shortcuts](command:workbench.action.openGlobalKeybindings?%5B%22copilot%22%5D)\n  \n[Personalize settings](command:workbench.action.openSettings?%5B%22copilot%22%5D)","media":{"image":"assets/walkthrough/you-are-in-control.svg","altText":"An editor with a toolbar widget overlay showing arrows for navigating multiple suggestions from Copilot"}},{"id":"copilot.creativity","title":"Powered by your creativity","description":"Pair up with AI to outline your idea in a comment, then generate the implementation, and then test suites. Or, work backwards from example output!\nCopilot will keep surprising you as you challenge it.\n  \n[Prompts, tips, and use cases](https://code.visualstudio.com/docs/copilot/prompt-crafting)","media":{"svg":"assets/walkthrough/powered-by-your-creativity.svg","altText":"Metrics showing how much Copilot increases productivity for developers. The metrics read: 74% focus on more satisfying work. 88% feel more productive. 96% are faster with more repetitive tasks."}}]}],"commands":[{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept panel suggestion at the cursor","category":"GitHub Copilot"},{"command":"github.copilot.signIn","title":"Sign In","category":"GitHub Copilot","enablement":"!github.copilot.activated"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the previous panel suggestion","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the next panel suggestion","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","category":"GitHub Copilot"},{"command":"github.copilot.toggleCopilot","title":"Enable/Disable Copilot completions","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot"},{"command":"github.copilot.openLogs","title":"Open Logs","category":"GitHub Copilot"}],"keybindings":[{"command":"github.copilot.generate","key":"ctrl+enter","mac":"ctrl+enter","when":"editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused && !commentEditorFocused"},{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && config.github.copilot.inlineSuggest.enable && !inlineSuggestionsVisible"}],"menus":{"editor/inlineCompletions/actions":[{"command":"github.copilot.generate","when":"github.copilot.activated"}],"commandPalette":[{"command":"github.copilot.generate","when":"github.copilot.activated"},{"command":"github.copilot.toggleCopilot","when":"github.copilot.activated"},{"command":"github.copilot.sendFeedback","when":"github.copilot.activated"},{"command":"github.copilot.collectDiagnostics"}]},"configuration":[{"title":"Copilot","properties":{"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.overrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API full URL"},"debug.testOverrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"additionalProperties":"boolean","markdownDescription":"Enable or disable Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)"},"github.copilot.inlineSuggest.enable":{"type":"boolean","default":true,"deprecationMessage":"Deprecated: Please use github.copilot.editor.enableAutoCompletions instead.","description":"Show inline suggestions"},"github.copilot.editor.enableAutoCompletions":{"type":"boolean","scope":"language-overridable","default":true,"description":"Automatically show inline completions"}}}],"configurationDefaults":{"editor.tokenColorCustomizations":{"[*Light*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#000"}}]},"[*Dark*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#fff"}}]}}},"languages":[{"id":"code-referencing"}],"grammars":[{"language":"code-referencing","scopeName":"text.ref","path":"./syntaxes/ref.tmGrammar.json"}],"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}},"copilot-chat":{"description":"GitHub Copilot chat icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\F101"}},"copilot-blocked":{"description":"GitHub Copilot blocked icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0045"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}]},"scripts":{"build":"tsx .esbuild.ts","clean":"./script/build/clean.sh","forbid-sources-content:extension":"node script/forbid-sources-content.js --extension","generate_languages":"ts-node script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","get_token":"ts-node script/getToken.ts","lint":"run-p --aggregate-output \"lint:*\"","lint:deps":"depcruise -c .dependency-cruiser.js .","lint:eslint":"eslint -f visualstudio --cache .","lint:prettier":"prettier --check . 2>&1","lint:types":"tsc --noEmit && tsc --noEmit -p extension/src/copilotPanel/webview","prebuild":"./script/build/clean-deprecated-modules.sh && npm install","pretest":"npm run build","pretest:extension":"npm run build","pretest:lsp-client":"npm run build","prewatch":"npm run build","start":"npm run watch","test":"npm-run-all \"test:* --ignore-scripts\" lint","test:agent":"mocha \"agent/src/**/*.test.ts\"","test:extension":"tsx extension/test/runTest.ts","test:lib":"mocha \"lib/src/**/*.test.ts\"","test:lib-e2e":"mocha \"lib/e2e/src/**/*.test.ts\"","test:lsp-client":"npm -C lsp-client run test","test:prompt":"npm -C prompt run test","vscode-dts":"vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"run-s \"build --ignore-scripts\" forbid-sources-content:extension","vscode:uninstall":"node dist/extensionUninstalled.js","vsix":"vsce package","watch":"run-p watch:*","watch:root":"tsx .esbuild.ts --watch","watch:types":"tsc --noEmit --watch --preserveWatchOutput"},"devDependencies":{"@datadog/datadog-ci":"^2.38.1","@github/prettier-config":"0.0.6","@types/crypto-js":"^4.1.1","@types/diff":"^5.0.9","@types/git-url-parse":"^9.0.1","@types/js-yaml":"^4.0.6","@types/kerberos":"^1.1.2","@types/mocha":"^10.0.6","@types/node":"^16.18.24","@types/sinon":"^10.0.15","@types/uuid":"^9.0.7","@types/vscode":"1.79.0","@types/yargs":"^17.0.24","@typescript-eslint/eslint-plugin":"^6.18.0","@typescript-eslint/parser":"^6.18.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.21.0","benchmark":"^2.1.4","boxen":"^7.1.1","chalk":"^4.1.2","dependency-cruiser":"^13.0.2","electron":"^28.1.4","esbuild":"^0.19.9","esbuild-plugin-copy":"^2.1.1","esbuild-plugin-summary":"^0.0.2","eslint":"^8.56.0","eslint-plugin-no-only-tests":"^3.1.0","fantasticon":"^2.0.0","glob":"^10.3.4","js-yaml":"^4.1.0","mocha":"^10.3.0","mocha-junit-reporter":"^2.2.1","mocha-multi-reporters":"^1.5.1","npm-run-all":"^4.1.5","pkg":"^5.8.1","prettier":"3.0.1","prettier-plugin-organize-imports":"^3.2.4","proxy":"^2.1.1","sinon":"^16.0.0","ts-dedent":"^2.2.0","ts-mocha":"^10.0.0","ts-node":"^10.9.1","tsx":"^4.7.1","typed-emitter":"^2.1.0","typescript":"^5.1.6","vscode-dts":"^0.3.3","zlib":"^1.0.5"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#1088e599270f36632703f138d88c2100cbe468db","@github/memoize":"1.1.4","@microsoft/1ds-post-js":"^4.0.5","@microsoft/applicationinsights-web-basic":"^3.1.0","@microsoft/tiktokenizer":"^1.0.7","@roamhq/mac-ca":"^1.0.7","@sinclair/typebox":"^0.31.28","@types/vscode-webview":"^1.57.4","@vscode/webview-ui-toolkit":"^1.3.1","chokidar":"^3.6.0","crypto-js":"^4.2.0","diff":"^5.2.0","dldr":"^0.0.10","get-stream":"^6.0.1","git-url-parse":"^13.1.0","ignore":"^5.2.4","jhaystack":"^0.1.8","kerberos":"^2.0.1","minimatch":"^9.0.3","open":"^8.4.2","semver":"^7.5.4","shiki":"^1.1.2","source-map-support":"^0.5.21","uuid":"^9.0.1","vscode-languageserver":"^9.0.0","vscode-languageserver-protocol":"^3.17","vscode-languageserver-textdocument":"~1.0.11","vscode-uri":"^3.0.7","web-tree-sitter":"^0.20.8","windows-ca-certs":"^0.0.3","yargs":"^17.7.2"},"overrides":{"fsevents":"<0","bindings":"github:devm33/node-bindings#6b57e6883b34dbb6942467a7e49afce99d9d6832"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/github.copilot-1.206.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"id":"23c4aeee-f844-43cd-b53e-1113e483f1a6","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1719061508895,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-vscode.makefile-tools","uuid":"e09cf600-90a1-414e-92a0-031f1a5391c6"},"manifest":{"name":"makefile-tools","displayName":"Makefile Tools","description":"Provide makefile support in VS Code: C/C++ IntelliSense, build, debug/run.","version":"0.9.10","publisher":"ms-vscode","preview":true,"icon":"res/makefile-logo.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.74.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-makefile-tools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-makefile-tools.git"},"homepage":"https://github.com/Microsoft/vscode-makefile-tools","qna":"https://github.com/Microsoft/vscode-makefile-tools/issues","keywords":["C","C++","IntelliSense","Microsoft","Makefile"],"categories":["Programming Languages","Debuggers","Other"],"activationEvents":["onCommand:makefile.setBuildConfiguration","onCommand:makefile.getConfiguration","onCommand:makefile.setBuildTarget","onCommand:makefile.getBuildTarget","onCommand:makefile.buildTarget","onCommand:makefile.buildCleanTarget","onCommand:makefile.buildAll","onCommand:makefile.buildCleanAll","onCommand:makefile.setLaunchConfiguration","onCommand:makefile.launchDebug","onCommand:makefile.launchRun","onCommand:makefile.launchTargetPath","onCommand:makefile.getLaunchTargetPath","onCommand:makefile.launchTargetFileName","onCommand:makefile.getLaunchTargetFileName","onCommand:makefile.getLaunchTargetDirectory","onCommand:makefile.getLaunchTargetArgs","onCommand:makefile.getLaunchTargetArgsConcat","onCommand:makefile.makeBaseDirectory","onCommand:makefile.configure","onCommand:makefile.cleanConfigure","onCommand:makefile.preConfigure","onCommand:makefile.postConfigure","onCommand:makefile.outline.setBuildConfiguration","onCommand:makefile.outline.setBuildTarget","onCommand:makefile.outline.buildTarget","onCommand:makefile.outline.buildCleanTarget","onCommand:makefile.outline.setLaunchConfiguration","onCommand:makefile.outline.launchDebug","onCommand:makefile.outline.launchRun","onCommand:makefile.outline.configure","onCommand:makefile.outline.cleanConfigure","onCommand:makefile.outline.preConfigure","onCommand:makefile.outline.postConfigure","onCommand:makefile.resetState","workspaceContains:**/makefile","workspaceContains:**/Makefile","workspaceContains:**/GNUmakefile"],"main":"./dist/main","contributes":{"commands":[{"command":"makefile.buildTarget","title":"Makefile: Build the current target"},{"command":"makefile.buildCleanTarget","title":"Makefile: Build clean the current target"},{"command":"makefile.buildAll","title":"Makefile: Build the target ALL"},{"command":"makefile.buildCleanAll","title":"Makefile: Build clean the target ALL"},{"command":"makefile.launchDebug","title":"Makefile: Debug the selected binary target"},{"command":"makefile.launchRun","title":"Makefile: Run the selected binary target in the terminal"},{"command":"makefile.setBuildConfiguration","title":"Makefile: Set the current build configuration"},{"command":"makefile.setBuildTarget","title":"Makefile: Set the target to be built by make"},{"command":"makefile.setLaunchConfiguration","title":"Makefile: Set the make launch configuration"},{"command":"makefile.configure","title":"Makefile: Configure"},{"command":"makefile.cleanConfigure","title":"Makefile: Clean Configure"},{"command":"makefile.preConfigure","title":"Makefile: Pre-Configure"},{"command":"makefile.postConfigure","title":"Makefile: Post-Configure"},{"command":"makefile.outline.buildTarget","title":"Makefile: Build the current target","icon":{"light":"res/light/build.svg","dark":"res/dark/build.svg"}},{"command":"makefile.outline.buildCleanTarget","title":"Makefile: Build clean the current target"},{"command":"makefile.outline.launchDebug","title":"Makefile: Debug the selected binary target","icon":"$(debug)","enablement":"makefile:localDebugFeature"},{"command":"makefile.outline.launchRun","title":"Makefile: Run the selected binary target in the terminal","icon":"$(run)","enablement":"makefile:localRunFeature"},{"command":"makefile.outline.setBuildConfiguration","title":"Makefile: Set the current build configuration","icon":"$(notebook-edit)"},{"command":"makefile.outline.setBuildTarget","title":"Makefile: Set the target to be built by make","icon":"$(notebook-edit)"},{"command":"makefile.outline.setLaunchConfiguration","title":"Makefile: Set the make launch configuration","icon":"$(notebook-edit)"},{"command":"makefile.outline.openMakefilePathSetting","title":"Makefile: Open Makefile Path Setting","icon":"$(notebook-edit)"},{"command":"makefile.outline.openMakefileFile","title":"Makefile: Open Makefile File","icon":"$(open-preview)"},{"command":"makefile.outline.openMakePathSetting","title":"Makefile: Open Make Path Setting","icon":"$(notebook-edit)"},{"command":"makefile.outline.openBuildLogSetting","title":"Makefile: Open Build Log Setting","icon":"$(notebook-edit)"},{"command":"makefile.outline.openBuildLogFile","title":"Makefile: Open Build Log File","icon":"$(open-preview)"},{"command":"makefile.outline.configure","title":"Makefile: Configure","icon":"$(settings)"},{"command":"makefile.outline.cleanConfigure","title":"Makefile: Clean Configure"},{"command":"makefile.outline.preConfigure","title":"Makefile: Pre-Configure"},{"command":"makefile.outline.postConfigure","title":"Makefile: Post-Configure"},{"command":"makefile.resetState","title":"Makefile: Reset the Makefile Tools Extension workspace state (For troubleshooting)"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"makefile-tools","fileLocation":["autoDetect","${command:makefile.makeBaseDirectory}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}},{"name":"msvc","source":"msvc","owner":"makefile-tools","base":"$msCompile","fileLocation":["autoDetect","${command:makefile.makeBaseDirectory}"]}],"configuration":{"type":"object","title":"Makefile Tools","properties":{"makefile.configurations":{"type":"array","default":[],"description":"The user defined makefile configurations","items":{"type":"object","default":null,"properties":{"name":{"type":"string","description":"The name of the makefile configuration"},"makefilePath":{"type":"string","description":"File path to the makefile"},"makePath":{"type":"string","description":"File path to the make command"},"makeDirectory":{"type":"string","description":"Folder path passed to make via the -C switch"},"makeArgs":{"type":"array","description":"Arguments to pass to the make command","items":{"type":"string"},"default":[]},"problemMatchers":{"type":"array","items":{"type":"string"},"default":["$gcc","$msvc"],"description":"Problem matcher names to use when building the current target"},"buildLog":{"type":"string","description":"File path to the build log used instead of dry-run output"},"preConfigureArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments to pass to the pre-configure script"},"postConfigureArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments to pass to the post-configure script"}}},"scope":"resource"},"makefile.defaultLaunchConfiguration":{"type":"object","default":null,"description":"Various global debugger settings","properties":{"MIMode":{"type":"string","description":"The non VS debugger type: gdb or lldb","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to the non VS debugger (gdb or lldb)"},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target","default":false},"symbolSearchPath":{"type":"string","description":"The path to the symbols"}},"scope":"resource"},"makefile.launchConfigurations":{"type":"array","default":[],"description":"The user defined launch (debug/run) configurations","items":{"type":"object","default":null,"properties":{"binaryPath":{"type":"string","description":"The full path to the binary to run or debug"},"binaryArgs":{"type":"array","description":"Arguments to pass to program command line","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program"},"MIMode":{"type":"string","description":"The non VS debugger type: gdb or lldb","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to the non VS debugger (gdb or lldb)"},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target","default":false},"symbolSearchPath":{"type":"string","description":"The path to the symbols"}}},"scope":"resource"},"makefile.loggingLevel":{"type":"string","enum":["Normal","Verbose","Debug"],"default":"Normal","description":"The logging level for the makefile tools extension","scope":"resource"},"makefile.makePath":{"type":"string","default":"make","description":"The path to the make tool","scope":"resource"},"makefile.makeDirectory":{"type":"string","description":"The folder path to be passed to make via the switch -C","scope":"resource"},"makefile.makefilePath":{"type":"string","description":"The path to the makefile of the project","scope":"resource"},"makefile.buildLog":{"type":"string","description":"The path to the build log that is read to bypass a dry-run","default":null,"scope":"resource"},"makefile.extensionOutputFolder":{"type":"string","description":"The path to various output files produced by the extension. Defaults to the VS Code workspace storage location.","default":"","scope":"resource"},"makefile.extensionLog":{"type":"string","description":"The path to an output file storing all content from the Makefile output channel. Defaults to the value of the 'makefile.extensionOutputFolder' setting.","default":"","scope":"resource"},"makefile.configurationCachePath":{"type":"string","description":"The path to a cache file storing the output of the last dry-run make command. When unset, a file named 'configurationCache.log' is stored at the path specified by the 'makefile.extensionOutputFolder' setting.","default":"","scope":"resource"},"makefile.dryrunSwitches":{"type":"array","default":["--always-make","--keep-going","--print-directory"],"description":"Arguments to pass to the dry-run make invocation","items":{"type":"string"},"scope":"resource"},"makefile.additionalCompilerNames":{"type":"array","default":[],"description":"Names of compiler tools to be added to the extension known list","items":{"type":"string"},"scope":"resource"},"makefile.excludeCompilerNames":{"type":"array","default":[],"description":"Names of compiler tools to be excluded from the extension known list","items":{"type":"string"},"scope":"resource"},"makefile.configureOnOpen":{"type":"boolean","default":true,"description":"Automatically configure Makefile project directories when they are opened","scope":"resource"},"makefile.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure Makefile project directories when any relevant makefiles and/or settings are changed","scope":"resource"},"makefile.configureAfterCommand":{"type":"boolean","default":true,"description":"Automatically configure Makefile project directories after relevant operations, like change build configuration or makefile target","scope":"resource"},"makefile.preConfigureScript":{"type":"string","description":"The path to the script that needs to be run at least once before configure","default":null,"scope":"resource"},"makefile.preConfigureArgs":{"type":"array","description":"Arguments to pass to the pre-configure script","items":{"type":"string"},"default":[]},"makefile.postConfigureScript":{"type":"string","description":"The path to the script that needs to be run at least once after configure","default":null,"scope":"resource"},"makefile.postConfigureArgs":{"type":"array","description":"Arguments to pass to the post-configure script","items":{"type":"string"},"default":[]},"makefile.alwaysPreConfigure":{"type":"boolean","description":"Always run the pre-configure script before configure","default":false,"scope":"resource"},"makefile.alwaysPostConfigure":{"type":"boolean","description":"Always run the post-configure script after configure","default":false,"scope":"resource"},"makefile.ignoreDirectoryCommands":{"type":"boolean","description":"Don't analyze directory changing commands like cd, push, pop.","default":true,"scope":"resource"},"makefile.phonyOnlyTargets":{"type":"boolean","default":false,"description":"Display only the phony targets","scope":"resource"},"makefile.saveBeforeBuildOrConfigure":{"type":"boolean","default":true,"description":"Save opened files before building or configuring","scope":"resource"},"makefile.buildBeforeLaunch":{"type":"boolean","default":true,"description":"Build the current target before launch (debug/run)","scope":"resource"},"makefile.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear the output channel at the beginning of a build","scope":"resource"},"makefile.compileCommandsPath":{"type":"string","default":null,"description":"The path to the compilation database file","scope":"resource"},"makefile.panel.visibility":{"type":"object","default":null,"properties":{"debug":{"type":"boolean","description":"Enable debugging locally (in this host) images built by this extension","default":true},"run":{"type":"boolean","description":"Enable running locally (in this host) images built by this extension","default":true}}}}},"viewsContainers":{"activitybar":[{"id":"makefile__viewContainer","title":"Makefile","when":"makefile:fullFeatureSet","icon":"res/viewcontainer.svg"}]},"views":{"makefile__viewContainer":[{"id":"makefile.outline","when":"isWorkspaceTrusted || makefile:testing","name":"Project Outline"}]},"menus":{"commandPalette":[{"command":"makefile.configure","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.cleanConfigure","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.outline.openMakefilePathSetting","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.outline.openMakefileFile","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.outline.openMakePathSetting","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.outline.openBuildLogSetting","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.outline.openBuildLogFile","when":"isWorkspaceTrusted || makefile:testing"},{"command":"makefile.preConfigure","when":"makefile:fullFeatureSet"},{"command":"makefile.postConfigure","when":"makefile:fullFeatureSet"},{"command":"makefile.buildTarget","when":"makefile:fullFeatureSet"},{"command":"makefile.buildCleanTarget","when":"makefile:fullFeatureSet"},{"command":"makefile.buildAll","when":"makefile:fullFeatureSet"},{"command":"makefile.buildCleanAll","when":"makefile:fullFeatureSet"},{"command":"makefile.launchDebug","when":"makefile:localDebugFeature"},{"command":"makefile.launchRun","when":"makefile:localRunFeature"},{"command":"makefile.setBuildConfiguration","when":"makefile:fullFeatureSet"},{"command":"makefile.setBuildTarget","when":"makefile:fullFeatureSet"},{"command":"makefile.setLaunchConfiguration","when":"makefile:localDebugFeature"},{"command":"makefile.outline.configure","when":"never"},{"command":"makefile.outline.cleanConfigure","when":"never"},{"command":"makefile.outline.preConfigure","when":"never"},{"command":"makefile.outline.postConfigure","when":"never"},{"command":"makefile.outline.buildTarget","when":"never"},{"command":"makefile.outline.buildCleanTarget","when":"never"},{"command":"makefile.outline.launchDebug","when":"never"},{"command":"makefile.outline.launchRun","when":"never"},{"command":"makefile.outline.setBuildConfiguration","when":"never"},{"command":"makefile.outline.setBuildTarget","when":"never"},{"command":"makefile.outline.setLaunchConfiguration","when":"never"},{"command":"makefile.resetState","when":"isWorkspaceTrusted || makefile:testing"}],"view/title":[{"command":"makefile.outline.preConfigure","when":"view == makefile.outline","group":"1_makefileOutline@1"},{"command":"makefile.outline.postConfigure","when":"view == makefile.outline","group":"1_makefileOutline@2"},{"command":"makefile.outline.configure","when":"view == makefile.outline","group":"1_makefileOutline@3"},{"command":"makefile.outline.cleanConfigure","when":"view == makefile.outline","group":"1_makefileOutline@4"},{"command":"makefile.outline.buildTarget","when":"makefile:fullFeatureSet && view == makefile.outline","group":"navigation@1"},{"command":"makefile.outline.buildCleanTarget","when":"makefile:fullFeatureSet && view == makefile.outline","group":"1_makefileOutline@4"},{"command":"makefile.outline.launchDebug","when":"makefile:fullFeatureSet && view == makefile.outline && makefile:localDebugFeature","group":"navigation@2"},{"command":"makefile.outline.launchRun","when":"makefile:fullFeatureSet && view == makefile.outline && makefile:localRunFeature","group":"navigation@3"}],"view/item/context":[{"command":"makefile.outline.configure","when":"view == makefile.outline && viewItem =~ /nodeType=configuration/","group":"1_stateActions@1"},{"command":"makefile.outline.cleanConfigure","when":"view == makefile.outline && viewItem =~ /nodeType=configuration/","group":"1_stateActions@2"},{"command":"makefile.outline.setBuildConfiguration","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=configuration/","group":"inline@1"},{"command":"makefile.outline.buildTarget","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=buildTarget/","group":"1_stateActions@1"},{"command":"makefile.outline.buildCleanTarget","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=buildTarget/","group":"1_stateActions@2"},{"command":"makefile.outline.setBuildTarget","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=buildTarget/","group":"inline@1"},{"command":"makefile.outline.launchDebug","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=launchTarget/","group":"1_stateActions@1"},{"command":"makefile.outline.launchRun","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=launchTarget/","group":"1_stateActions@2"},{"command":"makefile.outline.setLaunchConfiguration","when":"makefile:fullFeatureSet && view == makefile.outline && viewItem =~ /nodeType=launchTarget/","group":"inline@1"},{"command":"makefile.outline.openMakefilePathSetting","when":"view == makefile.outline && viewItem =~ /nodeType=makefilePathInfo/","group":"inline@2"},{"command":"makefile.outline.openMakefileFile","when":"view == makefile.outline && viewItem =~ /nodeType=makefilePathInfo/ && makefile.makefileFilePresent","group":"inline@1"},{"command":"makefile.outline.openMakePathSetting","when":"view == makefile.outline && viewItem =~ /nodeType=makePathInfo/","group":"inline@1"},{"command":"makefile.outline.openBuildLogSetting","when":"view == makefile.outline && viewItem =~ /nodeType=buildLogPathInfo/","group":"inline@1"},{"command":"makefile.outline.openBuildLogFile","when":"view == makefile.outline && viewItem =~ /nodeType=buildLogPathInfo/ && makefile.buildLogFilePresent","group":"inline@1"}]}},"scripts":{"vscode:prepublish":"yarn compile-production","compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && yarn run bundle-assets && webpack --env BUILD_VSCODE_NLS=true --mode production","bundle-assets":"gulp bundle-assets","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","watch":"tsc -watch -p ./","package":"vsce package --yarn -o makefile-tools.vsix","pretest":"tsc -p test.tsconfig.json","test":"yarn run pretest && node ./out/src/test/runTest.js"},"devDependencies":{"@types/mocha":"^9.0.0","@types/node":"^10.17.17","@types/uuid":"^9.0.7","@types/vscode":"^1.74.0","tslint":"^5.20.1","tslint-microsoft-contrib":"^6.2.0","tslint-no-unused-expression-chai":"^0.1.4","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","typescript":"^5.0.2","vsce":"^1.95.0","vrsource-tslint-rules":"^6.0.0","vscode-nls-dev":"^3.3.2","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","fs-extra":"^9.1.0","@octokit/rest":"^18.1.1","parse-git-config":"^3.0.0","jsonc-parser":"^3.0.0","@vscode/test-electron":"^2.3.8","ts-loader":"^8.0.17","webpack":"^5.76.0","webpack-cli":"^4.5.0"},"dependencies":{"@types/glob":"^7.1.1","glob":"^7.1.6","module-alias":"^2.2.2","uuid":"^9.0.1","vscode-cpptools":"^6.1.0","vscode-nls":"^5.0.0","@vscode/extension-telemetry":"^0.6.2","vscode-jsonrpc":"^3.6.2"},"resolutions":{"ansi-regex":"^5.0.1","glob-parent":"^5.1.2","markdown-it":"^12.3.2","minimist":"^1.2.6","nanoid":"^3.1.20","minimatch":"^3.0.5","xml2js":"^0.5.0"},"capabilities":{"untrustedWorkspaces":{"supported":false,"description":""}}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-vscode.makefile-tools-0.9.10","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"id":"e09cf600-90a1-414e-92a0-031f1a5391c6","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1719061516468,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-vscode.vscode-speech","uuid":"e6610e16-9699-4e1d-a5d7-9bb1643db131"},"manifest":{"name":"vscode-speech","displayName":"VS Code Speech","version":"0.8.0","icon":"resources/logo.png","publisher":"ms-vscode","author":{"name":"Microsoft Corporation"},"description":"A VS Code extension to bring speech-to-text and other voice capabilities to VS Code.","license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.88.0"},"contributes":{"commands":[{"command":"vscode-speech.openSettings","title":"Extension Settings"}],"menus":{"extension/context":[{"command":"vscode-speech.openSettings","group":"2_configure","when":"extension==ms-vscode.vscode-speech"}]},"speechProviders":[{"name":"vscode-speech","description":"A VS Code extension to bring speech-to-text and other voice capabilities to VS Code."}]},"keywords":["Accessibility","a11y","STT","ai","co-pilot","Chat","Voice","Transcription","Microsoft","multi-root ready"],"categories":["Other"],"private":true,"homepage":"https://github.com/microsoft/vscode/wiki/VS-Code-Speech","bugs":{"url":"https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Aworkbench-voice"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-speech"},"extensionKind":["ui"],"activationEvents":["onSpeech"],"enabledApiProposals":["speech"],"main":"./dist/main.js","scripts":{"vscode:prepublish":"npm run esbuild -- --minify","esbuild":"esbuild ./out/extension.js --bundle --outfile=dist/main.js --external:vscode --external:@vscode/node-speech --external:path --format=cjs --platform=node","generate-key":"node build/generate-key.js","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/mocha":"^10.0.2","@types/node":"18.x","@types/vscode":"^1.85.0","@typescript-eslint/eslint-plugin":"^6.7.3","@typescript-eslint/parser":"^6.7.3","@vscode/test-electron":"^2.3.8","esbuild":"^0.19.5","eslint":"^8.50.0","glob":"^10.3.3","mocha":"^10.2.0","typescript":"^5.2.2"},"dependencies":{"@vscode/node-speech":"^1.3.2"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-vscode.vscode-speech-0.8.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"id":"e6610e16-9699-4e1d-a5d7-9bb1643db131","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1719061554310,"pinned":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ginfuru.ginfuru-better-solarized-dark-theme","uuid":"c47db04d-78f4-45b5-a824-73d9f20efc78"},"manifest":{"name":"ginfuru-better-solarized-dark-theme","displayName":"Better Solarized","description":"A Better Solarized theme for Visual Studio Code include light and dark versions","version":"0.10.9","publisher":"ginfuru","engines":{"vscode":"^1.13.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Better Solarized Dark","uiTheme":"vs-dark","path":"./themes/better-solarized-dark.json"},{"label":"Better Solarized Dark Italics","uiTheme":"vs-dark","path":"./themes/better-solarized-dark-italic.json"},{"label":"Better Solarized Light","uiTheme":"vs","path":"./themes/better-solarized-light.json"},{"label":"Better Selenized Dark","uiTheme":"vs-dark","path":"./themes/better-selenized-dark.json"},{"label":"Better Selenized Light","uiTheme":"vs","path":"./themes/better-selenized-light.json"}]},"icon":"images/icon.png","galleryBanner":{"color":"#00212b","theme":"dark"},"keywords":["solarized","solarized dark","solarized light","selenized","selenized dark","selenized light","sublime","atom"],"license":"See license inf license.txt","homepage":"https://github.com/ginfuru/vscode-better-solarized","repository":{"type":"git","url":"https://github.com/ginfuru/vscode-better-solarized.git"},"bugs":"https://github.com/ginfuru/vscode-better-solarized/issues","packageManager":"pnpm@9.0.0+sha256.bdfc9a7b372b5c462176993e586492603e20da5864d2f8881edc2462482c76fa","scripts":{"build":"pnpm dlx @11ty/eleventy","serve":"pnpm dlx @11ty/eleventy --watch","release":"gh release create v$npm_package_version --generate-notes --latest","publish":"vsce publish"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ginfuru.ginfuru-better-solarized-dark-theme-0.10.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Ed Heltzel","metadata":{"id":"c47db04d-78f4-45b5-a824-73d9f20efc78","publisherId":"e4159f93-1b6e-4dd8-b879-3bc62c30dad0","publisherDisplayName":"Ed Heltzel","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1719061629036,"pinned":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-vscode.vscode-speech","uuid":"e6610e16-9699-4e1d-a5d7-9bb1643db131"},"manifest":{"name":"vscode-speech","displayName":"VS Code Speech","version":"0.10.0","icon":"resources/logo.png","publisher":"ms-vscode","author":{"name":"Microsoft Corporation"},"description":"A VS Code extension to bring speech-to-text and other voice capabilities to VS Code.","license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.90.0"},"contributes":{"commands":[{"command":"vscode-speech.openSettings","title":"Extension Settings"}],"menus":{"extension/context":[{"command":"vscode-speech.openSettings","group":"2_configure","when":"extension==ms-vscode.vscode-speech"}]},"speechProviders":[{"name":"vscode-speech","description":"A VS Code extension to bring speech-to-text and other voice capabilities to VS Code."}]},"keywords":["Accessibility","a11y","STT","ai","co-pilot","Chat","Voice","Transcription","Microsoft","multi-root ready"],"categories":["Other"],"private":true,"homepage":"https://github.com/microsoft/vscode/wiki/VS-Code-Speech","bugs":{"url":"https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Aworkbench-voice"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-speech"},"extensionKind":["ui"],"activationEvents":["onSpeech"],"enabledApiProposals":["speech"],"main":"./dist/main.js","scripts":{"vscode:prepublish":"npm run esbuild -- --minify","esbuild":"esbuild ./out/extension.js --bundle --outfile=dist/main.js --external:vscode --external:@vscode/node-speech --external:path --format=cjs --platform=node","generate-key":"node build/generate-key.js","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/mocha":"^10.0.2","@types/node":"20.x","@types/vscode":"^1.85.0","@typescript-eslint/eslint-plugin":"^6.7.3","@typescript-eslint/parser":"^6.7.3","@vscode/test-electron":"^2.3.8","esbuild":"^0.19.5","eslint":"^8.50.0","glob":"^10.3.3","mocha":"^10.2.0","typescript":"^5.4.x"},"dependencies":{"@vscode/node-speech":"^1.3.4"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-vscode.vscode-speech-0.10.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"id":"e6610e16-9699-4e1d-a5d7-9bb1643db131","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"installedTimestamp":1719061682777,"pinned":false,"preRelease":false,"source":"gallery"},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"eamodio.gitlens","uuid":"4de763bd-505d-4978-9575-2b7696ecf94e"},"manifest":{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more","version":"15.1.0","engines":{"vscode":"^1.82.0"},"license":"SEE LICENSE IN LICENSE","publisher":"eamodio","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"homepage":"https://gitkraken.com/gitlens","bugs":{"url":"https://github.com/gitkraken/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/gitkraken/vscode-gitlens.git"},"main":"./dist/gitlens.js","browser":"./dist/browser/gitlens.js","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/gitkraken--community-gitlens-blue.svg?logo=slack&labelColor=555555","href":"https://slack.gitkraken.com/","description":"Join us in the #gitlens channel"}],"categories":["Other","SCM Providers"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["onAuthenticationRequest:gitlens-gitkraken","onFileSystem:gitlens","onWebviewPanel:gitlens.focus","onWebviewPanel:gitlens.graph","onWebviewPanel:gitlens.patchDetails","onWebviewPanel:gitlens.settings","onWebviewPanel:gitlens.timeline","onWebviewPanel:gitlens.welcome","onStartupFinished"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited"}},"contributes":{"configuration":[{"id":"current-line-blame","title":"Inline Blame","order":10,"properties":{"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an inline blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window","order":10},"gitlens.currentLine.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the inline blame annotation. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.currentLine.format":{"type":"string","default":"${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}","markdownDescription":"Specifies the format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting","scope":"window","order":30},"gitlens.currentLine.uncommittedChangesFormat":{"type":"string","default":null,"markdownDescription":"Specifies the uncommitted changes format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting.\n\n**NOTE**: Setting this to an empty string will disable inline blame annotations for uncommitted changes.","scope":"window","order":31},"gitlens.currentLine.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the inline blame annotation","scope":"window","order":33},"gitlens.currentLine.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the inline blame annotation","scope":"window","order":34},"gitlens.currentLine.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the inline blame annotation","scope":"window","order":35},"gitlens.currentLine.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the inline blame annotation","scope":"window","order":36},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the inline blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.","scope":"window","order":40},"gitlens.currentLine.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) for the inline blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":50}}},{"id":"git-code-lens","title":"Git CodeLens","order":11,"properties":{"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window","scope":"window","order":10},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window","order":20},"gitlens.codeLens.authors.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Searches for commits within the range","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.toggleFileBlame","markdownDescription":"Specifies the command to be executed when an _authors_ CodeLens is clicked","scope":"window","order":21},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block","scope":"window","order":30},"gitlens.codeLens.recentChange.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.showQuickCommitFileDetails","markdownDescription":"Specifies the command to be executed when a _recent change_ CodeLens is clicked","scope":"window","order":31},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds CodeLens at the top of the document","Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":0,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where Git CodeLens will be shown in the document","scope":"language-overridable","order":40},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`","scope":"language-overridable","order":50},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git CodeLens on symbols that span only a single line","scope":"window","order":60},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes","scope":"window","order":70},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes","scope":"window","order":71},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes","scope":"window","order":72},"gitlens.codeLens.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":73},"gitlens.codeLens.scopesByLanguage":{"deprecationMessage":"Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead","markdownDeprecationMessage":"Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead"}}},{"id":"status-bar-blame","title":"Status Bar Blame","order":12,"properties":{"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window","order":10},"gitlens.statusBar.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.statusBar.format":{"type":"string","default":"${author}, ${agoOrDate}${' via 'pullRequest}","markdownDescription":"Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting","scope":"window","order":30},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window","order":40},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.toggleCodeLens","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Toggles Git CodeLens","Compares the current line commit with the previous","Compares the current line commit with the working tree","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window","order":50},"gitlens.statusBar.tooltipFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window","order":70},"gitlens.statusBar.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"hovers","title":"Hovers","order":13,"properties":{"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window","order":10},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window","order":20},"gitlens.hovers.avatarSize":{"type":"number","default":32,"markdownDescription":"Specifies the size of the avatar images in hovers","scope":"window","order":21},"gitlens.hovers.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.hovers.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.hovers.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window","order":40},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window","order":41},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window","order":42},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window","order":43},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window","order":50},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window","order":51},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window","order":52},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window","order":53},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window","order":70}}},{"id":"views","title":"Views","order":20,"properties":{"gitlens.views.collapseWorktreesWhenPossible":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to try to collapse the opened worktrees into a single (common) repository in the views when possible","scope":"window","order":1},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window","order":10},"gitlens.views.pageItemLimit":{"type":"number","default":40,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window","order":11},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window","order":20},"gitlens.views.formats.commits.label":{"type":"string","default":"${❰ tips|11? ❱➤  }${message}","markdownDescription":"Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":30},"gitlens.views.formats.commits.description":{"type":"string","default":"${author, }${agoOrDate}","markdownDescription":"Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":31},"gitlens.views.formats.commits.tooltip":{"type":"string","default":"${link}${' via 'pullRequest}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}","markdownDescription":"Specifies the tooltip format (in markdown) of commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.commits.tooltipWithStatus":{"type":"string","default":"${link}${' via 'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;&nbsp;&nbsp;&nbsp;'tips}\n\n${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}","markdownDescription":"Specifies the tooltip format (in markdown) of \"file\" commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.files.label":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":40},"gitlens.views.formats.files.description":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":41},"gitlens.views.formats.stashes.label":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":50},"gitlens.views.formats.stashes.description":{"type":"string","default":"${stashOnRef, }${agoOrDate}","markdownDescription":"Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":51},"gitlens.views.openChangesInMultiDiffEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to open multiple changes in the multi-diff editor (single tab) or in individual diff editors (multiple tabs)","scope":"window","order":60},"gitlens.views.commitFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.commitFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.commitFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.commits.files.label#` instead"},"gitlens.views.commitDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.commits.description#` instead"},"gitlens.views.stashFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.stashFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.stashFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.stashes.files.label#` instead"},"gitlens.views.stashDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.stashes.description#` instead"},"gitlens.views.statusFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.statusFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"}}},{"id":"commits-view","title":"Commits View","order":21,"properties":{"gitlens.views.commits.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Commits_ view","scope":"window","order":10},"gitlens.views.commits.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commits.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.commits.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":23},"gitlens.views.commits.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commits_ view will display files","scope":"window","order":30},"gitlens.views.commits.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commits.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commits.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commits_ view will display file icons","scope":"window","order":33},"gitlens.views.commits.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view","scope":"window","order":40},"gitlens.views.commits.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"commit-details-view","title":"Inspect View","order":22,"properties":{"gitlens.views.commitDetails.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.views.commitDetails.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.commitDetails.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for associated pull requests. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commitDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commitDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commit Details_ view will display files","scope":"window","order":30},"gitlens.views.commitDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commitDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commitDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commit Details_ view will display file icons","scope":"window","order":33},"gitlens.views.commitDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commit Details_ view","scope":"window","order":40}}},{"id":"repositories-view","title":"Repositories View","order":23,"properties":{"gitlens.views.repositories.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Repositories_ view","scope":"window","order":10},"gitlens.views.repositories.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view","scope":"window","order":11},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window","order":12},"gitlens.views.repositories.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.repositories.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.repositories.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.repositories.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view","scope":"window","order":30},"gitlens.views.repositories.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Repositories_ view","scope":"window","order":31},"gitlens.views.repositories.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Repositories_ view","scope":"window","order":32},"gitlens.views.repositories.showStashes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Repositories_ view","scope":"window","order":33},"gitlens.views.repositories.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Repositories_ view","scope":"window","order":34},"gitlens.views.repositories.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Repositories_ view","scope":"window","order":35},"gitlens.views.repositories.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Repositories_ view","scope":"window","order":36},"gitlens.views.repositories.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view","scope":"window","order":37},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window","order":40},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window","order":50},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window","order":60},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window","order":70},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window","order":80},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.repositories.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Repositories_ view will display file icons","scope":"window","order":83},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window","order":90},"gitlens.views.repositories.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Repositories_ view","scope":"window","order":100},"gitlens.views.repositories.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"pull-request-view","title":"Pull Request View","order":21,"properties":{"gitlens.views.pullRequest.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.pullRequest.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Pull Request_ view will display files","scope":"window","order":30},"gitlens.views.pullRequest.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.pullRequest.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.pullRequest.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Pull Request_ view will display file icons","scope":"window","order":33},"gitlens.views.pullRequest.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Pull Request_ view","scope":"window","order":40}}},{"id":"file-history-view","title":"File History View","order":24,"properties":{"gitlens.views.fileHistory.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.fileHistory.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.fileHistory.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _File History_ view will display files","scope":"window","order":30},"gitlens.views.fileHistory.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.fileHistory.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.fileHistory.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _File History_ view will display file icons","scope":"window","order":33},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window","order":20},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames","scope":"window","order":100},"gitlens.advanced.fileHistoryShowAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show commits from all branches","scope":"window","order":101},"gitlens.advanced.fileHistoryShowMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show merge commits","scope":"window","order":102}}},{"id":"line-history-view","title":"Line History View","order":25,"properties":{"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window","order":10},"gitlens.views.lineHistory.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"branches-view","title":"Branches View","order":26,"properties":{"gitlens.views.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) in the _Branches_ view","scope":"window","order":10},"gitlens.views.branches.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.branches.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.branches.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.branches.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Branches_ view will display branches","scope":"window","order":30},"gitlens.views.branches.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Branches_ view will display files","scope":"window","order":50},"gitlens.views.branches.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.branches.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.branches.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Branches_ view will display file icons","scope":"window","order":53},"gitlens.views.branches.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view","scope":"window","order":60},"gitlens.views.branches.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":70}}},{"id":"remotes-view","title":"Remotes View","order":27,"properties":{"gitlens.views.remotes.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.remotes.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.remotes.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":12},"gitlens.views.remotes.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Remotes_ view will display branches","scope":"window","order":20},"gitlens.views.remotes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Remotes_ view will display files","scope":"window","order":30},"gitlens.views.remotes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.remotes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.remotes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Remotes_ view will display file icons","scope":"window","order":33},"gitlens.views.remotes.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view","scope":"window","order":40},"gitlens.views.remotes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"stashes-view","title":"Stashes View","order":28,"properties":{"gitlens.views.stashes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Stashes_ view will display files","scope":"window","order":10},"gitlens.views.stashes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`","scope":"window","order":11},"gitlens.views.stashes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`","scope":"window","order":12},"gitlens.views.stashes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Stashes_ view will display file icons","scope":"window","order":13},"gitlens.views.stashes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"tags-view","title":"Tags View","order":29,"properties":{"gitlens.views.tags.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays tags as a list","Displays tags as a tree when tags names contain slashes `/`"],"markdownDescription":"Specifies how the _Tags_ view will display tags","scope":"window","order":10},"gitlens.views.tags.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Tags_ view will display files","scope":"window","order":30},"gitlens.views.tags.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.tags.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.tags.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Tags_ view will display file icons","scope":"window","order":33},"gitlens.views.tags.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view","scope":"window","order":40},"gitlens.views.tags.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"worktrees-view","title":"Worktrees View","order":30,"properties":{"gitlens.worktrees.promptForLocation":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to prompt for a path when creating new worktrees","scope":"resource","order":10},"gitlens.worktrees.defaultLocation":{"type":"string","default":null,"markdownDescription":"Specifies the default path in which new worktrees will be created","scope":"resource","order":11},"gitlens.worktrees.openAfterCreate":{"type":"string","default":"prompt","enum":["always","alwaysNewWindow","onlyWhenEmpty","never","prompt"],"enumDescriptions":["Always open the new worktree in the current window","Always open the new worktree in a new window","Only open the new worktree in the current window when no folder is opened","Never open the new worktree","Always prompt to open the new worktree"],"markdownDescription":"Specifies how and when to open a worktree after it is created","scope":"resource","order":12},"gitlens.views.worktrees.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the worktree branch with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag, etc) in the _Worktrees_ view","scope":"window","order":20},"gitlens.views.worktrees.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.worktrees.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.worktrees.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.worktrees.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Worktrees_ view will display files","scope":"window","order":40},"gitlens.views.worktrees.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`","scope":"window","order":41},"gitlens.views.worktrees.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`","scope":"window","order":42},"gitlens.views.worktrees.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Worktrees_ view will display file icons","scope":"window","order":43},"gitlens.views.worktrees.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view","scope":"window","order":50},"gitlens.views.worktrees.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":60}}},{"id":"contributors-view","title":"Contributors View","order":31,"properties":{"gitlens.views.contributors.showAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show commits from all branches in the _Contributors_ view","scope":"window","order":10},"gitlens.views.contributors.showStatistics":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size","scope":"window","order":20},"gitlens.views.contributors.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.contributors.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.contributors.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Contributors_ view will display files","scope":"window","order":50},"gitlens.views.contributors.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.contributors.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.contributors.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Contributors_ view will display file icons","scope":"window","order":53},"gitlens.views.contributors.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view","scope":"window","order":60},"gitlens.views.contributors.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"search-compare-view","title":"Search & Compare View","order":32,"properties":{"gitlens.views.searchAndCompare.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.searchAndCompare.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.searchAndCompare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search & Compare_ view will display files","scope":"window","order":20},"gitlens.views.searchAndCompare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`","scope":"window","order":21},"gitlens.views.searchAndCompare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`","scope":"window","order":22},"gitlens.views.searchAndCompare.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Search & Compare_ view will display file icons","scope":"window","order":33},"gitlens.views.searchAndCompare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view","scope":"window","order":30}}},{"id":"cloud-patches-view","title":"Cloud Patches View","order":33,"properties":{"gitlens.views.drafts.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.drafts.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display files","scope":"window","order":30},"gitlens.views.drafts.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.drafts.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.drafts.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display file icons","scope":"window","order":33},"gitlens.views.drafts.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Patches_ view","scope":"window","order":40}}},{"id":"workspaces-view","title":"GitKraken Workspaces View","order":34,"properties":{"gitlens.views.workspaces.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _GitKraken Workspaces_ view","scope":"window","order":10},"gitlens.views.workspaces.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _GitKraken Workspaces_ view","scope":"window","order":11},"gitlens.views.workspaces.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _GitKraken Workspaces_ view","scope":"window","order":12},"gitlens.views.workspaces.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _GitKraken Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.workspaces.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _GitKraken Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.workspaces.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _GitKraken Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.workspaces.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _GitKraken Workspaces_ view","scope":"window","order":30},"gitlens.views.workspaces.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _GitKraken Workspaces_ view","scope":"window","order":31},"gitlens.views.workspaces.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _GitKraken Workspaces_ view","scope":"window","order":32},"gitlens.views.workspaces.showStashes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the stashes for each repository in the _GitKraken Workspaces_ view","scope":"window","order":33},"gitlens.views.workspaces.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _GitKraken Workspaces_ view","scope":"window","order":34},"gitlens.views.workspaces.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _GitKraken Workspaces_ view","scope":"window","order":35},"gitlens.views.workspaces.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _GitKraken Workspaces_ view","scope":"window","order":36},"gitlens.views.workspaces.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _GitKraken Workspaces_ view","scope":"window","order":37},"gitlens.views.workspaces.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _GitKraken Workspaces_ view","scope":"window","order":60},"gitlens.views.workspaces.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _GitKraken Workspaces_ view will display branches","scope":"window","order":70},"gitlens.views.workspaces.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.workspaces.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _GitKraken Workspaces_ view will display files","scope":"window","order":80},"gitlens.views.workspaces.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _GitKraken Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.workspaces.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _GitKraken Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.workspaces.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _GitKraken Workspaces_ view will display file icons","scope":"window","order":83},"gitlens.views.workspaces.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _GitKraken Workspaces_ view in a compact display density","scope":"window","order":90},"gitlens.views.workspaces.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _GitKraken Workspaces_ view","scope":"window","order":100}}},{"id":"patch-details-view","title":"Patch Details View","order":35,"properties":{"gitlens.views.patchDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.patchDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Patch Details_ view will display files","scope":"window","order":30},"gitlens.views.patchDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.patchDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.patchDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Patch Details_ view will display file icons","scope":"window","order":33},"gitlens.views.patchDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Patch Details_ view","scope":"window","order":40}}},{"id":"file-annotations","title":"File Annotations","order":14,"properties":{"gitlens.fileAnnotations.dismissOnEscape":{"type":"boolean","default":true,"markdownDescription":"Specifies whether pressing the `ESC` key dismisses the active file annotations","scope":"window","order":10},"gitlens.fileAnnotations.command":{"type":["string","null"],"default":null,"enum":[null,"blame","heatmap","changes"],"enumDescriptions":["Shows a menu to choose which file annotations to toggle","Toggles file blame annotations","Toggles file heatmap annotations","Toggles file changes annotations"],"markdownDescription":"Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations","scope":"window","order":20},"gitlens.fileAnnotations.preserveWhileEditing":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file annotations will be preserved while editing. Use `#gitlens.advanced.blame.delayAfterEdit#` to control how long to wait before the annotation will update while the file is still dirty","scope":"window","order":30},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit but before it is saved. Use 0 to specify an infinite wait. Only applies if the file is under the `#gitlens.advanced.sizeThresholdAfterEdit#`","scope":"window","order":90},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window","order":91}}},{"id":"file-blame","title":"File Blame","order":15,"properties":{"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file blame annotations will be toggled","scope":"window","order":10},"gitlens.blame.format":{"type":"string","default":"${message|50?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting","scope":"window","order":20},"gitlens.blame.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the file blame annotations","scope":"window","order":22},"gitlens.blame.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the file blame annotations","scope":"window","order":23},"gitlens.blame.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the file blame annotations","scope":"window","order":24},"gitlens.blame.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the file blame annotations","scope":"window","order":25},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the file blame annotations","scope":"window","order":30},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the file blame annotations","Adds a heatmap indicator on the right edge of the file blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the file blame annotations","scope":"window","order":31},"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the file blame annotations","scope":"window","order":40},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent file blame annotations","scope":"window","order":50},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window","order":60},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window","order":61},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file blame annotations will be separated by a small gap","scope":"window","order":70},"gitlens.blame.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"file-changes","title":"File Changes","order":16,"properties":{"gitlens.changes.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file changes annotations will be toggled","scope":"window","order":10},"gitlens.changes.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file changes annotations will be shown","scope":"window","order":20}}},{"id":"file-heatmap","title":"File Heatmap","order":17,"properties":{"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file heatmap annotations will be toggled","scope":"window","order":10},"gitlens.heatmap.locations":{"type":"array","default":["gutter","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file heatmap annotations will be shown","scope":"window","order":20},"gitlens.heatmap.fadeLines":{"type":"boolean","default":true,"markdownDescription":"Specifies the whether to fade out older lines","scope":"window","order":21},"gitlens.heatmap.ageThreshold":{"type":"number","default":90,"markdownDescription":"Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window","order":30},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":40},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":50}}},{"id":"graph","title":"Commit Graph","order":200,"properties":{"gitlens.graph.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Commit Graph_ in the editor area","scope":"window","order":5},"gitlens.graph.defaultItemLimit":{"type":"number","default":500,"markdownDescription":"Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":10},"gitlens.graph.pageItemLimit":{"type":"number","default":200,"markdownDescription":"Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":11},"gitlens.graph.searchItemLimit":{"type":"number","default":100,"markdownDescription":"Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":12},"gitlens.graph.scrollMarkers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show markers on the scrollbar in the _Commit Graph_","scope":"window","order":13},"gitlens.graph.scrollMarkers.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the scrollbar in the _Commit Graph_","scope":"window","order":14},"gitlens.graph.scrollRowPadding":{"type":"number","default":0,"markdownDescription":"Specifies the number of rows from the edge at which the graph will scroll when using keyboard or search to change the selected row","scope":"window","order":14},"gitlens.graph.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Commit Graph_","Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_","scope":"window","order":20},"gitlens.graph.showGhostRefsOnRowHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_","scope":"window","order":21},"gitlens.graph.highlightRowsOnRefHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_","scope":"window","order":22},"gitlens.graph.dimMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to dim (deemphasize) merge commit rows in the _Commit Graph_","scope":"window","order":23},"gitlens.graph.showRemoteNames":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote names on remote branches in the _Commit Graph_","scope":"window","order":24},"gitlens.graph.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_","scope":"window","order":25},"gitlens.graph.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a local branch's upstream status in the _Commit Graph_","scope":"window","order":26},"gitlens.graph.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated pull requests on remote branches in the _Commit Graph_. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":27},"gitlens.graph.commitOrdering":{"type":"string","default":"date","enum":["date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown on the _Commit Graph_","scope":"window","order":30},"gitlens.graph.dateStyle":{"type":["string","null"],"default":null,"enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed in the _Commit Graph_","scope":"window","order":40},"gitlens.graph.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":41},"gitlens.graph.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Graph_ in the status bar","scope":"window","order":50},"gitlens.graph.layout":{"type":"string","default":"panel","enum":["editor","panel"],"enumDescriptions":["Prefer showing the Commit Graph in the editor area","Prefer showing the Commit Graph in the bottom panel"],"markdownDescription":"Specifies the preferred layout of the _Commit Graph_","scope":"window","order":99},"gitlens.graph.minimap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a minimap of commit activity above the _Commit Graph_","scope":"window","order":100},"gitlens.graph.minimap.dataType":{"type":"string","default":"commits","enum":["commits","lines"],"enumDescriptions":["Shows the number of commits per day in the minimap","Shows the number of lines changed per day in the minimap"],"markdownDescription":"Specifies the data to show on the minimap in the _Commit Graph_","scope":"window","order":101},"gitlens.graph.minimap.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the minimap in the _Commit Graph_","scope":"window","order":102}}},{"id":"cloud-patches","title":"Cloud Patches (Preview)","order":300,"properties":{"gitlens.cloudPatches.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the preview of _Cloud Patches_, which allow you to easily and securely share code with your teammates or other developers","scope":"window","order":10}}},{"id":"focus","title":"Launchpad (Preview)","order":400,"properties":{"gitlens.launchpad.ignoredRepositories":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the repositories to ignore in the _Launchpad_","scope":"window","order":10},"gitlens.launchpad.staleThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the number of days after which a pull request is considered stale and moved to Other in the _Launchpad_","scope":"window","order":20},"gitlens.launchpad.indicator.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable status bar indicator for _Launchpad_","scope":"window","order":100},"gitlens.launchpad.indicator.icon":{"type":"string","enum":["default","group"],"default":"default","markdownDescription":"Specifies the style of the  _Launchpad_ status bar indicator icon","scope":"window","order":110},"gitlens.launchpad.indicator.label":{"type":["boolean","string"],"enum":[false,"item"],"default":"item","markdownDescription":"Specifies the display of the  _Launchpad_ status bar indicator label","scope":"window","order":120},"gitlens.launchpad.indicator.groups":{"type":"array","default":["mergeable","blocked","needs-review","follow-up"],"items":{"type":"string","enum":["mergeable","blocked","needs-review","follow-up"],"enumDescriptions":["Shows mergeable pull requests","Shows blocked pull requests","Shows pull requests needing your review","Shows pull requests needing follow-up"]},"minItems":1,"uniqueItems":true,"markdownDescription":"Specifies the groups of pull requests to show on the _Launchpad_ status bar indicator","scope":"window","order":130},"gitlens.launchpad.indicator.useColors":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to use colors on the _Launchpad_ status bar indicator","scope":"window","order":140},"gitlens.launchpad.indicator.polling.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the status bar indicator will fetch and display pull request data for _Launchpad_","scope":"window","order":150},"gitlens.launchpad.indicator.polling.interval":{"type":"number","default":30,"markdownDescription":"Specifies the rate (in minutes) at which the status bar indicator will fetch pull request data for _Launchpad_. Use 0 to disable automatic polling","scope":"window","order":160},"gitlens.launchpad.indicator.openInEditor":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to open _Launchpad_ as an editor tab when clicking on the status bar indicator","scope":"window","order":170},"gitlens.launchpad.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Launchpad_ as an editor tab","scope":"window","order":1000},"gitlens.launchpad.experimental.queryLimit":{"type":"number","default":100,"markdownDescription":"Specifies an experimental limit on the number of pull requests to be queried in the _Launchpad_","scope":"window","order":1100},"gitlens.launchpad.experimental.queryUseInvolvesFilter":{"type":"boolean","default":false,"markdownDescription":"Specifies an experimental flag whether to use the `involves` filter in the GraphQL query for _Launchpad_","scope":"window","order":1110}}},{"id":"visual-history","title":"Visual File History","order":500,"properties":{"gitlens.visualHistory.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Visual File History_ in the editor area","scope":"window","order":10},"gitlens.visualHistory.queryLimit":{"type":"number","default":20,"markdownDescription":"Specifies the limit on the how many commits can be queried for statistics in the _Visual File History_, because of rate limits. Only applies to virtual workspaces.","scope":"window","order":20}}},{"id":"rebase-editor","title":"Interactive Rebase Editor","order":600,"properties":{"gitlens.rebaseEditor.ordering":{"type":"string","default":"desc","enum":["asc","desc"],"enumDescriptions":["Shows oldest commit first","Shows newest commit first"],"markdownDescription":"Specifies how Git commits are displayed in the _Interactive Rebase Editor_","scope":"window","order":10},"gitlens.rebaseEditor.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Interactive Rebase Editor_","Shows the _Commit Details_ view automatically when selection changes in the _Interactive Rebase Editor_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Interactive Rebase Editor_","scope":"window","order":20}}},{"id":"git-command-palette","title":"Git Command Palette","order":700,"properties":{"gitlens.gitCommands.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in quick pick menus when applicable","scope":"window","order":5},"gitlens.gitCommands.sortBy":{"type":"string","default":"usage","enum":["name","usage"],"enumDescriptions":["Sorts commands by name","Sorts commands by last used date"],"markdownDescription":"Specifies how Git commands are sorted in the _Git Command Palette_","scope":"window","order":10},"gitlens.gitCommands.skipConfirmations":{"type":"array","default":["fetch:command","stash-push:command"],"items":{"type":"string","enum":["branch-create:command","branch-create:menu","co-authors:command","co-authors:menu","fetch:command","fetch:menu","pull:command","pull:menu","push:command","push:menu","stash-apply:command","stash-apply:menu","stash-pop:command","stash-pop:menu","stash-push:command","stash-push:menu","switch:command","switch:menu","tag-create:command","tag-create:menu"],"enumDescriptions":["Skips branch create confirmations when run from a command, e.g. a view action","Skips branch create confirmations when run from the Git Command Palette","Skips co-author confirmations when run from a command, e.g. a view action","Skips co-author confirmations when run from the Git Command Palette","Skips fetch confirmations when run from a command, e.g. a view action","Skips fetch confirmations when run from the Git Command Palette","Skips pull confirmations when run from a command, e.g. a view action","Skips pull confirmations when run from the Git Command Palette","Skips push confirmations when run from a command, e.g. a view action","Skips push confirmations when run from the Git Command Palette","Skips stash apply confirmations when run from a command, e.g. a view action","Skips stash apply confirmations when run from the Git Command Palette","Skips stash pop confirmations when run from a command, e.g. a view action","Skips stash pop confirmations when run from the Git Command Palette","Skips stash push confirmations when run from a command, e.g. a view action","Skips stash push confirmations when run from the Git Command Palette","Skips switch confirmations when run from a command, e.g. a view action","Skips switch confirmations when run from the Git Command Palette","Skips tag create confirmations when run from a command, e.g. a view action","Skips tag create confirmations when run from the Git Command Palette"]},"minItems":0,"maxItems":14,"uniqueItems":true,"markdownDescription":"Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`","scope":"window","order":20},"gitlens.gitCommands.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":30},"gitlens.gitCommands.search.showResultsInSideBar":{"type":["boolean","null"],"default":null,"markdownDescription":"Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context","scope":"window","order":40},"gitlens.gitCommands.search.matchAll":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match all or any commit message search patterns","scope":"window","order":50},"gitlens.gitCommands.search.matchCase":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match commit search patterns with or without regard to casing","scope":"window","order":51},"gitlens.gitCommands.search.matchRegex":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to match commit search patterns using regular expressions","scope":"window","order":52},"gitlens.gitCommands.search.showResultsInView":{"deprecationMessage":"Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar","markdownDeprecationMessage":"Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`"}}},{"id":"integrations","title":"Integrations","order":800,"properties":{"gitlens.autolinks":{"type":["array","null"],"default":null,"items":{"type":"object","required":["prefix","url"],"properties":{"prefix":{"type":"string","description":"Specifies the short prefix to use to generate autolinks for the external resource"},"title":{"type":["string","null"],"default":null,"description":"Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number"},"url":{"type":"string","description":"Specifies the URL of the external resource you want to link to. Use `<num>` as the variable for the reference number"},"alphanumeric":{"type":"boolean","description":"Specifies whether alphanumeric characters should be allowed in `<num>`","default":false},"ignoreCase":{"type":"boolean","description":"Specifies whether case should be ignored when matching the prefix","default":false}},"additionalProperties":false},"uniqueItems":true,"markdownDescription":"Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number","scope":"window","order":10},"gitlens.integrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable rich integrations with any supported remote services","scope":"window","order":20},"gitlens.remotes":{"type":["array","null"],"default":null,"items":{"type":"object","required":["type"],"oneOf":[{"required":["domain"]},{"required":["regex"]}],"properties":{"type":{"type":"string","enum":["Custom","AzureDevOps","Bitbucket","BitbucketServer","Gerrit","GoogleSource","Gitea","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name used to match this custom configuration to a Git remote"},"regex":{"type":"string","description":"Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\""},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional URL protocol for the custom remote service"},"ignoreSSLErrors":{"type":"boolean","default":false,"description":"Specifies whether to ignore invalid SSL certificate errors when connecting to the remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","markdownDescription":"Specifies the format of a repository URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path"},"branches":{"type":"string","markdownDescription":"Specifies the format of a branches URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"branch":{"type":"string","markdownDescription":"Specifies the format of a branch URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"commit":{"type":"string","markdownDescription":"Specifies the format of a commit URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA"},"file":{"type":"string","markdownDescription":"Specifies the format of a file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","markdownDescription":"Specifies the format of a branch file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","markdownDescription":"Specifies the format of a commit file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information"},"fileLine":{"type":"string","markdownDescription":"Specifies the format of a line in a file URL for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line"},"fileRange":{"type":"string","markdownDescription":"Specifies the format of a range in a file URL for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line"}},"additionalProperties":false}}},"uniqueItems":true,"markdownDescription":"Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services","scope":"resource","order":30},"gitlens.partners":{"type":["object","null"],"additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean","default":true,"description":"Specifies whether the partner integration should be shown"}},"additionalProperties":true,"description":"Specifies the configuration of a partner integration"},"default":null,"description":"Specifies the configuration of a partner integration","scope":"window","order":40},"gitlens.liveshare.enabled":{"type":"boolean","default":true,"description":"Specifies whether to enable integration with Visual Studio Live Share","scope":"window","order":50},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window","order":51}}},{"id":"terminal","title":"Terminal","order":900,"properties":{"gitlens.terminalLinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more","scope":"window","order":10},"gitlens.terminalLinks.showDetailsView":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Details_ view when clicking on a commit link in the integrated terminal","scope":"window","order":20},"gitlens.terminal.overrideGitEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use VS Code as Git's `core.editor` for Gitlens terminal commands","scope":"window","order":100}}},{"id":"ai","title":"AI (Experimental)","order":1000,"properties":{"gitlens.ai.experimental.generateCommitMessage.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens' experimental, AI-powered, on-demand commit message generation","scope":"window","order":1},"gitlens.experimental.generateCommitMessagePrompt":{"type":"string","default":"Now, please generate a commit message. Ensure that it includes a precise and informative subject line that succinctly summarizes the crux of the changes in under 50 characters. If necessary, follow with an explanatory body providing insight into the nature of the changes, the reasoning behind them, and any significant consequences or considerations arising from them. Conclude with any relevant issue references at the end of the message.","markdownDescription":"Specifies the prompt to use to tell OpenAI how to structure or format the generated commit message","scope":"window","order":2},"gitlens.ai.experimental.model":{"type":["string","null"],"default":null,"enum":["openai:gpt-4o","openai:gpt-4-turbo","openai:gpt-4-turbo-preview","openai:gpt-4","openai:gpt-4-32k","openai:gpt-3.5-turbo","openai:gpt-3.5-turbo-16k","anthropic:claude-3-opus-20240229","anthropic:claude-3-sonnet-20240229","anthropic:claude-3-haiku-20240307","anthropic:claude-2.1","anthropic:claude-2","anthropic:claude-instant-1","google:gemini-1.5-pro-latest","google:gemini-1.5-flash-latest","google:gemini-1.0-pro","vscode"],"enumDescriptions":["OpenAI GPT-4 Omni","OpenAI GPT-4 Turbo with Vision","OpenAI GPT-4 Turbo Preview","OpenAI GPT-4","OpenAI GPT-4 32k","OpenAI GPT-3.5 Turbo","OpenAI GPT-3.5 Turbo 16k","Anthropic Claude 3 Opus","Anthropic Claude 3 Sonnet","Anthropic Claude 3 Haiku","Anthropic Claude 2.1","Anthropic Claude 2","Anthropic Claude Instant 1.2","Google Gemini 1.5 Pro (Latest)","Google Gemini 1.5 Flash","Google Gemini 1.0 Pro","VS Code Extension"],"markdownDescription":"Specifies the AI model to use for GitLens' experimental AI features","scope":"window","order":100},"gitlens.ai.experimental.openai.url":{"type":["string","null"],"default":null,"markdownDescription":"Specifies a custom URL to use for access to an OpenAI model via Azure. Azure URLs should be in the following format: https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}","scope":"window","order":102},"gitlens.ai.experimental.vscode.model":{"type":["string","null"],"default":null,"pattern":"^(.*):(.*)$","markdownDescription":"Specifies the VS Code provided model to use for GitLens' experimental AI features, formatted as `vendor:family`","scope":"window","order":105}}},{"id":"date-times","title":"Date & Times","order":1100,"properties":{"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window","order":10},"gitlens.defaultDateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":20},"gitlens.defaultDateLocale":{"type":["string","null"],"default":null,"markdownDescription":"Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, `ja-JP` = Japanese, etc.","scope":"window","order":21},"gitlens.defaultDateShortFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":22},"gitlens.defaultTimeFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":30},"gitlens.defaultDateSource":{"type":"string","default":"authored","enum":["authored","committed"],"enumDescriptions":["Uses the date when the changes were authored (i.e. originally written)","Uses the date when the changes were committed"],"markdownDescription":"Specifies whether commit dates should use the authored or committed date","scope":"window","order":40}}},{"id":"sorting","title":"Sorting","order":1200,"properties":{"gitlens.sortRepositoriesBy":{"type":"string","default":"discovered","enum":["discovered","lastFetched:desc","lastFetched:asc","name:asc","name:desc"],"enumDescriptions":["Sorts repositories by discovery or workspace order","Sorts repositories by last fetched date in descending order","Sorts repositories by last fetched date in ascending order","Sorts repositories by name in ascending order","Sorts repositories by name in descending order"],"markdownDescription":"Specifies how repositories are sorted in quick pick menus and views","scope":"window","order":10},"gitlens.sortBranchesBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts branches by the most recent commit date in descending order","Sorts branches by the most recent commit date in ascending order","Sorts branches by name in ascending order","Sorts branches by name in descending order"],"markdownDescription":"Specifies how branches are sorted in quick pick menus and views","scope":"window","order":20},"gitlens.sortTagsBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts tags by date in descending order","Sorts tags by date in ascending order","Sorts tags by name in ascending order","Sorts tags by name in descending order"],"markdownDescription":"Specifies how tags are sorted in quick pick menus and views","scope":"window","order":30},"gitlens.sortContributorsBy":{"type":"string","default":"count:desc","enum":["count:desc","count:asc","date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts contributors by commit count in descending order","Sorts contributors by commit count in ascending order","Sorts contributors by the most recent commit date in descending order","Sorts contributors by the most recent commit date in ascending order","Sorts contributors by name in ascending order","Sorts contributors by name in descending order"],"markdownDescription":"Specifies how contributors are sorted in quick pick menus and views","scope":"window","order":40}}},{"id":"menus-toolbars","title":"Menus & Toolbars","order":1300,"properties":{"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorGutter":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"ghpr":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"worktree":{"type":"boolean"}}}]},"scm":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"}}}]},"scmRepositoryInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmRepository":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"authors":{"type":"boolean"},"generateCommitMessage":{"type":"boolean"},"graph":{"type":"boolean"},"patch":{"type":"boolean"}}}]},"scmGroupInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"patch":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmItemInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"},"stash":{"type":"boolean"}}}]}},"additionalProperties":false}],"default":{"editor":{"blame":true,"clipboard":true,"compare":true,"history":true,"remote":true},"editorGroup":{"blame":true,"compare":true},"editorGutter":{"compare":true,"remote":true,"share":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"ghpr":{"worktree":true},"scm":{"graph":true},"scmRepositoryInline":{"graph":true,"stash":false},"scmRepository":{"authors":true,"generateCommitMessage":true,"patch":true,"graph":false},"scmGroupInline":{"stash":true},"scmGroup":{"compare":true,"openClose":true,"patch":true,"stash":true},"scmItemInline":{"stash":false},"scmItem":{"clipboard":true,"compare":true,"history":true,"remote":true,"share":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window","order":10}}},{"id":"keyboard","title":"Keyboard Shortcuts","order":1400,"properties":{"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Shift+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window","order":10}}},{"id":"modes","title":"Modes","order":1500,"properties":{"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window","order":10},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window","order":11},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window","order":20},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","changes","heatmap"],"enumDescriptions":["Shows the file blame annotations","Shows the file changes annotations","Shows the file heatmap annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window","order":30}}},{"id":"gitkraken","title":"GitKraken","order":9000,"properties":{"gitlens.gitKraken.activeOrganizationId":{"type":"string","markdownDescription":"Specifies the ID of the user's active GitKraken organization in GitLens","scope":"window","order":1}}},{"id":"experimental","title":"Experimental","order":9500,"properties":{"gitlens.cloudPatches.experimental.layout":{"type":"string","default":"view","enum":["editor","view"],"enumDescriptions":["Prefer showing Cloud Patches in the editor area","Prefer showing Cloud Patches in a view"],"markdownDescription":"(Experimental) Specifies the preferred layout of for _Cloud Patches_","scope":"window","order":20}}},{"id":"advanced","title":"Advanced","order":10000,"properties":{"gitlens.detectNestedRepositories":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to attempt to detect nested repositories when opening files","scope":"resource","order":0},"gitlens.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow GitLens to send product usage telemetry.\n\n_**Note:** For GitLens to send any telemetry BOTH this setting and VS Code telemetry must be enabled. If either one is disabled no telemetry will be sent._","scope":"window","order":1},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressCreatePullRequestPrompt":false,"suppressDebugLoggingWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitMissingWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressRebaseSwitchToTextWarning":false,"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":false,"suppressIntegrationRequestFailed500Warning":false,"suppressIntegrationRequestTimedOutWarning":false,"suppressBlameInvalidIgnoreRevsFileWarning":false,"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false,"description":"Commit Has No Previous Commit Warning"},"suppressCommitNotFoundWarning":{"type":"boolean","default":false,"description":"Commit Not Found Warning"},"suppressCreatePullRequestPrompt":{"type":"boolean","default":false,"description":"Create Pull Request Prompt"},"suppressDebugLoggingWarning":{"type":"boolean","default":false,"description":"Debug Logging Warning"},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false,"description":"File Not Under Source Control Warning"},"suppressGitDisabledWarning":{"type":"boolean","default":false,"description":"Git Disabled Warning"},"suppressGitMissingWarning":{"type":"boolean","default":false,"description":"Git Missing Warning"},"suppressGitVersionWarning":{"type":"boolean","default":false,"description":"Git Version Warning"},"suppressLineUncommittedWarning":{"type":"boolean","default":false,"description":"Line Uncommitted Warning"},"suppressNoRepositoryWarning":{"type":"boolean","default":false,"description":"No Repository Warning"},"suppressRebaseSwitchToTextWarning":{"type":"boolean","default":false,"description":"Rebase Switch To Text Warning"},"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":{"type":"boolean","default":false,"description":"Integration Disconnected; Too Many Failed Requests Warning"},"suppressIntegrationRequestFailed500Warning":{"type":"boolean","default":false,"description":"Integration Request Failed (500 status code) Warning"},"suppressIntegrationRequestTimedOutWarning":{"type":"boolean","default":false,"description":"Integration Request Timed Out Warning"},"suppressBlameInvalidIgnoreRevsFileWarning":{"type":"boolean","default":false,"description":"Invalid Blame IgnoreRevs File Warning"},"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":{"type":"boolean","default":false,"description":"Invalid Revision in Blame IgnoreRevs File Warning"}},"additionalProperties":false,"markdownDescription":"Specifies which messages should be suppressed","scope":"window","order":5},"gitlens.advanced.repositorySearchDepth":{"type":["number","null"],"default":null,"markdownDescription":"Specifies how many folders deep to search for repositories. Defaults to `#git.repositoryScanMaxDepth#`","scope":"resource","order":10},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":7,"markdownDescription":"Specifies the length of abbreviated commit SHAs","scope":"window","order":20},"gitlens.advanced.abbreviateShaOnCopy":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.","scope":"window","order":21},"gitlens.advanced.commitOrdering":{"type":["string","null"],"default":null,"enum":[null,"date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order","Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order","scope":"window","order":30},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource","order":40},"gitlens.advanced.blame.customArguments":{"type":["array","null"],"default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource","order":41},"gitlens.advanced.similarityThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename","scope":"window","order":50},"gitlens.advanced.externalDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":60},"gitlens.advanced.externalDirectoryDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":61},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":70},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window","order":80},"gitlens.advanced.maxSearchItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a search. Use 0 to specify no maximum","scope":"window","order":81},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window","order":90},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window","order":100},"gitlens.deepLinks.schemeOverride":{"type":["boolean","string"],"default":false,"markdownDescription":"Specifies whether to override the default deep link scheme (vscode://) with the environment value or a specified value","scope":"window","order":110},"gitlens.advanced.useSymmetricDifferenceNotation":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDescription":"Deprecated. This setting is no longer used"}}},{"id":"general","title":"General","order":0,"properties":{"gitlens.showWelcomeOnInstall":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the Welcome experience on first install","scope":"window","order":10},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the What's New notification after upgrading to new feature releases","scope":"window","order":20},"gitlens.outputLevel":{"type":"string","default":"warn","enum":["off","error","warn","info","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs errors and warnings","Logs errors, warnings, and messages","Logs verbose errors, warnings, and messages. Best for issue reporting."],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window","order":30},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window","order":40},"gitlens.proxy":{"type":["object","null"],"default":null,"items":{"type":"object","required":["url","strictSSL"],"properties":{"url":{"type":["string","null"],"default":null,"description":"Specifies the URL of the proxy server to use"},"strictSSL":{"type":"boolean","description":"Specifies whether the proxy server certificate should be verified against the list of supplied CAs","default":true}},"additionalProperties":false},"uniqueItems":true,"description":"Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings","scope":"window","order":55},"gitlens.plusFeatures.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to hide or show features that require a trial or paid plan and are not accessible given the opened repositories and current trial or plan","scope":"window","order":60},"gitlens.virtualRepositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable virtual repositories support","scope":"window","order":70},"gitlens.insiders":{"deprecationMessage":"Deprecated. Use the pre-release edition of GitLens instead","markdownDeprecationMessage":"Deprecated. Use the pre-release of GitLens instead"}}}],"configurationDefaults":{"[ansible][azure-pipelines][css][dockerfile][dockercompose][html][json][jsonc][less][postcss][scss][stylus][vue][yaml]":{"gitlens.codeLens.scopes":["document"]},"[python]":{"gitlens.codeLens.symbolScopes":["!Module"]}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the file blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the file blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the file blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the inline blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the inline blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the scroll bar color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}},{"id":"gitlens.openAutolinkedIssueIconColor","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"},"description":"Specifies the icon color of open issues in the GitLens views"},{"id":"gitlens.closedAutolinkedIssueIconColor","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"},"description":"Specifies the icon color of closed issues in the GitLens views"},{"id":"gitlens.closedPullRequestIconColor","description":"Specifies the icon color of closed pull requests in the GitLens views","defaults":{"dark":"#f85149","light":"#cf222e","highContrast":"#ff544b"}},{"id":"gitlens.openPullRequestIconColor","description":"Specifies the icon color of open pull requests in the GitLens views","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"}},{"id":"gitlens.mergedPullRequestIconColor","description":"Specifies the icon color of merged pull requests in the GitLens views","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"}},{"id":"gitlens.unpublishedChangesIconColor","description":"Specifies the icon color of unpublished changes in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpublishedCommitIconColor","description":"Specifies the icon color of unpublished commits in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpulledChangesIconColor","description":"Specifies the icon color of unpulled changes in the GitLens views","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.addedForegroundColor","description":"Specifies the decoration foreground color of added files","defaults":{"light":"gitDecoration.addedResourceForeground","dark":"gitDecoration.addedResourceForeground","highContrast":"gitDecoration.addedResourceForeground"}},{"id":"gitlens.decorations.copiedForegroundColor","description":"Specifies the decoration foreground color of copied files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.deletedForegroundColor","description":"Specifies the decoration foreground color of deleted files","defaults":{"light":"gitDecoration.deletedResourceForeground","dark":"gitDecoration.deletedResourceForeground","highContrast":"gitDecoration.deletedResourceForeground"}},{"id":"gitlens.decorations.ignoredForegroundColor","description":"Specifies the decoration foreground color of ignored files","defaults":{"light":"gitDecoration.ignoredResourceForeground","dark":"gitDecoration.ignoredResourceForeground","highContrast":"gitDecoration.ignoredResourceForeground"}},{"id":"gitlens.decorations.modifiedForegroundColor","description":"Specifies the decoration foreground color of modified files","defaults":{"light":"gitDecoration.modifiedResourceForeground","dark":"gitDecoration.modifiedResourceForeground","highContrast":"gitDecoration.modifiedResourceForeground"}},{"id":"gitlens.decorations.untrackedForegroundColor","description":"Specifies the decoration foreground color of untracked files","defaults":{"light":"gitDecoration.untrackedResourceForeground","dark":"gitDecoration.untrackedResourceForeground","highContrast":"gitDecoration.untrackedResourceForeground"}},{"id":"gitlens.decorations.renamedForegroundColor","description":"Specifies the decoration foreground color of renamed files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.branchAheadForegroundColor","description":"Specifies the decoration foreground color of branches that are ahead of their upstream","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.branchBehindForegroundColor","description":"Specifies the decoration foreground color of branches that are behind their upstream","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.branchDivergedForegroundColor","description":"Specifies the decoration foreground color of branches that are both ahead and behind their upstream","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.branchUpToDateForegroundColor","description":"Specifies the decoration foreground color of branches that are up to date with their upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchUnpublishedForegroundColor","description":"Specifies the decoration foreground color of branches that are not yet published to an upstream","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.branchMissingUpstreamForegroundColor","description":"Specifies the decoration foreground color of branches that have a missing upstream","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingConflictForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation with conflicts","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.workspaceRepoMissingForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are missing a local path","defaults":{"dark":"#909090","light":"#949494","highContrast":"#d3d3d3"}},{"id":"gitlens.decorations.workspaceCurrentForegroundColor","description":"Specifies the decoration foreground color of workspaces which are currently open as a Code Workspace file","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.workspaceRepoOpenForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are open in the current workspace","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.worktreeHasUncommittedChangesForegroundColor","description":"Specifies the decoration foreground color for worktrees that have uncommitted changes","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitlens.decorations.worktreeMissingForegroundColor","description":"Specifies the decoration foreground color for worktrees cannot be found on disk","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.graphLane1Color","description":"Specifies the color for the first commit lane of the _Commit Graph_ visualization","defaults":{"light":"#15a0bf","dark":"#15a0bf","highContrast":"#15a0bf"}},{"id":"gitlens.graphLane2Color","description":"Specifies the color for the second commit lane of the _Commit Graph_ visualization","defaults":{"light":"#0669f7","dark":"#0669f7","highContrast":"#0669f7"}},{"id":"gitlens.graphLane3Color","description":"Specifies the color for the third commit lane of the _Commit Graph_ visualization","defaults":{"light":"#8e00c2","dark":"#8e00c2","highContrast":"#8e00c2"}},{"id":"gitlens.graphLane4Color","description":"Specifies the color for the fourth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#c517b6","dark":"#c517b6","highContrast":"#c517b6"}},{"id":"gitlens.graphLane5Color","description":"Specifies the color for the fifth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#d90171","dark":"#d90171","highContrast":"#d90171"}},{"id":"gitlens.graphLane6Color","description":"Specifies the color for the sixth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#cd0101","dark":"#cd0101","highContrast":"#cd0101"}},{"id":"gitlens.graphLane7Color","description":"Specifies the color for the seventh commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f25d2e","dark":"#f25d2e","highContrast":"#f25d2e"}},{"id":"gitlens.graphLane8Color","description":"Specifies the color for the eighth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f2ca33","dark":"#f2ca33","highContrast":"#f2ca33"}},{"id":"gitlens.graphLane9Color","description":"Specifies the color for the ninth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#7bd938","dark":"#7bd938","highContrast":"#7bd938"}},{"id":"gitlens.graphLane10Color","description":"Specifies the color for the tenth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#2ece9d","dark":"#2ece9d","highContrast":"#2ece9d"}},{"id":"gitlens.graphChangesColumnAddedColor","description":"Specifies the color for denoting lines added in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#2da44e","highContrastLight":"#2da44e","dark":"#347d39","highContrast":"#347d39"}},{"id":"gitlens.graphChangesColumnDeletedColor","description":"Specifies the color for denoting lines deleted in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#cf222e","highContrastLight":"#cf222e","dark":"#c93c37","highContrast":"#c93c37"}},{"id":"gitlens.graphMinimapMarkerHeadColor","description":"Specifies the color marking HEAD on the minimap of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphScrollMarkerHeadColor","description":"Specifies the color marking HEAD on the scrollbar of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphMinimapMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the minimap of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphScrollMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the scrollbar of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphMinimapMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the minimap of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphScrollMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the scrollbar of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphMinimapMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the minimap of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphScrollMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphMinimapMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the minimap of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphScrollMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphMinimapMarkerStashesColor","description":"Specifies the color marking stashes on the minimap of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphScrollMarkerStashesColor","description":"Specifies the color marking stashes on the scrollbar of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphMinimapMarkerTagsColor","description":"Specifies the color marking tags on the minimap of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.graphScrollMarkerTagsColor","description":"Specifies the color marking tags on the scrollbar of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.launchpadIndicatorMergeableColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorMergeableHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorBlockedColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorBlockedHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorAttentionColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}},{"id":"gitlens.launchpadIndicatorAttentionHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}}],"commands":[{"command":"gitlens.generateCommitMessage","title":"Generate Commit Message (GitLens)...","category":"GitLens"},{"command":"gitlens.resetAIKey","title":"Reset Stored AI Key","category":"GitLens"},{"command":"gitlens.plus.login","title":"Sign In to GitKraken...","category":"GitLens"},{"command":"gitlens.plus.logout","title":"Sign Out of GitKraken","category":"GitLens"},{"command":"gitlens.plus.signUp","title":"Sign Up for GitKraken...","category":"GitLens"},{"command":"gitlens.plus.startPreviewTrial","title":"Preview Pro","category":"GitLens"},{"command":"gitlens.plus.reactivateProTrial","title":"Reactivate Pro Trial","category":"GitLens"},{"command":"gitlens.plus.manage","title":"Manage Your Account...","category":"GitLens"},{"command":"gitlens.plus.cloudIntegrations.manage","title":"Manage Cloud Integrations...","category":"GitLens"},{"command":"gitlens.plus.upgrade","title":"Upgrade to Pro...","category":"GitLens"},{"command":"gitlens.plus.hide","title":"Hide Pro Features","category":"GitLens"},{"command":"gitlens.plus.restore","title":"Restore Pro Features","category":"GitLens"},{"command":"gitlens.plus.reset","title":"Reset","category":"GitLens"},{"command":"gitlens.plus.resetRepositoryAccess","title":"Reset Repository Access Cache","category":"GitLens"},{"command":"gitlens.plus.refreshRepositoryAccess","title":"Refresh Repository Access","category":"GitLens"},{"command":"gitlens.gk.switchOrganization","title":"Switch Organization...","category":"GitLens"},{"command":"gitlens.getStarted","title":"Get Started","category":"GitLens"},{"command":"gitlens.showPatchDetailsPage","title":"Show Patch Details","category":"GitLens"},{"command":"gitlens.applyPatchFromClipboard","title":"Apply Copied Patch","category":"GitLens"},{"command":"gitlens.copyPatchToClipboard","title":"Copy as Patch","category":"GitLens"},{"command":"gitlens.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree...","category":"GitLens"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree...","category":"GitLens"},{"command":"gitlens.createPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createCloudPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.shareAsCloudPatch","title":"Share as Cloud Patch...","category":"GitLens"},{"command":"gitlens.openCloudPatch","title":"Open Cloud Patch...","category":"GitLens"},{"command":"gitlens.openPatch","title":"Open Patch...","category":"GitLens"},{"command":"gitlens.showBranchesView","title":"Show Branches View","category":"GitLens"},{"command":"gitlens.showCommitDetailsView","title":"Show Inspect View","category":"GitLens"},{"command":"gitlens.showCommitsView","title":"Show Commits View","category":"GitLens"},{"command":"gitlens.showContributorsView","title":"Show Contributors View","category":"GitLens"},{"command":"gitlens.showDraftsView","title":"Show Cloud Patches View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showLaunchpad","title":"Open Launchpad","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showFocusPage","title":"Open Launchpad in Editor","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.launchpad.split","title":"Split Launchpad in Editor","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.launchpad.indicator.toggle","title":"Toggle Launchpad Indicator","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showGraph","title":"Show Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphPage","title":"Show Commit Graph in Editor","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.graph.split","title":"Split Commit Graph","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.showGraphView","title":"Show Commit Graph View","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleGraph","title":"Toggle Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleMaximizedGraph","title":"Toggle Maximized Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showHomeView","title":"Show Home View","category":"GitLens"},{"command":"gitlens.showAccountView","title":"Show Account View","category":"GitLens"},{"command":"gitlens.showInCommitGraph","title":"Open in Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showInCommitGraphView","title":"Open in Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showRemotesView","title":"Show Remotes View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchAndCompareView","title":"Show Search And Compare Commits View","category":"GitLens"},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!views","title":"Open Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!autolinks","title":"Configure Autolinks","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-annotations","title":"Open File Annotation Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!branches-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commits-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!contributors-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-history-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!line-history-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!remotes-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!repositories-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!search-compare-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!stashes-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!tags-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!worktrees-view","title":"Open View Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commit-graph","title":"Open Commit Graph Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showTimelinePage","title":"Show Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showInTimeline","title":"Open Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.timeline.split","title":"Split Visual File History","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.showStashesView","title":"Show Stashes View","category":"GitLens"},{"command":"gitlens.showTagsView","title":"Show Tags View","category":"GitLens"},{"command":"gitlens.showTimelineView","title":"Show Visual File History View","category":"GitLens"},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showWorktreesView","title":"Show Worktrees View","category":"GitLens"},{"command":"gitlens.showWorkspacesView","title":"Show GitKraken Workspaces View","category":"GitLens"},{"command":"gitlens.compareWith","title":"Compare References...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareHeadWith","title":"Compare HEAD with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWorkingWith","title":"Compare Working Tree with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.diffDirectory","title":"Open Directory Compare (difftool) with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Open Directory Compare (difftool)","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiffLeft","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiffRight","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffLeft","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffRight","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffFolderWithRevision","title":"Open Folder Changes with Revision...","category":"GitLens"},{"command":"gitlens.diffFolderWithRevisionFrom","title":"Open Folder Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":"$(gitlens-prev-commit-menu)"},{"command":"gitlens.diffWithRevisionFrom","title":"Open Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffLeft","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffRight","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.disableRebaseEditor","title":"Disable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.enableRebaseEditor","title":"Enable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffLeft","title":"Toggle File Blame","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffRight","title":"Toggle File Blame","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.annotations.nextChange","title":"Next Change","icon":"$(arrow-down)"},{"command":"gitlens.annotations.previousChange","title":"Previous Change","icon":"$(arrow-up)"},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","title":"Toggle File Heatmap","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffRight","title":"Toggle File Heatmap","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChanges","title":"Toggle File Changes","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChangesOnly","title":"Toggle File Changes","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git CodeLens","category":"GitLens"},{"command":"gitlens.gitCommands","title":"Git Command Palette","category":"GitLens"},{"command":"gitlens.gitCommands.branch","title":"Git Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.create","title":"Git Create Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.delete","title":"Git Delete Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.prune","title":"Git Prune Branches...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.rename","title":"Git Rename Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.checkout","title":"Git Checkout...","category":"GitLens"},{"command":"gitlens.gitCommands.cherryPick","title":"Git Cherry Pick...","category":"GitLens"},{"command":"gitlens.gitCommands.history","title":"Git History (log)...","category":"GitLens"},{"command":"gitlens.gitCommands.merge","title":"Git Merge...","category":"GitLens"},{"command":"gitlens.gitCommands.rebase","title":"Git Rebase...","category":"GitLens"},{"command":"gitlens.gitCommands.remote","title":"Git Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.add","title":"Git Add Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.prune","title":"Git Prune Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.remove","title":"Git Remove Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.reset","title":"Git Reset...","category":"GitLens"},{"command":"gitlens.gitCommands.revert","title":"Git Revert...","category":"GitLens"},{"command":"gitlens.gitCommands.show","title":"Git Show...","category":"GitLens"},{"command":"gitlens.gitCommands.stash","title":"Git Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.drop","title":"Git Drop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.list","title":"Git Stash List...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.pop","title":"Git Pop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.push","title":"Git Push Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.rename","title":"Git Rename Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.status","title":"Git Status...","category":"GitLens"},{"command":"gitlens.gitCommands.switch","title":"Git Switch to...","category":"GitLens"},{"command":"gitlens.gitCommands.tag","title":"Git Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.create","title":"Git Create Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.delete","title":"Git Delete Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree","title":"Git Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.create","title":"Git Create Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.delete","title":"Git Delete Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.open","title":"Git Open Worktree...","category":"GitLens"},{"command":"gitlens.switchAIModel","title":"Switch AI Model","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.resetViewsLayout","title":"Reset Views Layout","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":"$(search)"},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.revealCommitInView","title":"Reveal Commit in Side Bar","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Open Inspect","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showLineCommitInView","title":"Open Line Inspect","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showInDetailsView","title":"Open Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showCommitsInView","title":"Search for Commits within Selection","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Open File History","category":"GitLens"},{"command":"gitlens.openFileHistory","title":"Open File History","category":"GitLens"},{"command":"gitlens.openFolderHistory","title":"Open Folder History","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Quick Show Commit","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Quick Show Line Commit","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Commit","category":"GitLens","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","title":"Show Revision Commit","category":"GitLens","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","title":"Show Revision Commit","category":"GitLens","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.quickOpenFileHistory","title":"Quick Open File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashes","category":"GitLens"},{"command":"gitlens.addAuthors","title":"Add Co-authors...","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.connectRemoteProvider","title":"Connect Remote Integration","category":"GitLens","icon":"$(plug)"},{"command":"gitlens.disconnectRemoteProvider","title":"Disconnect Remote Integration","category":"GitLens","icon":"$(gitlens-unplug)"},{"command":"gitlens.copyCurrentBranch","title":"Copy Current Branch Name","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Message","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyShaToClipboard","title":"Copy SHA","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRelativePathToClipboard","title":"Copy Relative Path","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openBranchesOnRemote","title":"Open Branches on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyDeepLinkToBranch","title":"Copy Link to Branch","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToCommit","title":"Copy Link to Commit","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToComparison","title":"Copy Link to Comparison","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFile","title":"Copy Link to File","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFileAtRevision","title":"Copy Link to File at Revision...","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToLines","title":"Copy Link to Code","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToRepo","title":"Copy Link to Repository","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToWorkspace","title":"Copy Link to Workspace","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToTag","title":"Copy Link to Tag","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchesUrl","title":"Copy Remote Branches URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openBranchOnRemote","title":"Open Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.openBranchOnRemote","title":"Open Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.openBranchOnRemote.multi","title":"Open Branches on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openCurrentBranchOnRemote","title":"Open Current Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemoteBranchUrl","title":"Copy Remote Branch URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openCommitOnRemote","title":"Open Commit on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.openCommitOnRemote","title":"Open Commit on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.openCommitOnRemote.multi","title":"Open Commits on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemoteCommitUrl","title":"Copy Remote Commit URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl","title":"Copy Remote Commit URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openComparisonOnRemote","title":"Open Comparison on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemoteComparisonUrl","title":"Copy Remote Comparison URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openFileFromRemote","title":"Open File from Remote","category":"GitLens"},{"command":"gitlens.openFileOnRemote","title":"Open File on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote File URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","title":"Copy Remote File URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openFileOnRemoteFrom","title":"Open File on Remote From...","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemoteFileUrlFrom","title":"Copy Remote File URL From...","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openBlamePriorToChange","title":"Open Blame Prior to Change","icon":"$(versions)","category":"GitLens"},{"command":"gitlens.openFileRevision","title":"Open File at Revision...","icon":"$(gitlens-open-revision)","category":"GitLens"},{"command":"gitlens.openFileRevisionFrom","title":"Open File at Revision from...","icon":"$(gitlens-open-revision)","category":"GitLens"},{"command":"gitlens.openPullRequestOnRemote","title":"Open Pull Request on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemotePullRequestUrl","title":"Copy Pull Request URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openAssociatedPullRequestOnRemote","title":"Open Associated Pull Request","category":"GitLens","icon":"$(git-pull-request)"},{"command":"gitlens.openRepoOnRemote","title":"Open Repository on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.copyRemoteRepositoryUrl","title":"Copy Remote Repository URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.openRevisionFile","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.openRevisionFileInDiffLeft","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.openRevisionFileInDiffRight","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.openWorkingFile","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffLeft","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffRight","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.stashApply","title":"Apply a Stash...","category":"GitLens","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.apply","title":"Apply Stash...","category":"GitLens","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete","title":"Drop Stash...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete.multi","title":"Drop Stashes...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.rename","title":"Rename Stash...","category":"GitLens","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.stashSave","title":"Stash All Changes...","category":"GitLens","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.stashSaveFiles","title":"Stash Changes...","category":"GitLens","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.externalDiff","title":"Open Changes (difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (difftool)","category":"GitLens"},{"command":"gitlens.resetAvatarCache","title":"Reset Avatar Cache","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.resetTrackedUsage","title":"Reset Tracked Usage","category":"GitLens"},{"command":"gitlens.inviteToLiveShare","title":"Invite to Live Share","category":"GitLens","icon":"$(live-share)"},{"command":"gitlens.browseRepoAtRevision","title":"Browse Repository from Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","title":"Browse Repository from Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.browseRepoBeforeRevision","title":"Browse Repository from Before Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","title":"Browse Repository from Before Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"},{"command":"gitlens.views.browseRepoAtRevision","title":"Repository from Here","category":"GitLens","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","title":"Repository from Here in New Window","category":"GitLens","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevision","title":"Repository from Before Here","category":"GitLens","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","title":"Repository from Before Here in New Window","category":"GitLens","icon":"$(folder-opened)"},{"command":"gitlens.fetchRepositories","title":"Fetch","category":"GitLens","icon":"$(gitlens-repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.pullRepositories","title":"Pull","category":"GitLens","icon":"$(gitlens-repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.pushRepositories","title":"Push","category":"GitLens","icon":"$(gitlens-repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.addRemote","title":"Add Remote","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.highlightChanges","title":"Highlight All Changes Since Before this Commit","category":"GitLens"},{"command":"gitlens.views.highlightRevisionChanges","title":"Highlight Changes from this Commit","category":"GitLens"},{"command":"gitlens.views.restore","title":"Restore (Checkout)","category":"GitLens","icon":"$(gitlens-switch)"},{"command":"gitlens.views.switchToAnotherBranch","title":"Switch to Another Branch...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToBranch","title":"Switch to Branch...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToCommit","title":"Switch to Commit...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToTag","title":"Switch to Tag...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.copy","title":"Copy","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.views.copyAsMarkdown","title":"Copy as Markdown","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.views.copyUrl","title":"Copy URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.views.copyUrl.multi","title":"Copy URLs","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.views.openUrl","title":"Open URL","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.openUrl.multi","title":"Open URLs","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.pruneRemote","title":"Prune","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.fetch","title":"Fetch","category":"GitLens","icon":"$(gitlens-repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.views.publishBranch","title":"Publish Branch","category":"GitLens","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.publishRepository","title":"Publish Repository","category":"GitLens","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.pull","title":"Pull","category":"GitLens","icon":"$(gitlens-repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.views.push","title":"Push","category":"GitLens","icon":"$(gitlens-repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushWithForce","title":"Push (force)","category":"GitLens","icon":"$(gitlens-repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal","category":"GitLens"},{"command":"gitlens.views.openInIntegratedTerminal","title":"Open in Integrated Terminal","category":"GitLens"},{"command":"gitlens.views.setAsDefault","title":"Set as Default","category":"GitLens"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default","category":"GitLens"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.stageFile","title":"Stage Changes","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","category":"GitLens","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","category":"GitLens","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.star","title":"Add to Favorites","category":"GitLens","icon":"$(star-empty)"},{"command":"gitlens.views.star.multi","title":"Add to Favorites","category":"GitLens","icon":"$(star-empty)"},{"command":"gitlens.views.unstar","title":"Remove from Favorites","category":"GitLens","icon":"$(star-full)"},{"command":"gitlens.views.unstar.multi","title":"Remove from Favorites","category":"GitLens","icon":"$(star-full)"},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChanges","title":"Open Changes","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.openPreviousChangesWithWorking","title":"Open Previous Changes with Working File","category":"GitLens"},{"command":"gitlens.views.openFile","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.views.openFileRevision","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.views.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffsIndividually","title":"Open All Changes, Individually","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree, Individually","category":"GitLens"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Files at Revision","category":"GitLens"},{"command":"gitlens.views.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files","category":"GitLens"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Common Base with Working Tree","category":"GitLens"},{"command":"gitlens.views.compareWithMergeBase","title":"Compare with Common Base","category":"GitLens"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)","category":"GitLens"},{"command":"gitlens.views.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.views.compareWithUpstream","title":"Compare with Upstream","category":"GitLens"},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.addAuthors","title":"Add Co-authors...","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.views.addAuthor","title":"Add as Co-author","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.views.addAuthor.multi","title":"Add as Co-authors","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.views.createWorktree","title":"Create Worktree...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","title":"Checkout Pull Request in Worktree (GitLens)...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createWorktree","title":"Create Worktree...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree","title":"Delete Worktree...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree.multi","title":"Delete Worktrees...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.openWorktree","title":"Open Worktree","category":"GitLens","icon":"$(window)"},{"command":"gitlens.views.openWorktreeInNewWindow","title":"Open Worktree in New Window","category":"GitLens","icon":"$(empty-window)"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","title":"Open Worktrees in New Window","category":"GitLens","icon":"$(empty-window)"},{"command":"gitlens.views.revealRepositoryInExplorer","title":"Reveal in File Explorer","category":"GitLens"},{"command":"gitlens.views.revealWorktreeInExplorer","title":"Reveal in File Explorer","category":"GitLens"},{"command":"gitlens.views.cherryPick","title":"Cherry Pick Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.cherryPick.multi","title":"Cherry Pick Commits...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.createBranch","title":"Create Branch...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createBranch","title":"Create Branch...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch","title":"Delete Branch...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch.multi","title":"Delete Branches...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.renameBranch","title":"Rename Branch...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.createTag","title":"Create Tag...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createTag","title":"Create Tag...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag","title":"Delete Tag...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag.multi","title":"Delete Tags...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.mergeBranchInto","title":"Merge Branch into Current Branch...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.pushToCommit","title":"Push to Commit...","category":"GitLens","icon":"$(gitlens-repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.removeRemote","title":"Remove Remote...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.resetCommit","title":"Reset Current Branch to Previous Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToCommit","title":"Reset Current Branch to Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToTip","title":"Reset Current Branch to Tip...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.revert","title":"Revert Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.views.undoCommit","title":"Undo Commit","category":"GitLens","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.views.setBranchComparisonToWorking","title":"Compare with Working Tree","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.views.setBranchComparisonToBranch","title":"Compare with Branch (HEAD)","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.views.createPullRequest","title":"Create Pull Request...","category":"GitLens","icon":"$(git-pull-request-create)"},{"command":"gitlens.views.openPullRequest","title":"Open Pull Request","category":"GitLens","icon":"$(git-pull-request)"},{"command":"gitlens.views.openPullRequestChanges","title":"Open Pull Request Changes","category":"GitLens","icon":"$(diff-multiple)"},{"command":"gitlens.views.openPullRequestComparison","title":"Compare Pull Request","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.views.clearComparison","title":"Clear Comparison","category":"GitLens","icon":"$(close)"},{"command":"gitlens.views.clearReviewed","title":"Clear Reviewed Files","category":"GitLens"},{"command":"gitlens.views.collapseNode","title":"Collapse","category":"GitLens"},{"command":"gitlens.views.dismissNode","title":"Dismiss","category":"GitLens","icon":"$(close)"},{"command":"gitlens.views.editNode","title":"Edit...","category":"GitLens","icon":"$(edit)"},{"command":"gitlens.views.expandNode","title":"Expand","category":"GitLens"},{"command":"gitlens.views.refreshNode","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.loadMoreChildren","title":"Load More","category":"GitLens"},{"command":"gitlens.views.loadAllChildren","title":"Load All","category":"GitLens","icon":"$(gitlens-expand)"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","title":"Show Date Markers","category":"GitLens"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","title":"Hide Date Markers","category":"GitLens"},{"command":"gitlens.views.branches.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.branches.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.branches.setLayoutToList","title":"View as List","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setLayoutToTree","title":"View as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.branches.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.branches.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","title":"Show Branch Comparisons","category":"GitLens"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","title":"Hide Branch Comparisons","category":"GitLens"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","title":"Show Branch Pull Requests","category":"GitLens"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests","category":"GitLens"},{"command":"gitlens.views.commitDetails.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.patchDetails.close","title":"Close Patch","category":"GitLens","icon":"$(close)"},{"command":"gitlens.views.patchDetails.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.commits.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.commits.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.commits.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.commits.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","title":"Filter Commits by Author...","category":"GitLens","icon":"$(filter)"},{"command":"gitlens.views.commits.setCommitsFilterOff","title":"Clear Filter","category":"GitLens","icon":"$(filter-filled)"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","title":"Hide Merge Commits","category":"GitLens"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","title":"Show Merge Commits","category":"GitLens"},{"command":"gitlens.views.commits.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.commits.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","title":"Show Branch Comparison","category":"GitLens"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","title":"Hide Branch Comparison","category":"GitLens"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","title":"Show Current Branch Pull Request","category":"GitLens"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","title":"Hide Current Branch Pull Request","category":"GitLens"},{"command":"gitlens.views.contributors.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.contributors.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.contributors.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","title":"View for All Branches","category":"GitLens"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","title":"View for Current Branch Only","category":"GitLens"},{"command":"gitlens.views.contributors.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.contributors.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","title":"Hide Merge Commits","category":"GitLens"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","title":"Show Merge Commits","category":"GitLens"},{"command":"gitlens.views.contributors.setShowStatisticsOn","title":"Show Statistics","category":"GitLens"},{"command":"gitlens.views.contributors.setShowStatisticsOff","title":"Hide Statistics","category":"GitLens"},{"command":"gitlens.views.drafts.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.drafts.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.drafts.info","title":"Learn about Cloud Patches...","category":"GitLens","icon":"$(info)"},{"command":"gitlens.views.drafts.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.drafts.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.drafts.create","title":"Create Cloud Patch...","category":"GitLens","icon":"$(add)"},{"command":"gitlens.views.drafts.delete","title":"Delete Cloud Patch...","category":"GitLens","icon":"$(trash)"},{"command":"gitlens.views.draft.open","title":"Open","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.views.draft.openOnWeb","title":"Open on gitkraken.dev","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","category":"GitLens","icon":"$(history)"},{"command":"gitlens.views.fileHistory.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","title":"View Line History","category":"GitLens","icon":"$(file)","enablement":"gitlens:views:fileHistory:editorFollowing"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","title":"View File History","category":"GitLens","icon":"$(list-selection)","enablement":"gitlens:views:fileHistory:editorFollowing || gitlens:views:fileHistory:cursorFollowing"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Unpin the Current History","category":"GitLens","icon":"$(pinned)"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pin the Current History","category":"GitLens","icon":"$(pin)"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","title":"View History for All Branches","category":"GitLens"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","title":"View History for Current Branch Only","category":"GitLens"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","title":"Show Merge Commits","category":"GitLens"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","title":"Hide Merge Commits","category":"GitLens"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.graph.openInTab","title":"Open in Editor","category":"GitLens","icon":"$(link-external)"},{"command":"gitlens.views.graph.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.graphDetails.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.home.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.account.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","category":"GitLens","icon":"$(history)"},{"command":"gitlens.views.lineHistory.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Unpin the Current History","category":"GitLens","icon":"$(pinned)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pin the Current History","category":"GitLens","icon":"$(pin)"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.pullRequest.close","title":"Close","category":"GitLens","icon":"$(close)"},{"command":"gitlens.views.pullRequest.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.pullRequest.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.remotes.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.remotes.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.remotes.setLayoutToList","title":"View as List","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setLayoutToTree","title":"View as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.remotes.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","title":"Show Branch Pull Requests","category":"GitLens"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests","category":"GitLens"},{"command":"gitlens.views.repositories.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","title":"View Branches as List","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","title":"View Branches as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.repositories.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","title":"Show Branch Comparison","category":"GitLens"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","title":"Hide Branch Comparison","category":"GitLens"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","title":"Show Branch Comparisons","category":"GitLens"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","title":"Hide Branch Comparisons","category":"GitLens"},{"command":"gitlens.views.repositories.setShowBranchesOn","title":"Show Branches","category":"GitLens"},{"command":"gitlens.views.repositories.setShowBranchesOff","title":"Hide Branches","category":"GitLens"},{"command":"gitlens.views.repositories.setShowCommitsOn","title":"Show Commits","category":"GitLens"},{"command":"gitlens.views.repositories.setShowCommitsOff","title":"Hide Commits","category":"GitLens"},{"command":"gitlens.views.repositories.setShowContributorsOn","title":"Show Contributors","category":"GitLens"},{"command":"gitlens.views.repositories.setShowContributorsOff","title":"Hide Contributors","category":"GitLens"},{"command":"gitlens.views.repositories.setShowRemotesOn","title":"Show Remotes","category":"GitLens"},{"command":"gitlens.views.repositories.setShowRemotesOff","title":"Hide Remotes","category":"GitLens"},{"command":"gitlens.views.repositories.setShowStashesOn","title":"Show Stashes","category":"GitLens"},{"command":"gitlens.views.repositories.setShowStashesOff","title":"Hide Stashes","category":"GitLens"},{"command":"gitlens.views.repositories.setShowTagsOn","title":"Show Tags","category":"GitLens"},{"command":"gitlens.views.repositories.setShowTagsOff","title":"Hide Tags","category":"GitLens"},{"command":"gitlens.views.repositories.setShowWorktreesOn","title":"Show Worktrees","category":"GitLens"},{"command":"gitlens.views.repositories.setShowWorktreesOff","title":"Hide Worktrees","category":"GitLens"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","title":"Show Current Branch Status","category":"GitLens"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","title":"Hide Current Branch Status","category":"GitLens"},{"command":"gitlens.views.repositories.setShowSectionOff","title":"Hide","category":"GitLens"},{"command":"gitlens.views.searchAndCompare.clear","title":"Clear Results","category":"GitLens","icon":"$(clear-all)"},{"command":"gitlens.views.searchAndCompare.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.searchAndCompare.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.searchAndCompare.searchCommits","title":"Search Commits...","category":"GitLens","icon":"$(search)"},{"command":"gitlens.views.searchAndCompare.selectForCompare","title":"Compare References...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","title":"Filter Commits by Author...","category":"GitLens","icon":"$(filter)"},{"command":"gitlens.views.setResultsCommitsFilterOff","title":"Clear Filter","category":"GitLens","icon":"$(filter-filled)"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.searchAndCompare.swapComparison","title":"Swap Comparison","category":"GitLens","icon":"$(arrow-swap)","enablement":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","title":"Show Left-side Files Only","category":"GitLens","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","title":"Show Right-side Files Only","category":"GitLens","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","title":"Clear Filter","category":"GitLens"},{"command":"gitlens.views.stashes.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.stashes.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.stashes.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.tags.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.tags.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.tags.setLayoutToList","title":"View as List","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setLayoutToTree","title":"View as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.tags.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.tags.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.timeline.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.workspaces.addRepos","title":"Add Repositories...","category":"GitLens","icon":"$(add)"},{"command":"gitlens.views.workspaces.addReposFromLinked","title":"Add Repositories from Linked Workspace...","category":"GitLens"},{"command":"gitlens.views.workspaces.info","title":"Learn about GitKraken Workspaces...","category":"GitLens","icon":"$(info)"},{"command":"gitlens.views.workspaces.convert","title":"Convert to Cloud Workspace...","category":"GitLens","icon":"$(cloud-upload)"},{"command":"gitlens.views.workspaces.create","title":"Create Cloud Workspace...","category":"GitLens","icon":"$(add)"},{"command":"gitlens.views.workspaces.delete","title":"Delete Workspace...","category":"GitLens","icon":"$(trash)"},{"command":"gitlens.views.workspaces.locateAllRepos","title":"Locate Repositories...","category":"GitLens","icon":"$(location)"},{"command":"gitlens.views.workspaces.createLocal","title":"Create VS Code Workspace...","category":"GitLens","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.openLocal","title":"Open VS Code Workspace in Current Window...","category":"GitLens","icon":"$(window)"},{"command":"gitlens.views.workspaces.openLocalNewWindow","title":"Open VS Code Workspace in New Window...","category":"GitLens","icon":"$(window)"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","title":"Change Linked Workspace Auto-Add Behavior...","category":"GitLens"},{"command":"gitlens.views.workspaces.repo.locate","title":"Locate Repository...","category":"GitLens","icon":"$(location)"},{"command":"gitlens.views.workspaces.repo.open","title":"Open Repository","category":"GitLens","icon":"$(window)"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","title":"Open Repository in New Window","category":"GitLens","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.repo.addToWindow","title":"Add Repository to VS Code Workspace","category":"GitLens"},{"command":"gitlens.views.workspaces.repo.remove","title":"Remove from Workspace...","category":"GitLens","icon":"$(trash)"},{"command":"gitlens.views.workspaces.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.workspaces.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.worktrees.copy","title":"Copy","category":"GitLens"},{"command":"gitlens.views.worktrees.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","title":"View Files as Auto","category":"GitLens","icon":"$(list-tree)"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","title":"View Files as List","category":"GitLens","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","title":"View Files as Tree","category":"GitLens","icon":"$(list-flat)"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","title":"Show Avatars","category":"GitLens"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","title":"Hide Avatars","category":"GitLens"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","title":"Show Branch Comparison","category":"GitLens"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","title":"Hide Branch Comparison","category":"GitLens"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","title":"Show Branch Pull Requests","category":"GitLens"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests","category":"GitLens"},{"command":"gitlens.enableDebugLogging","title":"Enable Debug Logging","category":"GitLens"},{"command":"gitlens.disableDebugLogging","title":"Disable Debug Logging","category":"GitLens"},{"command":"gitlens.launchpad.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.graph.switchToEditorLayout","title":"Prefer Commit Graph in Editor","category":"GitLens","enablement":"config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","title":"Prefer Commit Graph in Panel","category":"GitLens","enablement":"config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.push","title":"Push","category":"GitLens","icon":"$(gitlens-repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pull","title":"Pull","category":"GitLens","icon":"$(gitlens-repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.graph.fetch","title":"Fetch","category":"GitLens","icon":"$(gitlens-repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToAnotherBranch","title":"Switch to Another Branch...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"},{"command":"gitlens.graph.copyDeepLinkToBranch","title":"Copy Link to Branch","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToCommit","title":"Copy Link to Commit","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToRepo","title":"Copy Link to Repository","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToTag","title":"Copy Link to Tag","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteBranchUrl","title":"Copy Remote Branch URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.createBranch","title":"Create Branch...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteBranch","title":"Delete Branch...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.openBranchOnRemote","title":"Open Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.graph.mergeBranchInto","title":"Merge Branch into Current Branch...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.publishBranch","title":"Publish Branch","category":"GitLens","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.renameBranch","title":"Rename Branch...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToBranch","title":"Switch to Branch...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.hideLocalBranch","title":"Hide Local Branch","category":"GitLens"},{"command":"gitlens.graph.hideRemoteBranch","title":"Hide Remote Branch","category":"GitLens"},{"command":"gitlens.graph.hideRemote","title":"Hide Remote","category":"GitLens"},{"command":"gitlens.graph.hideTag","title":"Hide Tag","category":"GitLens"},{"command":"gitlens.graph.hideRefGroup","title":"Hide","category":"GitLens"},{"command":"gitlens.graph.cherryPick","title":"Cherry Pick Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.copyMessage","title":"Copy Message","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copySha","title":"Copy SHA","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl","title":"Copy Remote Commit URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.showInDetailsView","title":"Open Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.graph.openSCM","title":"Open Source Control","category":"GitLens"},{"command":"gitlens.graph.openCommitOnRemote","title":"Open Commit on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.graph.openCommitOnRemote.multi","title":"Open Commits on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.graph.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetCommit","title":"Reset Current Branch to Previous Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToCommit","title":"Reset Current Branch to Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTip","title":"Reset Current Branch to Tip...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.revert","title":"Revert Commit...","category":"GitLens","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToCommit","title":"Switch to Commit...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.undoCommit","title":"Undo Commit","category":"GitLens","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.save","title":"Stash All Changes...","category":"GitLens","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.apply","title":"Apply Stash...","category":"GitLens","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.delete","title":"Drop Stash...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.rename","title":"Rename Stash...","category":"GitLens","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createTag","title":"Create Tag...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteTag","title":"Delete Tag...","category":"GitLens","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToTag","title":"Switch to Tag...","category":"GitLens","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createWorktree","title":"Create Worktree...","category":"GitLens","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createPullRequest","title":"Create Pull Request...","category":"GitLens","icon":"$(git-pull-request-create)"},{"command":"gitlens.graph.openPullRequest","title":"Open Pull Request","category":"GitLens","icon":"$(git-pull-request)"},{"command":"gitlens.graph.openPullRequestChanges","title":"Open Pull Request Changes","category":"GitLens","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openPullRequestComparison","title":"Compare Pull Request","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.graph.openPullRequestOnRemote","title":"Open Pull Request on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.graph.compareAncestryWithWorking","title":"Compare Common Base with Working Tree","category":"GitLens"},{"command":"gitlens.graph.compareWithMergeBase","title":"Compare with Common Base","category":"GitLens"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)","category":"GitLens"},{"command":"gitlens.graph.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithUpstream","title":"Compare with Upstream","category":"GitLens"},{"command":"gitlens.graph.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.graph.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.graph.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)","category":"GitLens"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)","category":"GitLens"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","title":"Open All Changes Individually","category":"GitLens"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree Individually","category":"GitLens"},{"command":"gitlens.graph.openChangedFileRevisions","title":"Open Files at Revision","category":"GitLens"},{"command":"gitlens.graph.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files","category":"GitLens"},{"command":"gitlens.graph.addAuthor","title":"Add as Co-author","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.graph.copy","title":"Copy","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.graph.columnAuthorOn","title":"Show Author Column","category":"GitLens"},{"command":"gitlens.graph.columnAuthorOff","title":"Hide Author Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnDateTimeOn","title":"Show Date Column","category":"GitLens"},{"command":"gitlens.graph.columnDateTimeOff","title":"Hide Date Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnShaOn","title":"Show SHA Column","category":"GitLens"},{"command":"gitlens.graph.columnShaOff","title":"Hide SHA Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnChangesOn","title":"Show Changes Column","category":"GitLens"},{"command":"gitlens.graph.columnChangesOff","title":"Hide Changes Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnGraphOn","title":"Show Graph Column","category":"GitLens"},{"command":"gitlens.graph.columnGraphOff","title":"Hide Graph Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnMessageOn","title":"Show Commit Message Column","category":"GitLens"},{"command":"gitlens.graph.columnMessageOff","title":"Hide Commit Message Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnRefOn","title":"Show Branch / Tag Column","category":"GitLens"},{"command":"gitlens.graph.columnRefOff","title":"Hide Branch / Tag Column","category":"GitLens","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnGraphCompact","title":"Use Compact Graph Column","category":"GitLens"},{"command":"gitlens.graph.columnGraphDefault","title":"Use Expanded Graph Column","category":"GitLens"},{"command":"gitlens.graph.resetColumnsDefault","title":"Reset Columns to Default Layout","category":"GitLens"},{"command":"gitlens.graph.resetColumnsCompact","title":"Reset Columns to Compact Layout","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","title":"Show Local Branch Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","title":"Hide Local Branch Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","title":"Show Remote Branch Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","title":"Hide Remote Branch Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerStashOn","title":"Show Stash Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerStashOff","title":"Hide Stash Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerTagOn","title":"Show Tag Markers","category":"GitLens"},{"command":"gitlens.graph.scrollMarkerTagOff","title":"Hide Tag Markers","category":"GitLens"},{"command":"gitlens.graph.shareAsCloudPatch","title":"Share as Cloud Patch...","category":"GitLens"},{"command":"gitlens.timeline.refresh","title":"Refresh","category":"GitLens","icon":"$(refresh)"}],"icons":{"gitlens-commit-horizontal":{"description":"commit-horizontal icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f101"}},"gitlens-graph":{"description":"graph icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f102"}},"gitlens-next-commit":{"description":"next-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f103"}},"gitlens-prev-commit-menu":{"description":"prev-commit-menu icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f104"}},"gitlens-prev-commit":{"description":"prev-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f105"}},"gitlens-compare-ref-working":{"description":"compare-ref-working icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f106"}},"gitlens-branches-view":{"description":"branches-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f107"}},"gitlens-commit-view":{"description":"commit-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f108"}},"gitlens-commits-view":{"description":"commits-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f109"}},"gitlens-compare-view":{"description":"compare-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10a"}},"gitlens-contributors-view":{"description":"contributors-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10b"}},"gitlens-history-view":{"description":"history-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-history":{"description":"history icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-remotes-view":{"description":"remotes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10d"}},"gitlens-repositories-view":{"description":"repositories-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10e"}},"gitlens-search-view":{"description":"search-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10f"}},"gitlens-stashes-view":{"description":"stashes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-stashes":{"description":"stashes icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-tags-view":{"description":"tags-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f111"}},"gitlens-worktrees-view":{"description":"worktrees-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f112"}},"gitlens-gitlens":{"description":"gitlens icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f113"}},"gitlens-stash-pop":{"description":"stash-pop icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f114"}},"gitlens-stash-save":{"description":"stash-save icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f115"}},"gitlens-unplug":{"description":"unplug icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f116"}},"gitlens-open-revision":{"description":"open-revision icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f117"}},"gitlens-switch":{"description":"switch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f118"}},"gitlens-expand":{"description":"expand icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f119"}},"gitlens-list-auto":{"description":"list-auto icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11a"}},"gitlens-repo-force-push":{"description":"repo-force-push icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11b"}},"gitlens-pinned-filled":{"description":"pinned-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11c"}},"gitlens-clock":{"description":"clock icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11d"}},"gitlens-provider-azdo":{"description":"provider-azdo icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11e"}},"gitlens-provider-bitbucket":{"description":"provider-bitbucket icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11f"}},"gitlens-provider-gerrit":{"description":"provider-gerrit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f120"}},"gitlens-provider-gitea":{"description":"provider-gitea icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f121"}},"gitlens-provider-github":{"description":"provider-github icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f122"}},"gitlens-provider-gitlab":{"description":"provider-gitlab icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f123"}},"gitlens-gitlens-inspect":{"description":"gitlens-inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f124"}},"gitlens-workspaces-view":{"description":"workspaces-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f125"}},"gitlens-confirm-checked":{"description":"confirm-checked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f126"}},"gitlens-confirm-unchecked":{"description":"confirm-unchecked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f127"}},"gitlens-cloud-patch":{"description":"cloud-patch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f128"}},"gitlens-cloud-patch-share":{"description":"cloud-patch-share icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f129"}},"gitlens-inspect":{"description":"inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12a"}},"gitlens-repository-filled":{"description":"repository-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12b"}},"gitlens-gitlens-filled":{"description":"gitlens-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12c"}},"gitlens-code-suggestion":{"description":"code-suggestion icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12d"}},"gitlens-diff-multiple":{"description":"diff-multiple icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12e"}},"gitlens-diff-single":{"description":"diff-single icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12f"}},"gitlens-repo-fetch":{"description":"repo-fetch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f130"}},"gitlens-repo-pull":{"description":"repo-pull icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f131"}},"gitlens-repo-push":{"description":"repo-push icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f132"}},"gitlens-provider-jira":{"description":"provider-jira icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f133"}}},"menus":{"commandPalette":[{"command":"gitlens.plus.login","when":"!gitlens:plus"},{"command":"gitlens.plus.logout","when":"true"},{"command":"gitlens.plus.signUp","when":"!gitlens:plus"},{"command":"gitlens.plus.startPreviewTrial","when":"!gitlens:plus"},{"command":"gitlens.plus.reactivateProTrial","when":"gitlens:plus:state == 5"},{"command":"gitlens.plus.manage","when":"gitlens:plus"},{"command":"gitlens.plus.cloudIntegrations.manage","when":"gitlens:plus"},{"command":"gitlens.plus.hide","when":"config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.restore","when":"!config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.reset","when":"gitlens:debugging"},{"command":"gitlens.plus.resetRepositoryAccess","when":"gitlens:enabled"},{"command":"gitlens.plus.refreshRepositoryAccess","when":"gitlens:enabled"},{"command":"gitlens.gk.switchOrganization","when":"gitlens:gk:hasOrganizations"},{"command":"gitlens.showPatchDetailsPage","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.applyPatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.copyWorkingChangesToWorktree","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"false"},{"command":"gitlens.createPatch","when":"false && gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.openCloudPatch","when":"false"},{"command":"gitlens.openPatch","when":"false && gitlens:enabled"},{"command":"gitlens.timeline.refresh","when":"false"},{"command":"gitlens.showBranchesView","when":"gitlens:enabled"},{"command":"gitlens.showCommitDetailsView","when":"gitlens:enabled"},{"command":"gitlens.showCommitsView","when":"gitlens:enabled"},{"command":"gitlens.showContributorsView","when":"gitlens:enabled"},{"command":"gitlens.showDraftsView","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpad","when":"gitlens:prerelease"},{"command":"gitlens.showFocusPage","when":"gitlens:enabled"},{"command":"gitlens.launchpad.split","when":"gitlens:enabled && config.gitlens.launchpad.allowMultiple"},{"command":"gitlens.launchpad.indicator.toggle","when":"gitlens:enabled"},{"command":"gitlens.showGraph","when":"gitlens:enabled"},{"command":"gitlens.showGraphPage","when":"gitlens:enabled"},{"command":"gitlens.graph.split","when":"gitlens:enabled && config.gitlens.graph.allowMultiple"},{"command":"gitlens.showGraphView","when":"gitlens:enabled"},{"command":"gitlens.toggleGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleMaximizedGraph","when":"gitlens:enabled"},{"command":"gitlens.showHomeView","when":"gitlens:enabled"},{"command":"gitlens.showAccountView","when":"gitlens:enabled"},{"command":"gitlens.showInCommitGraph","when":"false"},{"command":"gitlens.showInCommitGraphView","when":"false"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showRemotesView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showSearchAndCompareView","when":"gitlens:enabled"},{"command":"gitlens.showSettingsPage!views","when":"false"},{"command":"gitlens.showSettingsPage!file-annotations","when":"false"},{"command":"gitlens.showSettingsPage!branches-view","when":"false"},{"command":"gitlens.showSettingsPage!commits-view","when":"false"},{"command":"gitlens.showSettingsPage!contributors-view","when":"false"},{"command":"gitlens.showSettingsPage!file-history-view","when":"false"},{"command":"gitlens.showSettingsPage!line-history-view","when":"false"},{"command":"gitlens.showSettingsPage!remotes-view","when":"false"},{"command":"gitlens.showSettingsPage!repositories-view","when":"false"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"false"},{"command":"gitlens.showSettingsPage!stashes-view","when":"false"},{"command":"gitlens.showSettingsPage!tags-view","when":"false"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"false"},{"command":"gitlens.showSettingsPage!commit-graph","when":"false"},{"command":"gitlens.showStashesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showTagsView","when":"gitlens:enabled"},{"command":"gitlens.showTimelinePage","when":"gitlens:enabled"},{"command":"gitlens.showInTimeline","when":"gitlens:enabled && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.timeline.split","when":"gitlens:enabled && config.gitlens.visualHistory.allowMultiple"},{"command":"gitlens.showTimelineView","when":"gitlens:enabled"},{"command":"gitlens.showWorktreesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showWorkspacesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.compareWith","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.compareHeadWith","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.compareWorkingWith","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"},{"command":"gitlens.diffWithPrevious","when":"gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"gitlens:activeFileStatus =~ /tracked/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffFolderWithRevision","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithRevisionFrom","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"false"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"false"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.disableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.enableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.externalDiff","when":"!gitlens:hasVirtualFolders && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/ || config.gitlens.blame.toggleMode == window"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"false"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"false"},{"command":"gitlens.annotations.nextChange","when":"false"},{"command":"gitlens.annotations.previousChange","when":"false"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus =~ /computed\\b/"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ || config.gitlens.heatmap.toggleMode == window"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"false"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"false"},{"command":"gitlens.toggleFileChanges","when":"(gitlens:activeFileStatus =~ /blameable/  || config.gitlens.changes.toggleMode == window) && !gitlens:hasVirtualFolders"},{"command":"gitlens.toggleFileChangesOnly","when":"false"},{"command":"gitlens.toggleLineBlame","when":"!gitlens:disabled"},{"command":"gitlens.toggleCodeLens","when":"!gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.gitCommands","when":"!gitlens:disabled"},{"command":"gitlens.gitCommands.branch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.checkout","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.cherryPick","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.history","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.merge","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.rebase","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.add","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.remove","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.reset","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.revert","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.show","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.drop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.list","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.pop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.push","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.status","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.switch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.open","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.switchAIModel","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.revealCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showInDetailsView","when":"false"},{"command":"gitlens.showCommitsInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showFileHistoryInView","when":"false"},{"command":"gitlens.openFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFolderHistory","when":"false"},{"command":"gitlens.showQuickCommitDetails","when":"false"},{"command":"gitlens.showLineCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"false"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"false"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.quickOpenFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:hasRichRemotes && !gitlens:hasConnectedRemotes"},{"command":"gitlens.disconnectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:hasRichRemotes && gitlens:hasConnectedRemotes"},{"command":"gitlens.copyCurrentBranch","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRelativePathToClipboard","when":"gitlens:enabled"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openOnlyChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesOnRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.copyRemoteBranchesUrl","when":"false"},{"command":"gitlens.openBranchOnRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.views.openBranchOnRemote","when":"false"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"false"},{"command":"gitlens.openCurrentBranchOnRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.copyDeepLinkToComparison","when":"false"},{"command":"gitlens.copyDeepLinkToFile","when":"false"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"false"},{"command":"gitlens.copyDeepLinkToLines","when":"false"},{"command":"gitlens.copyDeepLinkToRepo","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToTag","when":"false"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"false"},{"command":"gitlens.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.openCommitOnRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.views.openCommitOnRemote","when":"false"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.copyRemoteCommitUrl","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.openComparisonOnRemote","when":"false"},{"command":"gitlens.copyRemoteComparisonUrl","when":"false"},{"command":"gitlens.openPullRequestOnRemote","when":"false"},{"command":"gitlens.copyRemotePullRequestUrl","when":"false"},{"command":"gitlens.openAssociatedPullRequestOnRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openFileFromRemote","when":"gitlens:enabled"},{"command":"gitlens.openFileOnRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"false"},{"command":"gitlens.openFileOnRemoteFrom","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openBlamePriorToChange","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevisionFrom","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoOnRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"false"},{"command":"gitlens.openRevisionFile","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffEditor"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"false"},{"command":"gitlens.openRevisionFileInDiffRight","when":"false"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"false"},{"command":"gitlens.openWorkingFileInDiffRight","when":"false"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.views.stash.apply","when":"false"},{"command":"gitlens.views.stash.delete","when":"false"},{"command":"gitlens.views.stash.delete.multi","when":"false"},{"command":"gitlens.views.stash.rename","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.resetAvatarCache","when":"gitlens:enabled"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.resetTrackedUsage","when":"gitlens:enabled"},{"command":"gitlens.inviteToLiveShare","when":"false"},{"command":"gitlens.browseRepoAtRevision","when":"!gitlens:hasVirtualFolders && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.browseRepoBeforeRevision","when":"!gitlens:hasVirtualFolders && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.views.browseRepoAtRevision","when":"false"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevision","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","when":"false"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.views.addRemote","when":"false"},{"command":"gitlens.views.highlightChanges","when":"false"},{"command":"gitlens.views.highlightRevisionChanges","when":"false"},{"command":"gitlens.views.restore","when":"false"},{"command":"gitlens.views.switchToAnotherBranch","when":"false"},{"command":"gitlens.views.switchToBranch","when":"false"},{"command":"gitlens.views.switchToCommit","when":"false"},{"command":"gitlens.views.switchToTag","when":"false"},{"command":"gitlens.views.copy","when":"false"},{"command":"gitlens.views.copyAsMarkdown","when":"false"},{"command":"gitlens.views.copyUrl","when":"false"},{"command":"gitlens.views.copyUrl.multi","when":"false"},{"command":"gitlens.views.openUrl","when":"false"},{"command":"gitlens.views.openUrl.multi","when":"false"},{"command":"gitlens.views.pruneRemote","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.publishBranch","when":"false"},{"command":"gitlens.views.publishRepository","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.openInIntegratedTerminal","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.star.multi","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.unstar.multi","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openPreviousChangesWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChangedFileDiffs","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.openOnlyChangedFiles","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareWithMergeBase","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithUpstream","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.addAuthors","when":"false"},{"command":"gitlens.views.addAuthor","when":"false"},{"command":"gitlens.views.addAuthor.multi","when":"false"},{"command":"gitlens.views.createWorktree","when":"false"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"false"},{"command":"gitlens.views.title.createWorktree","when":"false"},{"command":"gitlens.views.deleteWorktree","when":"false"},{"command":"gitlens.views.deleteWorktree.multi","when":"false"},{"command":"gitlens.views.openWorktree","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"false"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"false"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"false"},{"command":"gitlens.views.createBranch","when":"false"},{"command":"gitlens.views.title.createBranch","when":"false"},{"command":"gitlens.views.deleteBranch","when":"false"},{"command":"gitlens.views.deleteBranch.multi","when":"false"},{"command":"gitlens.views.renameBranch","when":"false"},{"command":"gitlens.views.cherryPick","when":"false"},{"command":"gitlens.views.cherryPick.multi","when":"false"},{"command":"gitlens.views.mergeBranchInto","when":"false"},{"command":"gitlens.views.pushToCommit","when":"false"},{"command":"gitlens.views.rebaseOntoBranch","when":"false"},{"command":"gitlens.views.rebaseOntoCommit","when":"false"},{"command":"gitlens.views.rebaseOntoUpstream","when":"false"},{"command":"gitlens.views.resetCommit","when":"false"},{"command":"gitlens.views.resetToCommit","when":"false"},{"command":"gitlens.views.resetToTip","when":"false"},{"command":"gitlens.views.revert","when":"false"},{"command":"gitlens.views.undoCommit","when":"false"},{"command":"gitlens.views.removeRemote","when":"false"},{"command":"gitlens.views.createTag","when":"false"},{"command":"gitlens.views.title.createTag","when":"false"},{"command":"gitlens.views.deleteTag","when":"false"},{"command":"gitlens.views.deleteTag.multi","when":"false"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"false"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"false"},{"command":"gitlens.views.createPullRequest","when":"false"},{"command":"gitlens.views.openPullRequest","when":"false"},{"command":"gitlens.views.openPullRequestChanges","when":"false"},{"command":"gitlens.views.openPullRequestComparison","when":"false"},{"command":"gitlens.views.clearComparison","when":"false"},{"command":"gitlens.views.clearReviewed","when":"false"},{"command":"gitlens.views.collapseNode","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.editNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"},{"command":"gitlens.views.loadMoreChildren","when":"false"},{"command":"gitlens.views.loadAllChildren","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"false"},{"command":"gitlens.views.branches.copy","when":"false"},{"command":"gitlens.views.branches.refresh","when":"false"},{"command":"gitlens.views.branches.setLayoutToList","when":"false"},{"command":"gitlens.views.branches.setLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.commitDetails.refresh","when":"false"},{"command":"gitlens.views.patchDetails.close","when":"false"},{"command":"gitlens.views.patchDetails.refresh","when":"false"},{"command":"gitlens.views.commits.copy","when":"false"},{"command":"gitlens.views.commits.refresh","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.contributors.copy","when":"false"},{"command":"gitlens.views.contributors.refresh","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"false"},{"command":"gitlens.views.drafts.copy","when":"false"},{"command":"gitlens.views.drafts.refresh","when":"false"},{"command":"gitlens.views.drafts.info","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.drafts.create","when":"false"},{"command":"gitlens.views.drafts.delete","when":"false"},{"command":"gitlens.views.draft.open","when":"false"},{"command":"gitlens.views.draft.openOnWeb","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.copy","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.graph.openInTab","when":"false"},{"command":"gitlens.views.graph.refresh","when":"false"},{"command":"gitlens.views.graphDetails.refresh","when":"false"},{"command":"gitlens.views.home.refresh","when":"false"},{"command":"gitlens.views.account.refresh","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.copy","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.pullRequest.close","when":"false"},{"command":"gitlens.views.pullRequest.copy","when":"false"},{"command":"gitlens.views.pullRequest.refresh","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.remotes.copy","when":"false"},{"command":"gitlens.views.remotes.refresh","when":"false"},{"command":"gitlens.views.remotes.setLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.repositories.copy","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"false"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"false"},{"command":"gitlens.views.searchAndCompare.clear","when":"false"},{"command":"gitlens.views.searchAndCompare.copy","when":"false"},{"command":"gitlens.views.searchAndCompare.refresh","when":"false"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"false"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"false"},{"command":"gitlens.views.stashes.copy","when":"false"},{"command":"gitlens.views.stashes.refresh","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.tags.copy","when":"false"},{"command":"gitlens.views.tags.refresh","when":"false"},{"command":"gitlens.views.tags.setLayoutToList","when":"false"},{"command":"gitlens.views.tags.setLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.timeline.refresh","when":"false"},{"command":"gitlens.views.workspaces.info","when":"false"},{"command":"gitlens.views.workspaces.convert","when":"false"},{"command":"gitlens.views.workspaces.create","when":"gitlens:plus"},{"command":"gitlens.views.workspaces.delete","when":"false"},{"command":"gitlens.views.workspaces.addRepos","when":"false"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"false"},{"command":"gitlens.views.workspaces.repo.locate","when":"false"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"false"},{"command":"gitlens.views.workspaces.createLocal","when":"false"},{"command":"gitlens.views.workspaces.openLocal","when":"false"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"false"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"false"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.open","when":"false"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.remove","when":"false"},{"command":"gitlens.views.workspaces.copy","when":"false"},{"command":"gitlens.views.workspaces.refresh","when":"false"},{"command":"gitlens.views.worktrees.copy","when":"false"},{"command":"gitlens.views.worktrees.refresh","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.graph.switchToEditorLayout","when":"gitlens:enabled && config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","when":"gitlens:enabled && config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.push","when":"false"},{"command":"gitlens.graph.pull","when":"false"},{"command":"gitlens.graph.fetch","when":"false"},{"command":"gitlens.graph.switchToAnotherBranch","when":"false"},{"command":"gitlens.graph.refresh","when":"false"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"false"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"false"},{"command":"gitlens.launchpad.refresh","when":"false"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.graph.createBranch","when":"false"},{"command":"gitlens.graph.deleteBranch","when":"false"},{"command":"gitlens.graph.openBranchOnRemote","when":"false"},{"command":"gitlens.graph.mergeBranchInto","when":"false"},{"command":"gitlens.graph.publishBranch","when":"false"},{"command":"gitlens.graph.rebaseOntoBranch","when":"false"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"false"},{"command":"gitlens.graph.renameBranch","when":"false"},{"command":"gitlens.graph.switchToBranch","when":"false"},{"command":"gitlens.graph.hideLocalBranch","when":"false"},{"command":"gitlens.graph.hideRemoteBranch","when":"false"},{"command":"gitlens.graph.hideRemote","when":"false"},{"command":"gitlens.graph.hideTag","when":"false"},{"command":"gitlens.graph.hideRefGroup","when":"false"},{"command":"gitlens.graph.cherryPick","when":"false"},{"command":"gitlens.graph.copyMessage","when":"false"},{"command":"gitlens.graph.copySha","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.graph.showInDetailsView","when":"false"},{"command":"gitlens.graph.openCommitOnRemote","when":"false"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.graph.rebaseOntoCommit","when":"false"},{"command":"gitlens.graph.resetCommit","when":"false"},{"command":"gitlens.graph.resetToCommit","when":"false"},{"command":"gitlens.graph.resetToTip","when":"false"},{"command":"gitlens.graph.revert","when":"false"},{"command":"gitlens.graph.switchToCommit","when":"false"},{"command":"gitlens.graph.undoCommit","when":"false"},{"command":"gitlens.graph.stash.save","when":"false"},{"command":"gitlens.graph.stash.apply","when":"false"},{"command":"gitlens.graph.stash.delete","when":"false"},{"command":"gitlens.graph.stash.rename","when":"false"},{"command":"gitlens.graph.createTag","when":"false"},{"command":"gitlens.graph.deleteTag","when":"false"},{"command":"gitlens.graph.switchToTag","when":"false"},{"command":"gitlens.graph.createWorktree","when":"false"},{"command":"gitlens.graph.createPullRequest","when":"false"},{"command":"gitlens.graph.openPullRequest","when":"false"},{"command":"gitlens.graph.openPullRequestChanges","when":"false"},{"command":"gitlens.graph.openPullRequestComparison","when":"false"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"false"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"false"},{"command":"gitlens.graph.compareWithMergeBase","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.graph.compareWithHead","when":"false"},{"command":"gitlens.graph.compareWithUpstream","when":"false"},{"command":"gitlens.graph.compareWithWorking","when":"false"},{"command":"gitlens.graph.openChangedFiles","when":"false"},{"command":"gitlens.graph.openChangedFileDiffs","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileRevisions","when":"false"},{"command":"gitlens.graph.openOnlyChangedFiles","when":"false"},{"command":"gitlens.graph.addAuthor","when":"false"},{"command":"gitlens.graph.copy","when":"false"},{"command":"gitlens.graph.columnAuthorOn","when":"false"},{"command":"gitlens.graph.columnAuthorOff","when":"false"},{"command":"gitlens.graph.columnDateTimeOn","when":"false"},{"command":"gitlens.graph.columnDateTimeOff","when":"false"},{"command":"gitlens.graph.columnShaOn","when":"false"},{"command":"gitlens.graph.columnShaOff","when":"false"},{"command":"gitlens.graph.columnGraphCompact","when":"false"},{"command":"gitlens.graph.columnGraphDefault","when":"false"},{"command":"gitlens.graph.columnChangesOn","when":"false"},{"command":"gitlens.graph.columnChangesOff","when":"false"},{"command":"gitlens.graph.columnGraphOn","when":"false"},{"command":"gitlens.graph.columnGraphOff","when":"false"},{"command":"gitlens.graph.columnMessageOn","when":"false"},{"command":"gitlens.graph.columnMessageOff","when":"false"},{"command":"gitlens.graph.columnRefOn","when":"false"},{"command":"gitlens.graph.columnRefOff","when":"false"},{"command":"gitlens.graph.resetColumnsDefault","when":"false"},{"command":"gitlens.graph.resetColumnsCompact","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"false"},{"command":"gitlens.graph.shareAsCloudPatch","when":"false"},{"command":"gitlens.enableDebugLogging","when":"config.gitlens.outputLevel != debug"},{"command":"gitlens.disableDebugLogging","when":"config.gitlens.outputLevel == debug"},{"command":"gitlens.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.experimental.generateCommitMessage.enabled"},{"command":"gitlens.resetAIKey","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"}],"editor/context":[{"command":"gitlens.openWorkingFile","when":"editorTextFocus && config.gitlens.menus.editor.compare && resourceScheme == gitlens","group":"1_z_gitlens@0"},{"submenu":"gitlens/editor/context/changes","when":"editorTextFocus && config.gitlens.menus.editor.compare && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_z_gitlens_open@1"},{"submenu":"gitlens/editor/context/openOn","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_z_gitlens_open@2"},{"submenu":"gitlens/editor/annotations","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_z_gitlens_open_file@1"},{"submenu":"gitlens/editor/history","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_z_gitlens_open_file@2"}],"editor/context/copy":[{"command":"gitlens.copyRelativePathToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens_remote@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteCommitUrl","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens_remote@3"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"3_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"3_gitlens@2"},{"command":"gitlens.copyDeepLinkToLines","when":"editorTextFocus && editorHasSelection && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFile","when":"editorTextFocus && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens@3"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_gitlens@4"}],"editor/lineNumber/context":[{"submenu":"gitlens/editor/lineNumber/context/share","when":"gitlens:hasRemotes && config.gitlens.menus.editorGutter.share && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"2_gitlens@2"},{"submenu":"gitlens/editor/lineNumber/context/changes","when":"config.gitlens.menus.editorGutter.compare && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"3_gitlens@1"},{"submenu":"gitlens/editor/lineNumber/context/openOn","when":"gitlens:hasRemotes && config.gitlens.menus.editorGutter.remote && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"3_gitlens@2"}],"editor/title":[{"command":"gitlens.openPatch","when":"false && editorLangId == diff"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && !isInDiffEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffRight","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openRevisionFileInDiffRight","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiffLeft","alt":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiffRight","alt":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@97"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffRight","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","when":"config.gitlens.fileAnnotations.command == blame && gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100","alt":"gitlens.toggleFileHeatmap"},{"command":"gitlens.toggleFileHeatmap","when":"config.gitlens.fileAnnotations.command == heatmap && gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"command":"gitlens.toggleFileChanges","when":"config.gitlens.fileAnnotations.command == changes && gitlens:activeFileStatus =~ /blameable/ && !gitlens:hasVirtualFolders && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"submenu":"gitlens/editor/annotations","when":"!config.gitlens.fileAnnotations.command && gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus =~ /computing\\b/ && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus =~ /computed\\b/ && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.timeline.refresh","when":"activeWebviewPanelId === gitlens.timeline","group":"navigation@-99"},{"command":"gitlens.graph.refresh","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-98"},{"command":"gitlens.launchpad.refresh","when":"activeWebviewPanelId === gitlens.focus","group":"navigation@-98"},{"command":"gitlens.launchpad.split","when":"resourceScheme == webview-panel && activeWebviewPanelId === gitlens.focus && config.gitlens.launchpad.allowMultiple","group":"navigation@-97"},{"command":"gitlens.graph.split","when":"resourceScheme == webview-panel && activeWebviewPanelId === gitlens.graph && config.gitlens.graph.allowMultiple","group":"navigation@-97"},{"command":"gitlens.timeline.split","when":"resourceScheme == webview-panel && activeWebviewPanelId === gitlens.timeline && config.gitlens.visualHistory.allowMultiple","group":"navigation@-97"}],"editor/title/context":[{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_cutcopypaste@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"1_cutcopypaste@101"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"2_a_gitlens@0"},{"submenu":"gitlens/editor/changes","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"2_a_gitlens_open@1"},{"submenu":"gitlens/editor/openOn","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"2_a_gitlens_open@2"},{"submenu":"gitlens/editor/history","when":"gitlens:enabled && config.gitlens.menus.editorTab.history && isFileSystemResource && resourceScheme =~ /^(?!output$|vscode-(?!remote|vfs$)).*$/","group":"2_a_gitlens_open_file@1"},{"command":"gitlens.launchpad.split","when":"resourceScheme == webview-panel && activeWebviewPanelId === gitlens.focus && config.gitlens.launchpad.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.graph.split","when":"resourceScheme == webview-panel && activeWebviewPanelId === gitlens.graph && config.gitlens.graph.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.timeline.split","when":"resourceScheme == webview-panel && activeWebviewPanelId === gitlens.timeline && config.gitlens.visualHistory.allowMultiple","group":"6_split_in_group_gitlens@2"}],"explorer/context":[{"submenu":"gitlens/explorer/changes","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"4_t_gitlens@0"},{"submenu":"gitlens/explorer/openOn","when":"!explorerResourceIsRoot && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"4_t_gitlens@1"},{"submenu":"gitlens/explorer/history","when":"gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_timeline@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"!explorerResourceIsRoot && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"6_copypath@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"!explorerResourceIsRoot && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"6_copypath@101"}],"extension/context":[{"command":"gitlens.getStarted","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@1"},{"command":"gitlens.showWelcomePage","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@2"},{"command":"gitlens.showSettingsPage","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@3"}],"git.commit":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && config.gitlens.menus.scmRepository.authors","group":"4_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@3"},{"command":"gitlens.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.experimental.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage","group":"4_gitlens@4"}],"menuBar/edit/copy":[{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"1_gitlens@2"}],"scm/sourceControl":[{"command":"gitlens.showGraph","when":"gitlens:enabled && config.gitlens.menus.scm.graph && gitlens:plus:enabled && scmProvider == git && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"6_gitlens@1"}],"scm/title":[{"command":"gitlens.stashSave","when":"gitlens:enabled && config.gitlens.menus.scmRepositoryInline.stash && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git","group":"navigation@-1001"},{"command":"gitlens.showGraph","when":"gitlens:enabled && config.gitlens.menus.scmRepositoryInline.graph && gitlens:plus:enabled && scmProvider == git && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"navigation@-1000"},{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && config.gitlens.menus.scmRepository.authors","group":"2_z_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@3"},{"command":"gitlens.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.experimental.generateCommitMessage.enabled && scmProvider == git && config.gitlens.menus.scmRepository.generateCommitMessage","group":"2_z_gitlens@4"},{"command":"gitlens.showGraph","when":"gitlens:enabled && config.gitlens.menus.scmRepository.graph && gitlens:plus:enabled && scmProvider == git && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"2_z_gitlens@5"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroupInline.stash","group":"inline@-1"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.stash","group":"1_modification@100"},{"submenu":"gitlens/scm/resourceGroup/changes","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmGroup.compare","group":"2_gitlens@1"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@2"},{"command":"gitlens.openOnlyChangedFiles","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@3"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@98"}],"scm/resourceFolder/context":[{"submenu":"gitlens/scm/resourceFolder/changes","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.compare","group":"2_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"}],"scm/resourceState/context":[{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmItemInline.stash","group":"inline@1"},{"submenu":"gitlens/scm/resourceState/changes","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.compare","group":"navigation"},{"submenu":"gitlens/scm/resourceState/openOn","when":"gitlens:enabled && gitlens:hasRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.remote","group":"navigation"},{"submenu":"gitlens/scm/resourceState/history","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.history","group":"1_a_gitlens@2"},{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmItem.stash","group":"1_modification@2"},{"submenu":"gitlens/share","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.share","group":"7_a_gitlens_share@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && scmResourceGroup =~ /^(workingTree|index)$/ && config.gitlens.menus.scmItem.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.copyRelativePathToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/ && config.gitlens.menus.scmItem.clipboard","group":"7_cutcopypaste@98"}],"timeline/item/context":[{"command":"gitlens.openCommitOnRemote","when":"false && gitlens:enabled && gitlens:hasRemotes && timelineItem =~ /git:file:commit\\b/","group":"inline@99","alt":"gitlens.copyRemoteCommitUrl"}],"view/title":[{"command":"gitlens.views.switchToAnotherBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.branches/","group":"navigation@10"},{"command":"gitlens.views.title.createBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /gitlens\\.views\\.branches\\b/","group":"navigation@11"},{"command":"gitlens.views.branches.setLayoutToList","when":"view =~ /gitlens\\.views\\.branches/ && config.gitlens.views.branches.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.branches.setLayoutToTree","when":"view =~ /gitlens\\.views\\.branches/ && config.gitlens.views.branches.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.branches.refresh","when":"view =~ /^gitlens\\.views\\.branches/","group":"navigation@99"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.branches/ && !config.gitlens.views.branches.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"view =~ /^gitlens\\.views\\.branches/ && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"view =~ /^gitlens\\.views\\.branches/ && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"view =~ /^gitlens\\.views\\.branches/ && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/","group":"navigation@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/","group":"navigation@10"},{"command":"gitlens.showGraph","when":"view =~ /^gitlens\\.views\\.commits/ && gitlens:plus:enabled","group":"navigation@11"},{"command":"gitlens.views.commitDetails.refresh","when":"view =~ /^gitlens\\.views\\.commitDetails/","group":"navigation@99"},{"command":"gitlens.views.patchDetails.refresh","when":"view =~ /^gitlens\\.views\\.patchDetails/","group":"navigation@98"},{"command":"gitlens.views.patchDetails.close","when":"view =~ /^gitlens\\.views\\.patchDetails/","group":"navigation@99"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view =~ /^gitlens\\.views\\.commits/ && gitlens:views:commits:filtered","group":"navigation@50"},{"command":"gitlens.views.commits.refresh","when":"view =~ /^gitlens\\.views\\.commits/","group":"navigation@99"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view =~ /^gitlens\\.views\\.commits/ && gitlens:views:commits:filtered","group":"3_gitlens@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"view =~ /^gitlens\\.views\\.commits/","group":"3_gitlens@1"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"view =~ /^gitlens\\.views\\.commits/ && !gitlens:views:commits:hideMergeCommits","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"view =~ /^gitlens\\.views\\.commits/ && gitlens:views:commits:hideMergeCommits","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.commits/ && !config.gitlens.views.commits.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"view =~ /^gitlens\\.views\\.commits/ && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"view =~ /^gitlens\\.views\\.commits/ && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"view =~ /^gitlens\\.views\\.commits/ && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.showGraph","when":"view =~ /^gitlens\\.views\\.commits/ && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"command":"gitlens.showRepositoriesView","when":"!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.commits/","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.addAuthors","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.contributors/","group":"navigation@10"},{"command":"gitlens.views.contributors.refresh","when":"view =~ /^gitlens\\.views\\.contributors/","group":"navigation@99"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"view =~ /^gitlens\\.views\\.contributors/ && !gitlens:views:contributors:hideMergeCommits","group":"3_gitlens@0"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"view =~ /^gitlens\\.views\\.contributors/ && gitlens:views:contributors:hideMergeCommits","group":"3_gitlens@0"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"view =~ /^gitlens\\.views\\.contributors/ && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.contributors/ && !config.gitlens.views.contributors.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"view =~ /^gitlens\\.views\\.contributors/ && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"view =~ /^gitlens\\.views\\.contributors/ && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@1"},{"command":"gitlens.views.drafts.refresh","when":"view =~ /^gitlens\\.views\\.drafts/","group":"navigation@99"},{"command":"gitlens.views.drafts.create","when":"view =~ /^gitlens\\.views\\.drafts/ && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.drafts/ && !config.gitlens.views.drafts.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.drafts/ && config.gitlens.views.drafts.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.drafts.info","when":"view =~ /^gitlens\\.views\\.drafts/","group":"8_info@1"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory/ && gitlens:views:fileHistory:canPin && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory/ && gitlens:views:fileHistory:canPin && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing","group":"navigation@11"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.fileHistory/ && gitlens:views:fileHistory:cursorFollowing","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view =~ /^gitlens\\.views\\.fileHistory/","group":"navigation@99"},{"command":"gitlens.views.fileHistory.changeBase","when":"view =~ /^gitlens\\.views\\.fileHistory/","group":"1_gitlens@0"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && config.gitlens.advanced.fileHistoryFollowsRenames","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && !config.gitlens.advanced.fileHistoryShowMergeCommits","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && config.gitlens.advanced.fileHistoryShowMergeCommits","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && !config.gitlens.advanced.fileHistoryShowAllBranches","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !gitlens:views:fileHistory:cursorFollowing && config.gitlens.advanced.fileHistoryShowAllBranches","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.fileHistory/ && !config.gitlens.views.fileHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.fileHistory/ && config.gitlens.views.fileHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.graph.openInTab","when":"view =~ /^gitlens\\.views\\.graph\\b/","group":"navigation@-100"},{"command":"gitlens.views.graph.refresh","when":"view =~ /^gitlens\\.views\\.graph\\b/","group":"navigation@-99"},{"command":"gitlens.views.graphDetails.refresh","when":"view =~ /^gitlens\\.views\\.graphDetails/","group":"navigation@99"},{"command":"gitlens.views.home.refresh","when":"view =~ /^gitlens\\.views\\.home/","group":"navigation@99"},{"command":"gitlens.views.account.refresh","when":"view =~ /^gitlens\\.views\\.account/","group":"navigation@99"},{"command":"gitlens.showLineHistoryView","when":"!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.fileHistory/","group":"8_gitlens_toggles@0"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory/ && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory/ && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.refresh","when":"view =~ /^gitlens\\.views\\.lineHistory/","group":"navigation@99"},{"command":"gitlens.views.lineHistory.changeBase","when":"view =~ /^gitlens\\.views\\.lineHistory/","group":"1_gitlens@0"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.lineHistory/ && !config.gitlens.views.lineHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.lineHistory/ && config.gitlens.views.lineHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.addRemote","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /gitlens\\.views\\.remotes/","group":"navigation@1"},{"command":"gitlens.views.pullRequest.refresh","when":"view =~ /^gitlens\\.views\\.pullRequest/","group":"navigation@98"},{"command":"gitlens.views.pullRequest.close","when":"view =~ /gitlens\\.views\\.pullRequest/","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.pullRequest/ && !config.gitlens.views.pullRequest.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.pullRequest/ && config.gitlens.views.pullRequest.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setLayoutToList","when":"view =~ /gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"view =~ /gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.remotes.refresh","when":"view =~ /^gitlens\\.views\\.remotes/","group":"navigation@99"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.remotes/ && !config.gitlens.views.remotes.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"view =~ /^gitlens\\.views\\.remotes/ && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"view =~ /^gitlens\\.views\\.remotes/ && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.repositories/","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.repositories/","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.repositories/","group":"navigation@3"},{"command":"gitlens.views.repositories.refresh","when":"view =~ /^gitlens\\.views\\.repositories/","group":"navigation@99"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@0"},{"submenu":"gitlens/view/repositories/sections","when":"view =~ /^gitlens\\.views\\.repositories/","group":"4_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.repositories/ && !config.gitlens.views.repositories.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.repositories/ && config.gitlens.views.repositories.avatars","group":"5_gitlens@0"},{"submenu":"gitlens/view/searchAndCompare/new","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.clear","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.refresh","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/","group":"navigation@99"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/ && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@0"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.stashes/","group":"navigation@10"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.stashes/","group":"navigation@11"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.stashes/ && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.stashes/ && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.stashes/ && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.refresh","when":"view =~ /^gitlens\\.views\\.stashes/","group":"navigation@99"},{"command":"gitlens.views.title.createTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view =~ /gitlens\\.views\\.tags\\b/","group":"navigation@10"},{"command":"gitlens.views.tags.setLayoutToList","when":"view =~ /gitlens\\.views\\.tags/ && config.gitlens.views.tags.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.tags.setLayoutToTree","when":"view =~ /gitlens\\.views\\.tags/ && config.gitlens.views.tags.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.tags.refresh","when":"view =~ /^gitlens\\.views\\.tags/","group":"navigation@99"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.tags/ && !config.gitlens.views.tags.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.tags/ && config.gitlens.views.tags.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.timeline.refresh","when":"view =~ /^gitlens\\.views\\.timeline/","group":"navigation@99"},{"command":"gitlens.views.workspaces.info","when":"view =~ /^gitlens\\.views\\.workspaces/","group":"8_info@1"},{"command":"gitlens.views.workspaces.create","when":"view =~ /^gitlens\\.views\\.workspaces/ && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.workspaces.refresh","when":"view =~ /^gitlens\\.views\\.workspaces/","group":"navigation@99"},{"command":"gitlens.views.title.createWorktree","when":"view =~ /^gitlens\\.views\\.worktrees/","group":"navigation@10"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.worktrees/","group":"navigation@10"},{"command":"gitlens.views.worktrees.refresh","when":"view =~ /^gitlens\\.views\\.worktrees/","group":"navigation@99"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"view =~ /^gitlens\\.views\\.worktrees/ && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"view =~ /^gitlens\\.views\\.worktrees/ && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"view =~ /^gitlens\\.views\\.worktrees/ && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"view =~ /^gitlens\\.views\\.worktrees/ && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view =~ /^gitlens\\.views\\.(branches|commits|fileHistory|lineHistory|remotes|repositories|tags|worktrees)/ && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view =~ /^gitlens\\.views\\.(branches|commits|fileHistory|lineHistory|remotes|repositories|tags|worktrees)/ && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"submenu":"gitlens/graph/configuration","when":"view =~ /^gitlens\\.views\\.graph\\b/","group":"navigation@-98"},{"command":"gitlens.showSettingsPage!branches-view","when":"view =~ /^gitlens\\.views\\.branches/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!commits-view","when":"view =~ /^gitlens\\.views\\.commits/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!contributors-view","when":"view =~ /^gitlens\\.views\\.contributors/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!file-history-view","when":"view =~ /^gitlens\\.views\\.fileHistory/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!line-history-view","when":"view =~ /^gitlens\\.views\\.lineHistory/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!remotes-view","when":"view =~ /^gitlens\\.views\\.remotes/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!repositories-view","when":"view =~ /^gitlens\\.views\\.repositories/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!stashes-view","when":"view =~ /^gitlens\\.views\\.stashes/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!tags-view","when":"view =~ /^gitlens\\.views\\.tags/","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"view =~ /^gitlens\\.views\\.worktrees/","group":"9_gitlens@1"}],"view/item/context":[{"command":"gitlens.plus.login","when":"viewItem == gitlens:message:signin","group":"inline@1"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~  /gitlens:draft\\b/ && gitlens:plus","group":"inline@99"},{"command":"gitlens.views.draft.open","when":"viewItem =~  /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~  /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@2"},{"command":"gitlens.views.drafts.delete","when":"viewItem =~  /gitlens:draft\\b(?=.*?\\b\\+mine\\b)/ && gitlens:plus","group":"6_gitlens_actions@1"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~  /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"inline@1"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~  /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/","group":"inline@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?!.*?\\b\\+hasPath\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@3"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/","group":"inline@3","alt":"gitlens.views.workspaces.openLocal"},{"command":"gitlens.views.workspaces.addRepos","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"!listMultiSelection && viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+linked\\b)(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.workspaces.createLocal","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+empty\\b)/","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.workspaces.openLocal","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/","group":"2_gitlens_quickopen@4"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/","group":"2_gitlens_quickopen@5"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"!listMultiSelection && viewItem =~ /(gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)|gitlens:repositories\\b(?=.*?\\b\\+linked\\b))/","group":"2_gitlens_quickopen@6"},{"command":"gitlens.views.workspaces.delete","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/","group":"6_gitlens_actions@1"},{"command":"gitlens.views.switchToAnotherBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/","group":"inline@10"},{"command":"gitlens.views.createBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/","group":"inline@11"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"inline@98","alt":"gitlens.copyRemoteBranchesUrl"},{"command":"gitlens.views.switchToAnotherBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.openBranchesOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"!listMultiSelection && view =~ /^gitlens\\.views\\.repositories/ && viewItem =~ /gitlens:branches\\b/ && !config.gitlens.views.repositories.branches.showBranchComparison","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"!listMultiSelection && view =~ /^gitlens\\.views\\.repositories/ && viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.showBranchComparison","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.switchToBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@7"},{"command":"gitlens.views.switchToAnotherBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@7"},{"command":"gitlens.views.publishBranch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@8"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@8"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@8"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@8"},{"command":"gitlens.views.createPullRequest","when":"gitlens:hasRemotes && gitlens:action:createPullRequest && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/","group":"inline@9"},{"command":"gitlens.views.undoCommit","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/","group":"inline@78"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/","group":"inline@79","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pushToCommit","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/","group":"inline@80"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/","group":"inline@97"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"inline@98"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"inline@98"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"inline@99","alt":"gitlens.copyRemoteBranchUrl"},{"command":"gitlens.views.switchToAnotherBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.switchToBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.publishBranch","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.push","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.mergeBranchInto","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.rebaseOntoBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoUpstream","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.views.renameBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@6"},{"command":"gitlens.views.deleteBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@7"},{"command":"gitlens.views.deleteBranch.multi","when":"listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions_@7"},{"command":"gitlens.views.createTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions_@8"},{"command":"gitlens.views.createWorktree","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions_@9"},{"command":"gitlens.views.createPullRequest","when":"!listMultiSelection && gitlens:hasRemotes && gitlens:action:createPullRequest && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions_@10"},{"command":"gitlens.views.openBranchOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"3_gitlens_explore@11"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|tag)\\b/","group":"3_gitlens_explore@12"},{"command":"gitlens.views.compareWithUpstream","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.views.compareWithHead","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithWorking","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareWithMergeBase","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@4"},{"command":"gitlens.views.compareAncestryWithWorking","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@5"},{"command":"gitlens.views.compareWithSelected","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectForCompare","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"4_gitlens_compare@99"},{"command":"gitlens.views.compareFileWithSelected","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b/ && gitlens:views:canCompare:file","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectFileForCompare","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/","group":"4_gitlens_compare@99"},{"command":"gitlens.views.star","when":"!listMultiSelection && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.star.multi","when":"listMultiSelection && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar","when":"!listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar.multi","when":"listMultiSelection && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.addAuthors","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributors\\b/","group":"inline@1"},{"command":"gitlens.views.addAuthors","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributors\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.inviteToLiveShare","when":"gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/","group":"inline@1"},{"command":"gitlens.views.addAuthor","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/","group":"inline@2"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.inviteToLiveShare","when":"!listMultiSelection && gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.addAuthor","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.addAuthor.multi","when":"listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:contributor\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.views.copyRemoteCommitUrl"},{"command":"gitlens.views.cherryPick","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.cherryPick.multi","when":"listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.undoCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pushToCommit","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetToTip","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+rebase\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions_1@1"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.copyPatchToClipboard","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.createCloudPatch","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@3"},{"command":"gitlens.views.createTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions_1@4"},{"command":"gitlens.views.openChangedFileDiffs","when":"!listMultiSelection && viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"inline@90","alt":"gitlens.views.openChangedFileDiffsWithWorking"},{"submenu":"gitlens/commit/changes","when":"!listMultiSelection && viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.showInDetailsView","when":"!listMultiSelection && viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens_explore@0"},{"command":"gitlens.showInCommitGraph","when":"!listMultiSelection && viewItem =~ /gitlens:(branch|commit|stash|tag)\\b(?!.*?\\b\\+closed\\b)/","group":"3_gitlens_explore@1"},{"command":"gitlens.revealCommitInView","when":"!listMultiSelection && view =~ /gitlens\\.views\\.(?!commits|branches\\b)/ && viewItem =~ /gitlens:commit\\b/","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:commit\\b/","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:commit\\b/","group":"3_gitlens_explore@2"},{"submenu":"gitlens/share","when":"viewItem =~ /gitlens:(branch|commit|compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))|remote|repo-folder|repository|stash|status:upstream|tag|workspace|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_a_share@1"},{"command":"gitlens.copyRelativePathToClipboard","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.copyShaToClipboard","when":"!listMultiSelection && viewItem =~ /gitlens:(commit|stash)\\b/","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyMessageToClipboard","when":"!listMultiSelection && viewItem =~ /gitlens:(commit|stash)\\b/","group":"7_gitlens_cutcopypaste@4"},{"command":"gitlens.copyPatchToClipboard","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyShaToClipboard","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.copyMessageToClipboard","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/","group":"7_gitlens_cutcopypaste@98"},{"submenu":"gitlens/commit/copy","when":"!listMultiSelection && viewItem =~ /gitlens:(branch|commit|remote|repo-folder|repository|stash|tag|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_cutcopypaste@10"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/","group":"inline@-1"},{"command":"gitlens.views.pushToCommit","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/","group":"inline@-1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file(:results|\\b(?=.*?\\b\\+(committed|stashed)\\b))/","group":"inline@1","alt":"gitlens.views.openFile"},{"command":"gitlens.views.openChanges","when":"view =~ /gitlens\\.views\\.(?!fileHistory|lineHistory)\\b/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/","group":"inline@96"},{"command":"gitlens.views.openFile","when":"view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/","group":"inline@96"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|unstaged)\\b)/","group":"inline@96"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/","group":"inline@97"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/","group":"inline@97"},{"command":"gitlens.copyShaToClipboard","when":"view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.stageFile","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageFile","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.stashSaveFiles","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openChanges","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b/","group":"2_gitlens_quickopen@1"},{"submenu":"gitlens/commit/file/changes","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.showInDetailsView","when":"!listMultiSelection && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.openFile","when":"!listMultiSelection && viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"2_gitlens_quickopen_file@3"},{"command":"gitlens.views.openFileRevision","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/","group":"2_gitlens_quickopen_file@4"},{"command":"gitlens.openFileOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:hasRemotes","group":"2_gitlens_quickopen_file@5","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"submenu":"gitlens/commit/file/commit","when":"!listMultiSelection && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"3_gitlens_explore@1"},{"submenu":"gitlens/commit/file/history","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b/","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"!listMultiSelection && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithWorking","when":"!listMultiSelection && !gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"4_gitlens_compare@3"},{"command":"gitlens.views.applyChanges","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.restore","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.applyChanges","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.restore","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/","group":"8_gitlens_actions@2"},{"command":"gitlens.openFileOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens_open@2","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && viewItem =~ /gitlens:autolinked:items\\b/ && gitlens:hasRichRemotes && !gitlens:hasConnectedRemotes","group":"inline@98"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/","group":"inline@99"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && viewItem =~ /gitlens:autolinked:items\\b/ && gitlens:hasRichRemotes && !gitlens:hasConnectedRemotes","group":"6_gitlens_actions@1"},{"command":"gitlens.showSettingsPage!autolinks","when":"!listMultiSelection && viewItem =~ /gitlens:autolinked:items\\b/","group":"8_gitlens_actions@99"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"inline@99","alt":"gitlens.views.copyUrl"},{"command":"gitlens.views.openUrl","when":"!listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.views.openUrl.multi","when":"listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.views.copyUrl","when":"!listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyUrl.multi","when":"listMultiSelection && viewItem =~ /gitlens:autolinked:item\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.views.openPullRequest","when":"gitlens:action:openPullRequest > 1 && viewItem =~ /gitlens:pullrequest\\b/","group":"inline@1"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled","group":"inline@2"},{"command":"gitlens.views.openPullRequestComparison","when":"viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"inline@3"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:pullrequest\\b/","group":"inline@99","alt":"gitlens.copyRemotePullRequestUrl"},{"command":"gitlens.views.openPullRequestChanges","when":"!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled","group":"1_gitlens_actions@1"},{"command":"gitlens.views.openPullRequest","when":"!listMultiSelection && gitlens:action:openPullRequest > 1 && viewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@98"},{"command":"gitlens.openPullRequestOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.showInCommitGraph","when":"!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"3_gitlens_explore@1"},{"command":"gitlens.views.openPullRequestComparison","when":"!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.copyRemotePullRequestUrl","when":"!listMultiSelection && viewItem =~ /gitlens:pullrequest\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.addRemote","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remotes\\b/","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.views.addRemote","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remotes\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/","group":"inline@97"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/","group":"inline@98"},{"command":"gitlens.disconnectRemoteProvider","when":"config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/","group":"inline@98"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@99","alt":"gitlens.copyRemoteRepositoryUrl"},{"command":"gitlens.views.fetch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pruneRemote","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.openRepoOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:remote\\b/","group":"5_gitlens_open@1"},{"command":"gitlens.openBranchesOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:remote\\b/","group":"5_gitlens_open@2"},{"command":"gitlens.views.removeRemote","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:remote\\b/","group":"6_gitlens_terminal@1"},{"command":"gitlens.views.setAsDefault","when":"!listMultiSelection && viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unsetAsDefault","when":"!listMultiSelection && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/","group":"8_gitlens_actions@1"},{"command":"gitlens.connectRemoteProvider","when":"!listMultiSelection && config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/","group":"8_gitlens_actions@2"},{"command":"gitlens.disconnectRemoteProvider","when":"!listMultiSelection && config.gitlens.integrations.enabled && viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/","group":"8_gitlens_actions@2"},{"submenu":"gitlens/commit/browse","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(branch|commit|file\\b(?=.*?\\b\\+committed\\b)|stash|tag)\\b/","group":"3_gitlens_explore@10"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/","group":"inline@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"!listMultiSelection && viewItem =~ /gitlens:workspaceMissingRepository\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.remove","when":"!listMultiSelection && viewItem =~ /gitlens:workspaceMissingRepository\\b/","group":"6_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"inline@100","alt":"gitlens.views.workspaces.repo.open"},{"command":"gitlens.views.workspaces.repo.open","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"0_1gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"0_1gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"0_1gitlens_actions@3"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"0_2gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/","group":"0_2gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.remove","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/","group":"0_3gitlens_actions@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"inline@97"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openInTerminal","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/","group":"2_gitlens_quickopen@3"},{"command":"gitlens.openRepoOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes","group":"2_gitlens_quickopen@4"},{"command":"gitlens.showCommitSearch","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b/","group":"3_gitlens_explore@1"},{"command":"gitlens.stashSave","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.star","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"listMultiSelection && viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"!listMultiSelection && viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/","group":"8_gitlens_actions_@2"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+behind\\b)/","group":"inline@97"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled","group":"inline@100"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view =~ /^gitlens\\.views\\.commits/ && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"inline@101"},{"command":"gitlens.views.fetch","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openInTerminal","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.openRepoOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/ && gitlens:hasRemotes","group":"2_gitlens_quickopen@3"},{"command":"gitlens.showGraph","when":"!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled","group":"3_gitlens_explore@1"},{"command":"gitlens.showCommitSearch","when":"!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/","group":"3_gitlens_explore@2"},{"command":"gitlens.stashSave","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:repo-folder\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.star","when":"!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"listMultiSelection && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"!listMultiSelection && viewItem =~ /gitlens:repo-folder\\b/","group":"8_gitlens_actions_@2"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"!listMultiSelection && view =~ /^gitlens\\.views\\.commits/ && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"8_gitlens_filter_@1"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"!listMultiSelection && view =~ /^gitlens\\.views\\.commits/ && viewItem =~ /gitlens:repo-folder\\b/","group":"8_gitlens_filter_@2"},{"command":"gitlens.views.publishRepository","when":"!gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/","group":"inline@99"},{"command":"gitlens.views.addRemote","when":"!gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:none/","group":"inline@2"},{"command":"gitlens.views.publishBranch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/","group":"inline@99"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:ahead/","group":"inline@99","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:behind/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status(\\-branch)?:upstream:(?!(missing|none))/","group":"inline@98"},{"command":"gitlens.views.createPullRequest","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:action:createPullRequest && viewItem =~ /gitlens:status:upstream:same/","group":"inline@1"},{"command":"gitlens.views.openBranchOnRemote","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream:same/","group":"inline@97","alt":"gitlens.copyRemoteBranchUrl"},{"command":"gitlens.views.push","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:status:upstream:behind","group":"1_gitlens_actions@1"},{"command":"gitlens.views.fetch","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream/","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.views.createTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream/","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.createPullRequest","when":"!listMultiSelection && gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:action:createPullRequest && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.openBranchOnRemote","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/","group":"2_gitlens_quickopen_remote@1"},{"command":"gitlens.views.openInTerminal","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream\\b/","group":"2_gitlens_quickopen_terminal@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"!listMultiSelection && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:status:upstream\\b/","group":"2_gitlens_quickopen_terminal@2"},{"command":"gitlens.copyRemoteBranchUrl","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:status:upstream:(?!(missing|none))/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@99"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@96"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/","group":"inline@2"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.editNode","when":"!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.clearReviewed","when":"!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"1_gitlens@3"},{"command":"gitlens.views.clearComparison","when":"!listMultiSelection && viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"1_gitlens@4"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"!listMultiSelection && view =~ /gitlens\\.views\\.branches\\b/ && viewItem =~ /gitlens:compare:branch\\b/","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"!listMultiSelection && view =~ /gitlens\\.views\\.commits\\b/ && viewItem =~ /gitlens:compare:branch\\b/","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"!listMultiSelection && view =~ /gitlens\\.views\\.repositories\\b/ && viewItem =~ /gitlens:compare:branch(?!.*?\\b\\+root\\b)\\b/","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"!listMultiSelection && view =~ /gitlens\\.views\\.repositories\\b/ && viewItem =~ /gitlens:(compare:branch(?=.*?\\b\\+root\\b)|branches|branch(?=.*?\\b\\+commits\\b)|reflog|remotes|stashes|status:upstream|tags)\\b/","group":"8_gitlens_toggles@99"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"inline@96"},{"submenu":"gitlens/comparison/results/files/filter/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/","group":"inline@99"},{"submenu":"gitlens/comparison/results/files/filtered/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/","group":"inline@99"},{"command":"gitlens.views.clearReviewed","when":"!listMultiSelection && viewItem =~ /gitlens:results:files\\b/","group":"1_gitlens@1"},{"submenu":"gitlens/comparison/results/files/filter","when":"!listMultiSelection && viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/","group":"1_gitlens@2"},{"submenu":"gitlens/comparison/results/files/filtered","when":"!listMultiSelection && viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/","group":"1_gitlens@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/","group":"inline@97"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@97"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/","group":"inline@96"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.clearReviewed","when":"!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)/","group":"1_gitlens_actions@3"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.copyPatchToClipboard","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.createCloudPatch","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.openComparisonOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"2_gitlens_quickopen@1 && gitlens:hasRemotes"},{"command":"gitlens.views.openDirectoryDiff","when":"!listMultiSelection && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"!listMultiSelection && viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/","group":"7_gitlens_filter@1"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"!listMultiSelection && viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b/","group":"7_gitlens_filter@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@1"},{"command":"gitlens.views.editNode","when":"!listMultiSelection && viewItem =~ /gitlens:search:results(?!:)\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteComparisonUrl"},{"command":"gitlens.openComparisonOnRemote","when":"!listMultiSelection && viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:hasRemotes","group":"3_gitlens_explore@0"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"inline@98"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stashes","group":"inline@99"},{"command":"gitlens.stashSave","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"1_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stashes","group":"1_gitlens_actions@2"},{"command":"gitlens.views.stash.apply","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"inline@1"},{"command":"gitlens.views.stash.rename","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"inline@98"},{"command":"gitlens.views.stash.delete","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"inline@99"},{"command":"gitlens.views.stash.apply","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.rename","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"1_gitlens_actions@2"},{"command":"gitlens.views.stash.delete","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"1_gitlens_actions@3"},{"command":"gitlens.views.stash.delete.multi","when":"listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:stash","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tags\\b/","group":"inline@1"},{"command":"gitlens.views.createTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tags\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.switchToTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tag\\b/","group":"inline@10"},{"command":"gitlens.views.switchToTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.deleteTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:tag","group":"1_gitlens_actions@2"},{"command":"gitlens.views.deleteTag.multi","when":"listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem == gitlens:tag","group":"1_gitlens_actions@2"},{"command":"gitlens.views.createBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createWorktree","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:worktrees\\b/","group":"inline@1"},{"command":"gitlens.views.createWorktree","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:worktrees\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktree","when":"!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"!listMultiSelection && viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"listMultiSelection && viewItem =~ /gitlens:worktree\\b/","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"!listMultiSelection && viewItem =~ /gitlens:worktree\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.deleteWorktree","when":"!listMultiSelection && !gitlens:readonly && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|main)\\b)/","group":"6_gitlens_actions@1"},{"command":"gitlens.views.deleteWorktree.multi","when":"listMultiSelection && !gitlens:readonly && viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|main)\\b)/","group":"6_gitlens_actions@1"},{"command":"gitlens.views.stageDirectory","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageDirectory","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:(?=(autolinked:item\\b|branch|commit|contributor|file(?!.*?\\b\\+(staged|unstaged))\\b|folder|history:line|pullrequest|remote|repository|repo-folder|search:results|stash|tag|workspace|worktree)\\b)/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.dismissNode","when":"!listMultiSelection && viewItem =~ /gitlens:(compare:picker:ref|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/","group":"1_gitlens_actions@98"},{"command":"gitlens.views.collapseNode","when":"!listMultiSelection && viewItem =~ /gitlens:(branch|compare|folder|results|search|status|tag)\\b/","group":"9_gitlens@1"},{"command":"gitlens.views.expandNode","when":"!listMultiSelection && viewItem =~ /gitlens:(branch|compare|folder|results|search|status|tag)\\b/","group":"9_gitlens@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!(file|message|date-marker)\\b)/","group":"9_gitlens_z@99"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"!listMultiSelection && viewItem =~ /gitlens:pager\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"!listMultiSelection && viewItem == gitlens:date-marker && config.gitlens.views.showRelativeDateMarkers","group":"1_gitlens@0"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && view == pr:github && viewItem =~ /pullrequest(:local)?:nonactive|description/ && config.gitlens.menus.ghpr.worktree","group":"2_gitlens@1"}],"webview/context":[{"command":"gitlens.graph.switchToAnotherBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.switchToBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.publishBranch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.pull","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.mergeBranchInto","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.rebaseOntoBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.renameBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions@6"},{"command":"gitlens.graph.deleteBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@7"},{"command":"gitlens.graph.createBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions_@7"},{"command":"gitlens.graph.createTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions_@8"},{"command":"gitlens.graph.createWorktree","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions_@9"},{"command":"gitlens.graph.createPullRequest","when":"gitlens:hasRemotes && gitlens:action:createPullRequest && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"1_gitlens_actions_@10"},{"command":"gitlens.graph.hideLocalBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|remote)\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.hideRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.hideRemoteBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.hideRefGroup","when":"webviewItemGroup =~ /gitlens:refGroup\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@12"},{"command":"gitlens.graph.openBranchOnRemote","when":"gitlens:hasRemotes && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.cherryPick","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.undoCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.revert","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.resetToCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.resetToTip","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b/","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.resetCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.rebaseOntoCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions@6"},{"command":"gitlens.graph.switchToCommit","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions@7"},{"command":"gitlens.graph.createBranch","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions_1@1"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.copyPatchToClipboard","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"7_cutcopypaste@97"},{"command":"gitlens.createCloudPatch","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@3"},{"command":"gitlens.graph.createTag","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/graph/commit/changes","when":"!listMultiSelection && webviewItem =~ /gitlens:(commit|stash|wip)\\b/","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.showInDetailsView","when":"!listMultiSelection && webviewItem =~ /gitlens:(commit|stash|wip)\\b/","group":"3_gitlens_explore@0"},{"command":"gitlens.graph.openSCM","when":"!listMultiSelection && webviewItem == gitlens:wip","group":"3_gitlens_explore@1"},{"command":"gitlens.graph.openCommitOnRemote","when":"!listMultiSelection && gitlens:hasRemotes && webviewItem =~ /gitlens:commit\\b/","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"listMultiSelection && gitlens:hasRemotes && webviewItems =~ /gitlens:commit\\b/","group":"3_gitlens_explore@2"},{"submenu":"gitlens/share","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_a_share@1"},{"command":"gitlens.graph.copySha","when":"!listMultiSelection && webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.graph.copyMessage","when":"!listMultiSelection && webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.graph.stash.apply","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:stash","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.stash.rename","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:stash","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.stash.delete","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:stash","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.stash.save","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:wip","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"!listMultiSelection && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:wip","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.switchToTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:tag\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.deleteTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem == gitlens:tag","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.createBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:tag\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.hideTag","when":"webviewItem =~ /gitlens:tag\\b/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.openPullRequestChanges","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.openPullRequest","when":"gitlens:action:openPullRequest > 1 && webviewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@98"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"webviewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.graph.openPullRequestComparison","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"3_gitlens_explore@11"},{"command":"gitlens.graph.compareWithUpstream","when":"!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.compareWithHead","when":"!listMultiSelection && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/","group":"4_gitlens_compare@2"},{"command":"gitlens.graph.compareWithWorking","when":"!listMultiSelection && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"4_gitlens_compare@3"},{"command":"gitlens.graph.compareWithMergeBase","when":"!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@4"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"!gitlens:hasVirtualFolders && webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@5"},{"command":"gitlens.graph.addAuthor","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.copy","when":"webviewItem =~ /gitlens:(branch|commit|contributor|pullrequest|stash|tag)\\b/","group":"7_gitlens_cutcopypaste@1"},{"submenu":"gitlens/graph/markers","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"0_markers@0"},{"command":"gitlens.graph.columnAuthorOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:hidden\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnAuthorOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:visible\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnRefOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:hidden\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnRefOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:visible\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnChangesOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:hidden\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnChangesOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:visible\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnMessageOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:hidden\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnMessageOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:visible\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnDateTimeOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:hidden\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnDateTimeOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:visible\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnGraphOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:hidden\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnGraphOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnShaOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:hidden\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnShaOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:visible\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnGraphDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible[^,]*\\+compact\\b/","group":"2_columns@1"},{"command":"gitlens.graph.columnGraphCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible(?![^,]*\\+compact\\b)/","group":"2_columns@1"},{"command":"gitlens.graph.resetColumnsDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@1"},{"command":"gitlens.graph.resetColumnsCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@2"}],"gitlens/commit/browse":[{"command":"gitlens.views.browseRepoAtRevision","group":"1_gitlens@1"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","group":"1_gitlens@3"},{"command":"gitlens.views.browseRepoBeforeRevision","group":"1_gitlens@2"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","group":"1_gitlens@4"}],"gitlens/commit/copy":[{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@2"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"1_gitlens@4"}],"gitlens/share":[{"command":"gitlens.shareAsCloudPatch","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:((commit|stash|compare:results(?!:)|)\\b|file\\b(?=.*?\\b\\+committed\\b))/","group":"1_a_gitlens@1"},{"command":"gitlens.graph.shareAsCloudPatch","when":"!listMultiSelection && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"1_a_gitlens@1"},{"command":"gitlens.copyDeepLinkToBranch","when":"!listMultiSelection && viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|status:upstream(?!:none))\\b/","group":"1_gitlens@50"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"!listMultiSelection && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/","group":"1_gitlens@50"},{"command":"gitlens.copyRemoteBranchUrl","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/","group":"2_gitlens@50"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"!listMultiSelection && gitlens:hasRemotes && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/","group":"2_gitlens@50"},{"command":"gitlens.copyDeepLinkToCommit","when":"!listMultiSelection && viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/","group":"1_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"!listMultiSelection && webviewItem =~ /gitlens:commit\\b/","group":"1_gitlens@25"},{"command":"gitlens.copyDeepLinkToComparison","when":"!listMultiSelection && viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/","group":"1_gitlens@25"},{"command":"gitlens.copyDeepLinkToFile","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:hasRemotes","group":"1_gitlens@26"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"!listMultiSelection && viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:hasRemotes","group":"1_gitlens@27"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"!listMultiSelection && viewItem =~ /gitlens:workspace\\b/","group":"1_gitlens@25"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/","group":"2_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"!listMultiSelection && gitlens:enabled && gitlens:hasRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"!listMultiSelection && gitlens:enabled && gitlens:hasRemotes && scmProvider == git && scmResourceGroup =~ /^(workingTree|index|merge)$/","group":"2_gitlens@2"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/","group":"2_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/","group":"2_gitlens@25"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"!listMultiSelection && gitlens:hasRemotes && webviewItem =~ /gitlens:commit\\b/","group":"2_gitlens@25"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"listMultiSelection && gitlens:hasRemotes && webviewItems =~ /gitlens:commit\\b/","group":"2_gitlens@25"},{"command":"gitlens.copyDeepLinkToRepo","when":"!listMultiSelection && viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|remote|repo-folder|repository|status:upstream(?!:none))\\b/","group":"1_gitlens@99"},{"command":"gitlens.copyDeepLinkToTag","when":"!listMultiSelection && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens@50"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"!listMultiSelection && webviewItem =~ /gitlens:tag\\b/","group":"1_gitlens@50"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"!listMultiSelection && webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/","group":"1_gitlens@99"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"!listMultiSelection && gitlens:hasRemotes && viewItem =~ /gitlens:(remote|repo-folder|repository)\\b/","group":"2_gitlens@99"}],"gitlens/commit/changes":[{"command":"gitlens.views.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@2"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","group":"1_gitlens@3"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@4"},{"command":"gitlens.views.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.views.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/graph/commit/changes":[{"command":"gitlens.graph.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@2"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"webviewItem != gitlens:wip","group":"1_gitlens@3"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@4"},{"command":"gitlens.graph.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.graph.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.graph.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/commit/file/commit":[{"command":"gitlens.showInDetailsView","when":"view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"navigation@1"},{"command":"gitlens.showInCommitGraph","when":"view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/","group":"navigation@2"},{"command":"gitlens.views.openCommitOnRemote","when":"view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && gitlens:hasRemotes","group":"navigation@3","alt":"gitlens.copyRemoteCommitUrl"},{"command":"gitlens.revealCommitInView","when":"view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"navigation@4"},{"command":"gitlens.views.undoCommit","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@0"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushToCommit","when":"gitlens:hasRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createPatch","when":"false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.createCloudPatch","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.createTag","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@4"}],"gitlens/commit/file/changes":[{"command":"gitlens.views.openPreviousChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|stashed|staged|unstaged)\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"},{"command":"gitlens.externalDiff","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/","group":"1_gitlens_@1"},{"command":"gitlens.views.highlightChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/","group":"2_gitlens@1"},{"command":"gitlens.views.highlightRevisionChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"2_gitlens@2"}],"gitlens/commit/file/history":[{"command":"gitlens.openFileHistory","when":"view != gitlens.views.fileHistory/","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/editor/annotations":[{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus","group":"1_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/ && !isInDiffEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"gitlens:activeFileStatus =~ /blameable/ && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"gitlens:activeFileStatus =~ /blameable/ && isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ && !isInDiffEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"gitlens:activeFileStatus =~ /blameable/ && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"gitlens:activeFileStatus =~ /blameable/ && isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileChanges","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:hasVirtualFolders","group":"2_gitlens@3"},{"command":"gitlens.showSettingsPage!file-annotations","when":"gitlens:activeFileStatus =~ /blameable/","group":"8_gitlens@1"}],"gitlens/editor/context/changes":[{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/","group":"1_gitlens@2"},{"command":"gitlens.diffWithPrevious","group":"2_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"2_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"2_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"2_gitlens@4"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@1"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@2"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor","group":"3_gitlens@2"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffEditor && !isInDiffRightEditor","group":"3_gitlens@2"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor","group":"3_gitlens@2"}],"gitlens/editor/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/changes":[{"command":"gitlens.diffWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"}],"gitlens/editor/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/editor/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/editor/lineNumber/context/changes":[{"command":"gitlens.diffLineWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","group":"1_gitlens@2"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@1"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@2"}],"gitlens/editor/lineNumber/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/lineNumber/context/share":[{"command":"gitlens.copyRemoteFileUrlToClipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteFileUrlFrom","group":"1_gitlens_remote@3"},{"command":"gitlens.copyRemoteCommitUrl","group":"1_gitlens_remote_commit@1"},{"command":"gitlens.copyDeepLinkToLines","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToFile","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"gitlens:activeFileStatus =~ /blameable/","group":"1_gitlens@3"}],"gitlens/explorer/changes":[{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsFolder","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevision","when":"!gitlens:hasVirtualFolders && explorerResourceIsFolder","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"!gitlens:hasVirtualFolders && explorerResourceIsFolder","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsFolder","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevisionFrom","when":"!explorerResourceIsFolder","group":"1_gitlens@3"}],"gitlens/explorer/history":[{"command":"gitlens.openFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens@1"},{"command":"gitlens.openFolderHistory","when":"explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens_quick@1"}],"gitlens/explorer/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/graph/configuration":[{"command":"gitlens.graph.switchToEditorLayout","group":"1_gitlens@1"},{"command":"gitlens.graph.switchToPanelLayout","group":"1_gitlens@1"},{"command":"gitlens.showSettingsPage!commit-graph","group":"9_gitlens@1"}],"gitlens/graph/markers":[{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:disabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:enabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:disabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:enabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:disabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:enabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:disabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:enabled\\b/","group":"4_settings@4"}],"gitlens/scm/resourceGroup/changes":[{"command":"gitlens.externalDiffAll","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"},{"command":"gitlens.diffDirectoryWithHead","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@2"},{"command":"gitlens.diffDirectory","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@3"}],"gitlens/scm/resourceFolder/changes":[{"command":"gitlens.diffFolderWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"}],"gitlens/scm/resourceState/changes":[{"command":"gitlens.diffWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.externalDiff","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"}],"gitlens/scm/resourceState/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/scm/resourceState/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/view/repositories/sections":[{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"!config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"!config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"!config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"!config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"!config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"!config.gitlens.views.repositories.showStashes","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"config.gitlens.views.repositories.showStashes","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"!config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"!config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"!config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"}],"gitlens/view/searchAndCompare/new":[{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view =~ /^gitlens\\.views\\.searchAndCompare\\b/","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"!gitlens:hasVirtualFolders && view =~ /^gitlens\\.views\\.searchAndCompare\\b/","group":"navigation@11"}],"gitlens/comparison/results/files/filter":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/","group":"navigation_1@2"}],"gitlens/comparison/results/files/filter/inline":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered/inline":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","when1":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/","group":"navigation_1@2"}]},"submenus":[{"id":"gitlens/commit/browse","label":"Browse"},{"id":"gitlens/commit/copy","label":"Copy As"},{"id":"gitlens/commit/changes","label":"Open Changes"},{"id":"gitlens/graph/commit/changes","label":"Open Changes"},{"id":"gitlens/commit/file/commit","label":"Commit"},{"id":"gitlens/commit/file/changes","label":"Open Changes with"},{"id":"gitlens/commit/file/history","label":"File History"},{"id":"gitlens/editor/annotations","label":"File Annotations","icon":"$(gitlens-gitlens)"},{"id":"gitlens/editor/context/changes","label":"Open Changes"},{"id":"gitlens/editor/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/changes","label":"Open Changes"},{"id":"gitlens/editor/history","label":"File History"},{"id":"gitlens/editor/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/lineNumber/context/changes","label":"Open Changes"},{"id":"gitlens/editor/lineNumber/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/lineNumber/context/share","label":"Share"},{"id":"gitlens/explorer/changes","label":"Open Changes"},{"id":"gitlens/explorer/history","label":"File History"},{"id":"gitlens/explorer/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/graph/configuration","label":"Commit Graph Settings","icon":"$(gear)"},{"id":"gitlens/graph/markers","label":"Scroll Markers"},{"id":"gitlens/scm/resourceGroup/changes","label":"Open Changes"},{"id":"gitlens/scm/resourceFolder/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceState/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceState/history","label":"File History"},{"id":"gitlens/scm/resourceState/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/share","label":"Share"},{"id":"gitlens/view/repositories/sections","label":"Sections"},{"id":"gitlens/view/searchAndCompare/new","label":"New Search or Compare","icon":"$(add)"},{"id":"gitlens/comparison/results/files/filter","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filter/inline","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filtered","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/comparison/results/files/filtered/inline","label":"Filter Files","icon":"$(filter-filled)"}],"keybindings":[{"command":"gitlens.key.left","key":"left","when":"gitlens:key:left"},{"command":"gitlens.key.alt+left","key":"alt+left","when":"gitlens:key:alt+left"},{"command":"gitlens.key.ctrl+left","key":"ctrl+left","mac":"cmd+left","when":"gitlens:key:ctrl+left"},{"command":"gitlens.key.right","key":"right","when":"gitlens:key:right"},{"command":"gitlens.key.alt+right","key":"alt+right","when":"gitlens:key:alt+right"},{"command":"gitlens.key.ctrl+right","key":"ctrl+right","mac":"cmd+right","when":"gitlens:key:ctrl+right"},{"command":"gitlens.key.alt+,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key.alt+.","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.alt+enter","key":"alt+enter","when":"gitlens:key:alt+enter"},{"command":"gitlens.key.ctrl+enter","key":"ctrl+enter","when":"gitlens:key:ctrl+enter"},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !referenceSearchVisible && !codeActionMenuVisible && !parameterHintsVisible && !isInEmbeddedEditor"},{"command":"gitlens.gitCommands","key":"alt+/","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.gitCommands","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"config.gitlens.keymap == chorded && !gitlens:disabled"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"config.gitlens.keymap == chorded && !gitlens:disabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"config.gitlens.keymap == chorded && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"config.gitlens.keymap == chorded && !gitlens:disabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"config.gitlens.keymap == chorded && !gitlens:disabled"},{"command":"gitlens.views.branches.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.branches/"},{"command":"gitlens.views.commits.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.commits/"},{"command":"gitlens.views.contributors.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.contributors/"},{"command":"gitlens.views.drafts.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.drafts/"},{"command":"gitlens.views.fileHistory.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"},{"command":"gitlens.views.lineHistory.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"},{"command":"gitlens.views.pullRequest.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.pullRequest/"},{"command":"gitlens.views.remotes.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.remotes/"},{"command":"gitlens.views.repositories.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"},{"command":"gitlens.views.stashes.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.stashes/"},{"command":"gitlens.views.searchAndCompare.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.searchAndCompare\\b/"},{"command":"gitlens.views.tags.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.tags/"},{"command":"gitlens.views.worktrees.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.worktrees/"},{"command":"gitlens.views.workspaces.copy","key":"ctrl+c","mac":"cmd+c","when":"gitlens:enabled && focusedView =~ /^gitlens\\.views\\.workspaces/"}],"customEditors":[{"viewType":"gitlens.rebase","displayName":"GitLens Interactive Rebase Editor","selector":[{"filenamePattern":"git-rebase-todo"}]}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${query.ref})","normalizeDriveLetter":true,"tildify":true,"workspaceSuffix":"GitLens"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"$(gitlens-gitlens)"},{"id":"gitlensInspect","title":"GitLens Inspect","icon":"$(gitlens-gitlens-inspect)"},{"id":"gitlensPatch","title":"GitLens Patch","icon":"$(gitlens-cloud-patch)"}],"panel":[{"id":"gitlensPanel","title":"GitLens","icon":"$(gitlens-graph)"}]},"viewsWelcome":[{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.drafts","contents":"Cloud Patches ᴘʀᴇᴠɪᴇᴡ — easily and securely share code with your teammates or other developers, accessible from anywhere, streamlining your workflow with better collaboration."},{"view":"gitlens.views.drafts","contents":"[Create Cloud Patch](command:gitlens.views.drafts.create)","when":"gitlens:plus"},{"view":"gitlens.views.drafts","contents":"[Start Pro Trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22cloud-patches%22%7D)\n\nStart your free 7-day Pro trial to try Cloud Patches and other Pro features, or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22cloud-patches%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.drafts","contents":"Preview feature ☁️ — requires an account and may require a paid plan in the future."},{"view":"gitlens.views.workspaces","contents":"Workspaces ᴘʀᴇᴠɪᴇᴡ — group and manage multiple repositories together, accessible from anywhere, streamlining your workflow.\n\nCreate workspaces just for yourself or share (coming soon in GitLens) them with your team for faster onboarding and better collaboration."},{"view":"gitlens.views.workspaces","contents":"[Create Cloud Workspace](command:gitlens.views.workspaces.create)","when":"gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"[Start Pro Trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22workspaces%22%7D)\n\nStart your free 7-day Pro trial to try GitKraken (GK) Workspaces and other Pro features, or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22workspaces%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"Preview feature ☁️ — requires an account and may require a paid plan in the future."},{"view":"gitlens.views.worktrees","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view%e2%9c%a8) ᴾᴿᴼ — minimize context switching by allowing you to work on multiple branches simultaneously."},{"view":"gitlens.views.worktrees","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"!gitlens:plus:required"},{"view":"gitlens.views.worktrees","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:state == -1"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Workrees and other local Pro features for 3 days. [Start 7-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.worktrees","contents":"[Start Pro Trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nStart your free 7-day Pro trial to try Worktrees and other Pro features, or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:required && gitlens:plus:state == 2"},{"view":"gitlens.views.worktrees","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)\n\nYour Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.\nSpecial: 50% off first seat of Pro — only $4/month!","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 7 days!","when":"gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.worktrees","contents":"Pro feature — requires a paid plan for use on privately-hosted repos."}],"views":{"gitlens":[{"type":"webview","id":"gitlens.views.home","name":"Home","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.drafts","name":"Cloud Patches","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":2,"visibility":"visible"},{"id":"gitlens.views.workspaces","name":"GK Workspaces","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-workspaces-view)","initialSize":2,"visibility":"visible"},{"type":"webview","id":"gitlens.views.account","name":"GitKraken Account","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","initialSize":1,"visibility":"collapsed"}],"gitlensInspect":[{"type":"webview","id":"gitlens.views.commitDetails","name":"Inspect","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.pullRequest","name":"Pull Request","when":"!gitlens:disabled && gitlens:views:pullRequest:visible","contextualTitle":"GitLens","icon":"$(git-pull-request)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.lineHistory","name":"Line History","when":"!gitlens:disabled && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":1,"visibility":"collapsed"},{"id":"gitlens.views.fileHistory","name":"File History","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":2,"visibility":"visible"},{"type":"webview","id":"gitlens.views.timeline","name":"Visual File History","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(graph-scatter)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.searchAndCompare","name":"Search & Compare","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-search-view)","initialSize":2,"visibility":"visible"}],"gitlensPanel":[{"type":"webview","id":"gitlens.views.graph","name":"Graph","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-graph)","initialSize":4,"visibility":"visible"},{"type":"webview","id":"gitlens.views.graphDetails","name":"Graph Details","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":1,"visibility":"visible"}],"gitlensPatch":[{"type":"webview","id":"gitlens.views.patchDetails","name":"Patch","when":"!gitlens:untrusted && config.gitlens.cloudPatches.enabled && gitlens:views:patchDetails:mode","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":24}],"scm":[{"id":"gitlens.views.repositories","name":"Repositories","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-repositories-view)","visibility":"hidden"},{"id":"gitlens.views.commits","name":"Commits","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-commits-view)","visibility":"visible"},{"id":"gitlens.views.branches","name":"Branches","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-branches-view)","visibility":"collapsed"},{"id":"gitlens.views.remotes","name":"Remotes","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-remotes-view)","visibility":"collapsed"},{"id":"gitlens.views.stashes","name":"Stashes","when":"!gitlens:disabled && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-stashes-view)","visibility":"collapsed"},{"id":"gitlens.views.tags","name":"Tags","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-tags-view)","visibility":"collapsed"},{"id":"gitlens.views.worktrees","name":"Worktrees","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-worktrees-view)","visibility":"collapsed"},{"id":"gitlens.views.contributors","name":"Contributors","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-contributors-view)","visibility":"collapsed"}]},"walkthroughs":[{"id":"welcome","title":"Get Started with GitLens","description":"Discover and personalize features that supercharge your Git experience","steps":[{"id":"get-started","title":"Welcome & Overview","description":"Quickly [get started](command:gitlens.showWelcomePage \"Opens GitLens Welcome\") and discover the many powerful GitLens features, or sit back and watch our [tutorial video](https://www.youtube.com/watch?v=UQPb73Zz9qk \"Watch the Getting Started Tutorial video\").\n\n**Side Bar & Panel Overview**\n\n$(gitlens-gitlens-inspect)  **GitLens Inspect** — an x-ray into your code's history. Offers contextual insights & details focused on what you're currently working on.\n\n[Open GitLens Inspect](command:workbench.view.extension.gitlensInspect)\n\n$(gitlens-gitlens)  **GitLens** — quick access to many GitLens features. And the home of our team and collaboration services.\n\n[Open GitLens](command:workbench.view.extension.gitlens)\n\n$(source-control) **Source Control** — packed with additional features for working with, exploring, and managing your repositories.\n\n[Open Source Control](command:workbench.view.scm)\n\n$(layout-panel)  **(Bottom) Panel** — access to the powerful Commit Graph and its dedicated details view.\n\n[Open Commit Graph](command:gitlens.showGraphView)\n💡 While our views are arranged for focus and productivity, you can easily drag them around to suit your needs. Use the [Reset Views Layout](command:workbench.action.quickOpen?%22>GitLens%3A%20Reset%20Views%20Layout%22) command to quickly get back to the default layout.\n💡 **Want more control?** Use the interactive [GitLens Settings](command:gitlens.showSettingsPage \"Opens GitLens Settings\") editor to customize GitLens to meet your needs.","media":{"markdown":"walkthroughs/welcome/get-started.md"}},{"id":"core-features","title":"Discover Core Features","description":"**Inline blame** and status bar blame provide historical context about line changes.\n💡 Hover over annotations to reveal rich details & actions.\n**Git CodeLens** adds contextual and actionable authorship information at the top of each file and at the beginning of each block of code.\n💡 Use the [Toggle Line Blame](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20Line%20Blame%22) and [Toggle Git CodeLens](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20Git%20CodeLens%22) commands.\n**File annotations**, visual indicators that augment your editor, provide insights into authorship, recent changes, or a heatmap. Annotations can be toggled on-demand for individual files or holistically.\n💡 Use the [Toggle File Blame](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20File%20Blame%22), [Toggle File Changes](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20File%20Changes%22), and [Toggle File Heatmap](command:workbench.action.quickOpen?%22>GitLens%3A%20Toggle%20File%20Heatmap%22) commands on an active file.\n\n**Navigate revision history** with just a click of a button at the top of any file and compare changes over time.","media":{"altText":"Illustrations of Inline Blame, Codelens, File Annotations and Revision Navigation","svg":"walkthroughs/welcome/core-features.svg"}},{"id":"pro-features","title":"Power-up with Pro","description":"Unlock the full power of GitLens with [Pro features](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links) and get access to the full [GitKraken DevEx platform](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links).\n\n[Start Pro Trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22walkthrough%22%7D)\n\nAlready have an account? [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22walkthrough%22%7D)\n\n**Pro Features**\n$(gitlens-graph)  [Commit Graph](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize your repository and keep track of all work in progress\n$(rocket)  [Launchpad](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — stay focused and keep your team unblocked\n$(gitlens-code-suggestion)  [Code Suggest](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — free your code reviews from unnecessary restrictions\n$(gitlens-cloud-patch)  [Cloud Patches](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — easily and securely share code with your teammates\n$(gitlens-worktrees-view)  **Worktrees** — work on multiple branches simultaneously\n$(gitlens-workspaces-view)  **Workspaces** — group and manage multiple repositories together\n$(graph-scatter)  [Visual File History](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize the evolution of a file and quickly identify when the most impactful changes were made and by whom","media":{"markdown":"walkthroughs/welcome/pro-features.md"},"when":"gitlens:plus:state >= 0 && gitlens:plus:state <= 2"},{"id":"pro-trial","title":"Get Started with Pro","description":"During your trial, you have access to all [Pro features](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links) and to the full [GitKraken DevEx platform](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links). Be sure to take full advantage of these powerful features.\n\n[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22walkthrough%22%7D)\n\n💡Special: 50% off first seat of Pro — only $4/month!\n**Pro Features**\n$(gitlens-graph)  [Commit Graph](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize your repository and keep track of all work in progress\n$(rocket)  [Launchpad](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — stay focused and keep your team unblocked\n$(gitlens-code-suggestion)  [Code Suggest](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — free your code reviews from unnecessary restrictions\n$(gitlens-cloud-patch)  [Cloud Patches](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — easily and securely share code with your teammates\n$(gitlens-worktrees-view)  **Worktrees** — work on multiple branches simultaneously\n$(gitlens-workspaces-view)  **Workspaces** — group and manage multiple repositories together\n$(graph-scatter)  [Visual File History](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize the evolution of a file and quickly identify when the most impactful changes were made and by whom","media":{"markdown":"walkthroughs/welcome/pro-trial.md"},"when":"gitlens:plus:state == 3"},{"id":"pro-upgrade","title":"Upgrade to Pro","description":"Your Pro trial has ended. Please upgrade for full access to all [Pro features](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links) and to the full [GitKraken DevEx platform](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links).\n\n[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22walkthrough%22%7D)\n\n💡Special: 50% off first seat of Pro — only $4/month!\n**Pro Features**\n$(gitlens-graph)  [Commit Graph](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize your repository and keep track of all work in progress\n$(rocket)  [Launchpad](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — stay focused and keep your team unblocked\n$(gitlens-code-suggestion)  [Code Suggest](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — free your code reviews from unnecessary restrictions\n$(gitlens-cloud-patch)  [Cloud Patches](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — easily and securely share code with your teammates\n$(gitlens-worktrees-view)  **Worktrees** — work on multiple branches simultaneously\n$(gitlens-workspaces-view)  **Workspaces** — group and manage multiple repositories together\n$(graph-scatter)  [Visual File History](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize the evolution of a file and quickly identify when the most impactful changes were made and by whom","media":{"markdown":"walkthroughs/welcome/pro-upgrade.md"},"when":"gitlens:plus:state == 4"},{"id":"pro-reactivate","title":"Reactivate Pro Power-up","description":"Reactivate your Pro trial and experience all the new [Pro features](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links) and the full [GitKraken DevEx platform](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links) — free for another 7 days!.\n\n[Reactivate Pro Trial](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22walkthrough%22%7D)\n\n**Pro Features**\n$(gitlens-graph)  [Commit Graph](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize your repository and keep track of all work in progress\n$(rocket)  [Launchpad](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — stay focused and keep your team unblocked\n$(gitlens-code-suggestion)  [Code Suggest](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — free your code reviews from unnecessary restrictions\n$(gitlens-cloud-patch)  [Cloud Patches](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — easily and securely share code with your teammates\n$(gitlens-worktrees-view)  **Worktrees** — work on multiple branches simultaneously\n$(gitlens-workspaces-view)  **Workspaces** — group and manage multiple repositories together\n$(graph-scatter)  [Visual File History](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize the evolution of a file and quickly identify when the most impactful changes were made and by whom","media":{"markdown":"walkthroughs/welcome/pro-reactivate.md"},"when":"gitlens:plus:state == 5"},{"id":"pro-paid","title":"Powered-up with Pro","description":"You have the full power of GitLens with [Pro features](https://gitkraken.com/gitlens/pro-features?utm_source=gitlens-extension&utm_medium=in-app-links) and the [GitKraken DevEx platform](https://gitkraken.com/devex?utm_source=gitlens-extension&utm_medium=in-app-links).\n\n**Pro Features**\n$(gitlens-graph)  [Commit Graph](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize your repository and keep track of all work in progress\n$(rocket)  [Launchpad](command:gitlens.openWalkthrough?%7B%22step%22%3A%22launchpad%22,%22source%22%3A%22walkthrough%22%7D) — stay focused and keep your team unblocked\n$(gitlens-code-suggestion)  [Code Suggest](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — free your code reviews from unnecessary restrictions\n$(gitlens-cloud-patch)  [Cloud Patches](command:gitlens.openWalkthrough?%7B%22step%22%3A%22code-collab%22,%22source%22%3A%22walkthrough%22%7D) — easily and securely share code with your teammates\n$(gitlens-worktrees-view)  **Worktrees** — work on multiple branches simultaneously\n$(gitlens-workspaces-view)  **Workspaces** — group and manage multiple repositories together\n$(graph-scatter)  [Visual File History](command:gitlens.openWalkthrough?%7B%22step%22%3A%22visualize%22,%22source%22%3A%22walkthrough%22%7D) — visualize the evolution of a file and quickly identify when the most impactful changes were made and by whom","media":{"markdown":"walkthroughs/welcome/pro-paid.md"},"when":"gitlens:plus:state == 6"},{"id":"visualize","title":"Visualize with Commit Graph & Visual File History","description":"**Commit Graph**\nEasily visualize your repository and keep track of all work in progress.\nUse the rich commit search to find exactly what you're looking for. Its powerful filters allow you to search by a specific commit, message, author, a changed file or files, or even a specific code change. [Learn more](https://gitkraken.com/solutions/commit-graph?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n[Open Commit Graph](command:gitlens.showGraph)\n\n💡Quickly toggle the Graph via the [Toggle Commit Graph](command:gitlens.toggleGraph) command or maximize it using the [Toggle Maximized Commit Graph](command:gitlens.toggleMaximizedGraph) command.\n**Visual File History**\nVisualize the evolution of a file and quickly identify when the most impactful changes were made and by whom\n\n[Open Visual File History](command:gitlens.showTimelineView)","media":{"altText":"Illustrations of the Commit Graph & Visual File History","svg":"walkthroughs/welcome/visualize.svg"}},{"id":"launchpad","title":"Unblock your team with Launchpad","description":"**Launchpad** ᴘʀᴇᴠɪᴇᴡ brings all of your GitHub pull requests into a unified, actionable list to better track work in progress, pending work, reviews, and more. Stay focused and take action on the most important items to keep your team unblocked. [Learn more](https://gitkraken.com/solutions/launchpad?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n[Open Launchpad](command:gitlens.showLaunchpad?%7B%22source%22%3A%22walkthrough%22%7D)","media":{"altText":"Illustrations of Launchpad","svg":"walkthroughs/welcome/launchpad-quick.svg"}},{"id":"code-collab","title":"Collaborate with Code Suggest & Cloud Patches","description":"**Code Suggest** ᴘʀᴇᴠɪᴇᴡ\n\nLiberate your code reviews from GitHub's restrictive, comment-only feedback style. Like suggesting changes on a Google-doc, suggest code changes from where you're already coding — your IDE and on anything in your project, not just on the lines of code changed in the PR. [Learn more](https://gitkraken.com/solutions/code-suggest?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n**Cloud Patches** ᴘʀᴇᴠɪᴇᴡ\n\nEasily and securely share code changes with your teammates or other developers by creating a Cloud Patch from your WIP, commit or stash and sharing the generated link. Use Cloud Patches to collaborate early for feedback on direction, approach, and more, to minimize rework and streamline your workflow. [Learn more](https://gitkraken.com/solutions/cloud-patches?utm_source=gitlens-extension&utm_medium=in-app-links)\n\n[Open Cloud Patches](command:gitlens.showDraftsView)","media":{"altText":"Illustrations of Code Suggest & Cloud Patches","image":"walkthroughs/welcome/code-collab.png"}},{"id":"integrations","title":"Integrate with Git Hosting & Issue Services","description":"GitLens automatically detects patterns in commit messages to generate autolinks to pull requests and issues for Git hosting services including GitHub, GitLab, Gitea, Gerrit, Google Source, Bitbucket, Azure DevOps, and custom servers.\n\n[Configure autolinks](command:gitlens.showSettingsPage!autolinks) for custom pattern-matching with other services.\n\n**Rich Integrations with GitHub, GitLab, and Jira**\nConnect [GitHub](command:gitlens.connectRemoteProvider), [GitLab](command:gitlens.connectRemoteProvider), and [Jira](command:gitlens.plus.cloudIntegrations.manage?%7B%22integrationId%22%3A%22jira%22%2C%22source%22%3A%22walkthrough%22%2C%22detail%22%3A%7B%22action%22%3A%22connect%22%2C%22integration%22%3A%22jira%22%7D%7D) integrations to enhance autolinks with more data available via APIs, associate branches and commits with PRs, and review pull requests within VS Code.","media":{"markdown":"walkthroughs/welcome/integrations.md"}},{"id":"more","title":"And More!","description":"**Rebase got you down?**\nEasily visualize and configure interactive rebase operations with the intuitive and user-friendly Interactive Rebase Editor\n\n**Trouble remembering Git commands?**\nNow you don't have to with the Git Command Palette — a guided, step-by-step experience to many common Git commands.\n\n[Open Git Command Palette](command:gitlens.gitCommands)\n\n**Terminal your jam?**\nQuickly jump to more details on commits, branches, tags, and more with autolinks in the Integrated Terminal.\n\n**Not sure what you are looking for?**\nOpen the Command Palette and explore the many available commands.\n\n[Open GitLens Commands](command:workbench.action.quickOpen?%22>GitLens%3A%22)","media":{"markdown":"walkthroughs/welcome/more-features.md"}}]}]},"scripts":{"analyze:bundle":"webpack --mode production --env analyzeBundle","analyze:deps":"webpack --env analyzeDeps","build":"webpack --mode development","build:quick":"webpack --mode development --env skipLint","build:extension":"webpack --mode development --config-name extension:node","build:extension:browser":"webpack --mode development --config-name extension:webworker","build:webviews":"webpack --mode development --config-name webviews","build:icons":"yarn icons:svgo && yarn fantasticon && yarn icons:apply","build:tests":"tsc -p tsconfig.test.json && tsc-alias -p tsconfig.test.json","-build:tests":"webpack -c webpack.config.test.js --mode development","bundle":"webpack --mode production","bundle:extension":"webpack --mode production --config-name extension:node","clean":"npx rimraf dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo","copy:images":"webpack --config webpack.config.images.js","graph:link":"yarn link @gitkraken/gitkraken-components","graph:link:main":"pushd \"../GitKrakenComponents\" && yarn link && popd && yarn graph:link","graph:unlink":"yarn unlink @gitkraken/gitkraken-components && yarn install --force","graph:unlink:main":"yarn graph:unlink && pushd \"../GitKrakenComponents\" && yarn unlink && popd","icons:apply":"node ./scripts/applyIconsContribution.mjs","icons:svgo":"svgo -q -f ./images/icons/ --config svgo.config.js","lint":"yarn run lint:clear-cache && eslint \"src/**/*.ts?(x)\"","lint:webviews":"yarn run lint:clear-cache && eslint \"src/webviews/apps/**/*.ts?(x)\"","lint:clear-cache":"npx rimraf .eslintcache","package":"vsce package --yarn","package-pre":"yarn run patch-pre && yarn run package --pre-release","patch-pre":"node ./scripts/applyPreReleasePatch.js","prep-release":"node ./scripts/prep-release.js","pretty":"prettier --config .prettierrc --write .","pretty:check":"prettier --config .prettierrc --check .","pub":"vsce publish --yarn","pub-pre":"vsce publish --yarn --pre-release","rebuild":"yarn run reset && yarn run build","reset":"yarn run clean && yarn --frozen-lockfile","test":"node ./out/test/runTest.js","watch":"webpack --watch --mode development","watch:extension":"webpack --watch --mode development --config-name extension","watch:webviews":"webpack --watch --mode development --config-name webviews","watch:tests":"concurrently \"tsc-alias -p tsconfig.test.json -w\" \"tsc -p tsconfig.test.json -w\"","-watch:tests":"webpack --watch -c webpack.config.test.js --mode development","web":"vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/gitkraken/vscode-gitlens","web:serve":"node -e \"const p = require('path'); const h = require('os').homedir(); require('child_process').execSync('npx serve --cors -l 5000 --ssl-cert '+p.resolve(h, 'certs/localhost.pem')+' --ssl-key '+p.resolve(h, 'certs/localhost-key.pem'), { stdio: 'inherit' })\"","update-dts":"pushd \"src/@types\" && npx @vscode/dts dev && popd","update-dts:main":"pushd \"src/@types\" && npx @vscode/dts main && popd","update-emoji":"node ./scripts/generateEmojiShortcodeMap.mjs","update-licenses":"node ./scripts/generateLicenses.mjs","-pretest":"yarn run build:tests","vscode:prepublish":"yarn run bundle"},"dependencies":{"@gitkraken/gitkraken-components":"10.3.0","@gitkraken/provider-apis":"0.22.1","@gitkraken/shared-web-components":"0.1.1-rc.15","@lit/react":"1.0.5","@microsoft/fast-element":"1.13.0","@octokit/graphql":"8.1.1","@octokit/request":"9.1.1","@octokit/types":"13.5.0","@opentelemetry/api":"1.8.0","@opentelemetry/exporter-trace-otlp-http":"0.51.1","@opentelemetry/sdk-trace-base":"1.24.1","@shoelace-style/shoelace":"2.15.1","@vscode/codicons":"0.0.36","@vscode/webview-ui-toolkit":"1.4.0","ansi-regex":"6.0.1","billboard.js":"3.11.3","fast-string-truncated-width":"1.1.0","https-proxy-agent":"5.0.1","iconv-lite":"0.6.3","lit":"3.1.3","node-fetch":"2.7.0","os-browserify":"0.3.0","path-browserify":"1.0.1","react":"16.8.4","react-dom":"16.8.4","sortablejs":"1.15.0"},"devDependencies":{"@eamodio/eslint-lite-webpack-plugin":"0.0.8","@swc/core":"1.5.7","@twbs/fantasticon":"3.0.0","@types/mocha":"10.0.6","@types/node":"18.15.0","@types/react":"17.0.80","@types/react-dom":"17.0.21","@types/sortablejs":"1.15.8","@types/vscode":"1.82.0","@typescript-eslint/eslint-plugin":"7.10.0","@typescript-eslint/parser":"7.10.0","@vscode/test-electron":"2.3.10","@vscode/test-web":"0.0.54","@vscode/vsce":"2.26.1","circular-dependency-plugin":"5.2.2","clean-webpack-plugin":"4.0.0","concurrently":"8.2.2","copy-webpack-plugin":"12.0.2","csp-html-webpack-plugin":"5.1.0","css-loader":"7.1.2","css-minimizer-webpack-plugin":"7.0.0","cssnano-preset-advanced":"7.0.1","esbuild":"0.21.4","esbuild-loader":"4.1.0","esbuild-sass-plugin":"3.3.0","eslint":"8.57.0","eslint-cli":"1.1.1","eslint-import-resolver-typescript":"3.6.1","eslint-plugin-anti-trojan-source":"1.1.1","eslint-plugin-import":"2.29.1","eslint-plugin-lit":"1.13.0","eslint-plugin-wc":"2.1.0","fork-ts-checker-webpack-plugin":"6.5.3","glob":"10.4.1","html-loader":"5.0.0","html-webpack-plugin":"5.6.0","image-minimizer-webpack-plugin":"4.0.0","license-checker-rseidelsohn":"4.3.0","lz-string":"1.5.0","mini-css-extract-plugin":"2.9.0","mocha":"10.4.0","prettier":"3.1.0","sass":"1.77.2","sass-loader":"14.2.1","schema-utils":"4.2.0","sharp":"0.32.6","svgo":"3.3.2","terser-webpack-plugin":"5.3.10","ts-loader":"9.5.1","tsc-alias":"1.8.10","typescript":"5.4.5","webpack":"5.91.0","webpack-bundle-analyzer":"4.10.2","webpack-cli":"5.1.4","webpack-node-externals":"3.0.0","webpack-require-from":"1.8.6"},"resolutions":{"esbuild":"0.21.4","iconv-lite":"0.6.3","node-fetch":"2.7.0","semver-regex":"4.0.5"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/eamodio.gitlens-15.1.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitKraken","metadata":{"installedTimestamp":1719062038500,"pinned":false,"source":"gallery","id":"4de763bd-505d-4978-9575-2b7696ecf94e","publisherId":"678d198b-9b2e-49d3-96ff-6d801c9575df","publisherDisplayName":"GitKraken","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.jupyter-keymap","uuid":"9f6dc8db-620c-4844-b8c5-e74914f1be27"},"manifest":{"name":"jupyter-keymap","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"displayName":"Jupyter Keymap","description":"Jupyter keymaps for notebooks","version":"1.1.2","engines":{"vscode":"^1.79.0-insider"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-keymap"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter-keymap/issues"},"categories":["Notebooks"],"keywords":["notebook-keymap"],"contributes":{"keybindings":[{"key":"F","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.find"},{"key":"K","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"list.focusUp"},{"key":"J","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"list.focusDown"},{"key":"A","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.insertCodeCellAboveAndFocusContainer"},{"key":"B","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.insertCodeCellBelowAndFocusContainer"},{"key":"D D","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.delete"},{"key":"Z","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"undo"},{"key":"S","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"workbench.action.files.save"},{"key":"C","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.copy"},{"key":"X","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.cut"},{"key":"V","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.paste"},{"key":"shift+L","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.toggleLineNumbers"},{"key":"O","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.toggleOutputs"},{"key":"L","when":"notebookEditorFocused && !inputFocus && !notebookOutputInputFocused","command":"notebook.cell.toggleLineNumbers"},{"key":"ctrl+shift+-","when":"editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused","command":"notebook.cell.split"},{"key":"ctrl+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused || notebookCellListFocused","command":"notebook.cell.executeAndFocusContainer"},{"key":"shift+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused && !interactiveEditorFocused || notebookCellListFocused && notebookCellType == 'code' && !interactiveEditorFocused","command":"notebook.cell.executeAndSelectBelow"},{"win":"ctrl+alt+enter","linux":"ctrl+alt+enter","when":"interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorDocumentChanged || interactiveEditorHasProvider && interactiveEditorVisible && config.interactiveEditor.editMode != 'preview'","command":"interactive.acceptChanges"}]}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-toolsai.jupyter-keymap-1.1.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148230,"pinned":false,"source":"gallery","id":"9f6dc8db-620c-4844-b8c5-e74914f1be27","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.vscode-jupyter-slideshow","uuid":"e153ca70-b543-4865-b4c5-b31d34185948"},"manifest":{"name":"vscode-jupyter-slideshow","displayName":"Jupyter Slide Show","description":"Jupyter Slide Show support for VS Code","version":"0.1.6","publisher":"ms-toolsai","preview":true,"icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"author":{"name":"Microsoft Corporation"},"engines":{"vscode":"^1.88.0"},"categories":["Notebooks"],"activationEvents":["onNotebook:jupyter-notebook","onCommand:jupyter-slideshow.switchSlideType","onCommand:jupyter-slideshow.editSlideShowInJSON"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-slideshow"},"main":"./out/extension-node.js","browser":"./out/extension-web.js","contributes":{"commands":[{"command":"jupyter-slideshow.switchSlideType","title":"Switch Slide Type"},{"command":"jupyter-slideshow.editSlideShowInJSON","title":"Edit Slide Type (JSON)","icon":"$(go-to-file)"}],"menus":{"notebook/cell/title":[{"command":"jupyter-slideshow.switchSlideType","group":"jupyter-slideshow@1"},{"command":"jupyter-slideshow.editSlideShowInJSON","group":"jupyter-slideshow@2"}]}},"scripts":{"vscode:prepublish":"npm run compile","compile":"webpack --mode none","watch":"webpack --mode none --watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.71.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","eslint":"^7.27.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","glob":"^7.1.7","mocha":"^10.0.0","typescript":"^4.3.2","vscode-test":"^1.5.2","ts-loader":"^9.1.1","webpack":"^5.36.2","webpack-cli":"^4.6.0"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-toolsai.vscode-jupyter-slideshow-0.1.6","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148327,"pinned":false,"source":"gallery","id":"e153ca70-b543-4865-b4c5-b31d34185948","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.vscode-jupyter-cell-tags","uuid":"ab4fb32a-befb-4102-adf9-1652d0cd6a5e"},"manifest":{"name":"vscode-jupyter-cell-tags","displayName":"Jupyter Cell Tags","description":"Jupyter Cell Tags support for VS Code","version":"0.1.9","publisher":"ms-toolsai","preview":true,"icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"author":{"name":"Microsoft Corporation"},"engines":{"vscode":"^1.88.0"},"categories":["Notebooks"],"activationEvents":["onNotebook:jupyter-notebook","onCommand:jupyter-cell-tags.removeTag","onCommand:jupyter-cell-tags.addTag","onCommand:jupyter-cell-tags.editTagsInJSON","onCommand:jupyter-cell-tags.paramaterize"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-cell-tags"},"main":"./out/extension-node.js","browser":"./out/extension-web.js","contributes":{"commands":[{"command":"jupyter-cell-tags.removeTag","title":"Remove Cell Tag","icon":"$(close)"},{"command":"jupyter-cell-tags.addTag","title":"Add Cell Tag","icon":"$(add)"},{"command":"jupyter-cell-tags.editTagsInJSON","title":"Edit Cell Tags (JSON)","icon":"$(go-to-file)"},{"command":"jupyter-cell-tags.paramaterize","title":"Mark Cell as Parameters"}],"menus":{"notebook/cell/title":[{"command":"jupyter-cell-tags.addTag","group":"jupytercelltags@1"},{"command":"jupyter-cell-tags.editTagsInJSON","group":"jupytercelltags@2"},{"command":"jupyter-cell-tags.paramaterize","group":"jupytercelltags@2"}],"view/title":[{"command":"jupyter-cell-tags.addTag","when":"view == cell-tag","group":"navigation"},{"command":"jupyter-cell-tags.editTagsInJSON","when":"view == cell-tag","group":"navigation"}],"view/item/context":[{"command":"jupyter-cell-tags.removeTag","when":"view == cell-tag","group":"inline"}]},"views":{"jupyter-variables":[{"id":"cell-tag","name":"Cell Tags","type":"tree","icon":"$(tag)","when":"jupyter:showTagsExplorer && jupyter.hasNativeNotebookOrInteractiveWindowOpen","visibility":"collapsed"}]},"viewsWelcome":[{"view":"cell-tag","contents":"No tags found for the selected cell. Use the [Add Cell Tag](command:jupyter-cell-tags.addTag) command to add tags."}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"webpack --mode none","watch":"webpack --mode none --watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.72.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","eslint":"^7.27.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","glob":"^7.1.7","mocha":"^10.0.0","typescript":"^4.3.2","vscode-test":"^1.5.2","ts-loader":"^9.1.1","webpack":"^5.36.2","webpack-cli":"^4.6.0"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-toolsai.vscode-jupyter-cell-tags-0.1.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148296,"pinned":false,"source":"gallery","id":"ab4fb32a-befb-4102-adf9-1652d0cd6a5e","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.jupyter-renderers","uuid":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf"},"manifest":{"name":"jupyter-renderers","displayName":"Jupyter Notebook Renderers","description":"Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)","version":"1.0.18","engines":{"vscode":"^1.80.0"},"publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-notebook-renderers","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-notebook-renderers"},"bugs":{"url":"https://github.com/Microsoft/vscode-notebook-renderers/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+jupyter","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"keywords":["jupyter","notebook","notebookRenderer","multi-root ready"],"categories":["Other","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":[],"enabledApiProposals":["contribNotebookStaticPreloads"],"main":"./out/extension_renderer/index.js","browser":"./out/extension_renderer/index.js","contributes":{"notebookPreload":[{"type":"jupyter-notebook","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets7/dist/ipywidgets.js"},{"type":"interactive","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets7/dist/ipywidgets.js"},{"type":"jupyter-notebook","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets8/dist/ipywidgets.js"},{"type":"interactive","entrypoint":"./out/node_modules/@vscode/jupyter-ipywidgets8/dist/ipywidgets.js"},{"type":"jupyter-notebook","entrypoint":"./out/client_renderer/preload.js"},{"type":"interactive","entrypoint":"./out/client_renderer/preload.js"}],"notebookRenderer":[{"id":"jupyter-notebook-renderer","entrypoint":"./out/client_renderer/renderers.js","displayName":"Jupyter Notebook Renderer","requiresMessaging":"optional","mimeTypes":["image/gif","image/png","image/jpeg","image/webp","image/svg+xml","application/geo+json","application/vdom.v1+json","application/vnd.dataresource+json","application/vnd.plotly.v1+json","application/vnd.vega.v2+json","application/vnd.vega.v3+json","application/vnd.vega.v4+json","application/vnd.vegalite.v1+json","application/vnd.vegalite.v2+json","application/x-nteract-model-debug+json","text/vnd.plotly.v1+html"]},{"id":"jupyter-notebook-built-in-renderer-hooks","displayName":"Jupyter Notebook Html/JavaScript Renderer","requiresMessaging":"optional","entrypoint":{"extends":"vscode.builtin-renderer","path":"./out/client_renderer/builtinRendererHooks.js"}},{"id":"jupyter-vega-renderer","displayName":"Jupyter Vega Renderer","requiresMessaging":"optional","entrypoint":"./out/client_renderer/vegaRenderer.js","mimeTypes":["application/vnd.vega.v5+json","application/vnd.vegalite.v3+json","application/vnd.vegalite.v4+json","application/vnd.vegalite.v5+json"]},{"id":"jupyter-markdown","displayName":"Jupyter Markdown styles","entrypoint":{"extends":"vscode.markdown-it-renderer","path":"./out/client_renderer/markdown.js"}}]},"scripts":{"vscode:prepublish":"npm run compile:webpack","dev":"concurrently -r npm:compile:extension:watch npm:compile:client:watch npm:compile:test:watch","compile":"npm run compile:extension && npm run compile:test && npm run compile:client","compile:extension":"tsc -p src/extension","compile:extension:watch":"tsc -p src/extension --watch","compile:test":"tsc -p src/test","compile:test:watch":"tsc -p src/test --watch","compile:webpack":"npm run build:client && npm run build:extension","compile:client":"webpack --config=build/webpack/webpack.client.config.js","build:client":"webpack --config=build/webpack/webpack.client.config.js --mode=production","build:extension":"webpack --config=build/webpack/webpack.extension.config.js --mode=production","compile:client:watch":"webpack --config=build/webpack/webpack.client.config.js --watch","lint":"eslint src --ext ts && eslint src --ext tsx && eslint build --ext js","lint-format":"npx prettier 'src/**/*.ts*' --check && npx prettier 'build/**/*.js' --check","watch":"tsc -watch -p ./","package":"vsce package -o ms-notebook-renderers.vsix","test":"node ./out/test/runTest.js","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","postinstall":"node ./build/postInstall.js"},"dependencies":{"@babel/helper-validator-identifier":"^7.22.20","@blueprintjs/core":"^3.7.0","@blueprintjs/select":"^3.2.0","@jupyter-widgets/base":"^4.1.0","@jupyter-widgets/controls":"^3.1.0","@jupyter-widgets/jupyterlab-manager":"^3.1.0","@jupyter-widgets/output":"^4.1.0","@jupyterlab/coreutils":"^5.4.2","@jupyterlab/nbformat":"^3.4.2","@loadable/component":"^5.12.0","@nteract/transform-dataresource":"^3.0.2","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^7.0.0","@nteract/transform-vega":"7.0.10","@nteract/transforms":"^3.2.0","@phosphor/widgets":"^1.9.3","@vscode/jupyter-ipywidgets7":"^2.0.1","@vscode/jupyter-ipywidgets8":"^1.0.2","canvas":"^2.11.2","chownr":"^2.0.0","fs-minipass":"^2.1.0","jquery":"^3.6.1","lodash":"^4.17.21","minipass":"^3.1.6","minizlib":"^2.1.2","path-browserify":"^0.0.1","plotly.js-dist":"^2.29.1","re-resizable":"~6.5.5","react":"^16.8.4","react-dom":"^16.8.4","react-toggle":"^4.1.2","requirejs":"^2.3.6","styled-components":"5.2.1","tslib":"^1.14.1","underscore":"^1.13.1","util":"^0.12.3","uuid":"^3.3.2","vega":"^5.24.0","vega-embed":"^6.21.3","vega-lite":"^5.6.1","yallist":"^4.0.0"},"devDependencies":{"@types/copy-webpack-plugin":"^10.1.0","@types/glob":"^7.1.1","@types/loadable__component":"^5.10.0","@types/lodash":"^4.14.158","@types/markdown-it":"^12.2.3","@types/mocha":"^7.0.2","@types/node":"^12.11.7","@types/react":"^16.9.35","@types/react-dom":"^16.9.8","@types/uuid":"^8.0.0","@types/vscode":"^1.60.0","@types/vscode-notebook-renderer":"^1.60.0","@typescript-eslint/eslint-plugin":"^3.1.0","@typescript-eslint/parser":"^3.1.0","concurrently":"^5.2.0","copy-webpack-plugin":"^6.4.1","css-loader":"^3.5.3","eslint":"^7.1.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","fork-ts-checker-webpack-plugin":"^4.1.6","glob":"^7.1.6","install":"^0.13.0","less":"^3.11.3","mocha":"^10.1.0","node-loader":"^2.0.0","prettier":"^2.0.5","style-loader":"^1.2.1","svg-inline-loader":"^0.8.2","thread-loader":"^3.0.4","ts-loader":"^9.3.1","typescript":"^4.7.4","url-loader":"^4.1.0","vscode-test":"^1.4.0","webpack":"^5.76.3","webpack-bundle-analyzer":"^4.8.0","webpack-cli":"^5.0.1","webpack-fix-default-import-plugin":"^1.0.3"},"overrides":{"ini":"1.3.6","simple-get":"3.1.1","node-fetch":"2.6.7","prismjs":"1.27.0","jquery-ui@<1.13.2":"1.13.2","url-parse@<1.5.9":"1.5.9","terser@<5.14.2":"5.14.2","ua-parser-js":"0.7.24","moment@<2.29.4":"2.29.4","sanitize-html":"2.7.3"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-toolsai.jupyter-renderers-1.0.18","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148275,"pinned":false,"source":"gallery","id":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.jupyter","uuid":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8"},"manifest":{"name":"jupyter","displayName":"Jupyter","version":"2024.5.0","description":"Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"extensionPack":["ms-toolsai.jupyter-keymap","ms-toolsai.jupyter-renderers","ms-toolsai.vscode-jupyter-slideshow","ms-toolsai.vscode-jupyter-cell-tags"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-jupyter","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter/issues"},"qna":"https://github.com/microsoft/vscode-jupyter/discussions","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"engines":{"vscode":"^1.90.0"},"l10n":"./l10n","extensionKind":["workspace"],"keywords":["jupyter","notebook","notebookKernelJupyterNotebook","multi-root ready","python","interactive"],"categories":["Extension Packs","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onNotebook:jupyter-notebook","onNotebook:interactive","onWebviewPanel:jupyter-variables","onWebviewPanel:jupyter"],"main":"./dist/extension.node.proxy.js","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Execution of cells in Interactive Window and Notebooks is not supported in untrusted workspaces."}},"contributes":{"walkthroughs":[{"id":"jupyterWelcome","title":"Get Started with Jupyter Notebooks","description":"Your first steps to set up a Jupyter project with all the powerful tools and features that the Jupyter Extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"ipynb.newUntitledIpynb","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Create: New Jupyter Notebook``.\n[Create New Jupyter Notebook](command:toSide:ipynb.newUntitledIpynb)\n If you have an existing project, you can also [open a folder](command:toSide:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:toSide:git.clone).","media":{"svg":"resources/walkthroughs/opennotebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:ipynb.newUntitledIpynb","onCommand:jupyter.createnewinteractive","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"jupyter.selectKernel","title":"Select a Jupyter kernel","description":"Click Select Kernel at the top right of the notebook and choose the environment in which to run your kernel. Or, with a notebook opened and in focus, open the [Command Palette](command:workbench.action.showCommands) and run the command: \n``Notebook: Select Notebook Kernel``. \n[Open Command Palette to Select a Jupyter Kernel](command:workbench.action.showCommands)","media":{"svg":"resources/walkthroughs/kernel.svg","altText":"Selecting or changing a notebook kernel"},"completionEvents":["onCommand:notebook.selectKernel"]},{"id":"jupyter.exploreAndDebug","title":"Explore data and debug","description":"📅 You can use the [Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data) to view, sort, and filter the rows of data. After loading your data, click \"Variables\" at the top right of notebook and click the Data Viewer icon to the left of the data table. \n \n[Learn about Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data)\n \n📒 Debug your notebook using the [Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line) mode to execute a cell one line at a time. Click the Run by Line icon from your cell (play button with lines) or hit F10. \n \n[Learn about Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line)","media":{"svg":"resources/walkthroughs/data.svg","altText":"Opening data viewer"}},{"id":"jupyter.dataScienceLearnMore","title":"Find out more!","description":"🎨 Explore all the features the Jupyter Extension has to offer by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with data science in [Python](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) by installing the Python Extension ([search Python extension](command:workbench.extensions.search?\"ms-python.python\")). \n 📃 Find out more features in our [Tutorials](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthroughs/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"keybindings":[{"command":"jupyter.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && jupyter.ownsSelection && !notebookEditorFocused && activeEditor != 'workbench.editor.interactive'"},{"command":"jupyter.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused && !jupyter.havenativecells"},{"command":"jupyter.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"key":"escape","when":"activeEditor == 'workbench.editor.interactive' && !editorHoverVisible && !suggestWidgetVisible && !isComposing && !inSnippetMode && !exceptionWidgetVisible && !selectionAnchorSet && !LinkedEditingInputVisible && !renameInputVisible && !editorHasSelection && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !findWidgetVisible && !markersNavigationVisible && !parameterHintsVisible && !editorHasMultipleSelections && !notificationToastsVisible","command":"interactive.input.clear"},{"command":"jupyter.insertCellBelowPosition","key":"ctrl+; s","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","key":"ctrl+; b","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","key":"ctrl+; a","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","key":"ctrl+; x","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","key":"ctrl+alt+shift+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","key":"ctrl+alt+shift+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","key":"ctrl+; u","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","key":"ctrl+; d","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","key":"ctrl+; m","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","key":"ctrl+; c","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","key":"ctrl+alt+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","key":"ctrl+alt+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","key":"ctrl+alt+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","key":"ctrl+alt+shift+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.refreshDataViewer","key":"ctrl+r","mac":"cmd+r","when":"jupyter.dataViewerActive"},{"command":"jupyter.runAndDebugCell","key":"ctrl+alt+shift+enter","mac":"ctrl+shift+enter"},{"command":"jupyter.runByLine","key":"f10"},{"command":"jupyter.runByLineNext","key":"f10"},{"command":"jupyter.runByLineStop","key":"ctrl+enter"}],"commands":[{"command":"dataScience.ClearCache","title":"Clear Cache","category":"Jupyter (Dev)","enablement":"jupyter.development"},{"command":"jupyter.manageAccessToKernels","title":"Manage Access To Jupyter Kernels","category":"Jupyter"},{"command":"dataScience.ClearUserProviderJupyterServerCache","title":"Clear User Jupyter Server Cache","category":"Jupyter (Dev)","enablement":"jupyter.development"},{"command":"jupyter.replayPylanceLog","title":"Replay Pylance Log","category":"Jupyter (Dev)","enablement":"jupyter.development && notebookType == jupyter-notebook && isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.replayPylanceLogStep","title":"Step Pylance Log","category":"Jupyter (Dev)","icon":"$(debug-start)","enablement":"jupyter.development && notebookType == jupyter-notebook && isWorkspaceTrusted && jupyter.replayLogLoaded && !jupyter.webExtension"},{"command":"jupyter.filterKernels","title":"Filter Kernels","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.runByLine","title":"Run by Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"},{"command":"jupyter.runAndDebugCell","title":"Debug Cell","icon":"$(debug-alt-small)","category":"Jupyter","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"},{"command":"jupyter.runByLineNext","title":"Run Next Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookCellResource in jupyter.notebookeditor.runByLineCells"},{"command":"jupyter.runByLineStop","title":"Continue Execution","icon":"$(debug-continue-small)","category":"Jupyter","enablement":"notebookCellResource in jupyter.notebookeditor.runByLineCells"},{"command":"jupyter.viewOutput","title":"Show Output","category":"Jupyter"},{"command":"jupyter.notebookeditor.export","title":"Export As","shortTitle":"Export","category":"Notebook","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted && !jupyter.webExtension || notebookType == jupyter-notebook && isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.selectJupyterInterpreter","title":"Select Interpreter to Start Jupyter Server","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstepover","title":"Step Over","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstop","title":"Stop","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcontinue","title":"Continue","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.execSelectionInteractive","title":"Run Selection/Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","icon":"$(play)","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove","title":"Run Above","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcellandallbelow","title":"Run Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runtoline","title":"Run To Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runfromline","title":"Run From Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.importnotebookfile","title":"Import Notebook to Script","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.interruptkernel","title":"Interrupt Kernel","shortTitle":"Interrupt","category":"Jupyter","icon":{"light":"resources/light/interrupt.svg","dark":"resources/dark/interrupt.svg"},"enablement":"isWorkspaceTrusted && jupyter.interactive.canInterruptNotebookKernel"},{"command":"jupyter.restartkernel","title":"Restart Kernel","shortTitle":"Restart","category":"Jupyter","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"isWorkspaceTrusted && (jupyter.interactive.canRestartNotebookKernel || (notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel))"},{"command":"jupyter.restartkernelandrunallcells","title":"Restart Kernel and Run All Cells","shortTitle":"Restart and Run All","category":"Jupyter","enablement":"isWorkspaceTrusted && (jupyter.interactive.canRestartNotebookKernel || (notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel))"},{"command":"jupyter.restartkernelandrunuptoselectedcell","title":"Restart Kernel and Run Up To Selected Cell","shortTitle":"Restart Kernel and Run Up To Selected Cell","category":"Jupyter","enablement":"isWorkspaceTrusted && (notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel)"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.expandallcells","title":"Expand All Cell Inputs","shortTitle":"Expand","category":"Jupyter","icon":"$(expand-all)"},{"command":"jupyter.collapseallcells","title":"Collapse All Cell Inputs","shortTitle":"Collapse","category":"Jupyter","icon":"$(collapse-all)"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.createnewnotebook","title":"Create New Jupyter Notebook","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.latestExtension","title":"DataScience.latestExtension","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.showDataViewer","title":"View Value in Data Viewer","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.clearSavedJupyterUris","title":"Clear Jupyter Remote Server List","category":"Jupyter"},{"command":"jupyter.openVariableView","title":"Open Variables View","shortTitle":"Variables","icon":"$(variable-group)","category":"Jupyter","enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted || notebookType == interactive && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","shortTitle":"Outline","icon":"$(list-unordered)","category":"Jupyter","enablement":"notebookType == jupyter-notebook"},{"command":"jupyter.refreshDataViewer","title":"Refresh Data Viewer","category":"Jupyter","enablement":"jupyter.dataViewerActive && isWorkspaceTrusted"},{"command":"jupyter.interactive.clearAllCells","title":"Clear All","icon":"$(close)","category":"Jupyter"},{"command":"jupyter.interactive.goToCode","title":"Go to code","icon":"$(go-to-file)","category":"Jupyter"},{"command":"jupyter.interactive.exportasnotebook","title":"Export to Jupyter Notebook","shortTitle":"Save","icon":"$(save-as)","enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.exportas","title":"Export","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.copyCell","title":"Copy Cell","icon":"$(copy)","category":"Jupyter"},{"command":"jupyter.runInDedicatedExtensionHost","title":"Run in Dedicated Extension Host","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.continueEditSessionInCodespace","title":"Continue On Codespace","shortTitle":"Continue On","icon":"$(vm)","enablement":"true","category":"Jupyter"},{"command":"jupyter.selectPrecedentCells","title":"Select Precedent Cells","icon":"$(gather)","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.selectDependentCells","title":"Select Dependent Cells","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.runPrecedentCells","title":"Execute with Precedent Cells","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.runDependentCells","title":"Execute with Dependent Cells","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.debugCellSymbols","title":"Debug Cell Symbols","icon":"$(debug-alt-small)","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.listPipPackages","title":"List Pip Packages","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.listVariables","title":"List Variables","enablement":"isWorkspaceTrusted && !jupyter.webExtension","category":"Jupyter"}],"submenus":[{"id":"editor.interactiveWindow.context","label":"Run in Interactive Window"}],"menus":{"editor/context":[{"submenu":"editor.interactiveWindow.context","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && resourceExtname == .ipynb && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.importnotebook","group":"Jupyter3@1"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileasnotebook","group":"Jupyter3@2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileandoutputasnotebook","group":"Jupyter3@3"}],"editor.interactiveWindow.context":[{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runallcells","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcell","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcelladvance","group":"Jupyter2"},{"command":"jupyter.runFileInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runfromline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runtoline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.execSelectionInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"}],"editor/title":[{"command":"jupyter.restartkernel","title":"Restart Kernel","group":"navigation@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.notebookeditor.canrestartNotebookkernel && config.notebook.globalToolbar != true"},{"command":"jupyter.openVariableView","title":"Open Variables View","group":"navigation@2","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true && jupyter.ispythonnotebook"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","group":"navigation@3","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar && config.notebook.globalToolbar != true"},{"command":"jupyter.notebookeditor.export","title":"Export As","group":"navigation@4","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true"},{"command":"jupyter.continueEditSessionInCodespace","group":"navigation@5","when":"notebookType == 'jupyter-notebook' && jupyter.kernelSource == 'github-codespaces' && config.notebook.globalToolbar != true"}],"notebook/toolbar":[{"command":"jupyter.restartkernel","group":"navigation/execute@5","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.kernel.isjupyter"},{"command":"jupyter.openVariableView","group":"navigation@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.ispythonnotebook && jupyter.kernel.isjupyter"},{"command":"jupyter.openOutlineView","group":"navigation@2","when":"notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar"},{"command":"jupyter.continueEditSessionInCodespace","group":"navigation@3","when":"notebookType == 'jupyter-notebook' && jupyter.kernelSource == 'github-codespaces'"},{"command":"jupyter.notebookeditor.export","group":"Jupyter","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted"},{"command":"jupyter.replayPylanceLogStep","group":"navigation@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.replayLogLoaded"}],"notebook/cell/title":[{"command":"jupyter.runByLine","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.runByLineDocuments || !notebookKernel && notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted","group":"inline/cell@0"},{"command":"jupyter.runByLineNext","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells","group":"inline/cell@0"},{"command":"jupyter.runByLineStop","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells && notebookCellToolbarLocation == left","group":"inline/cell@1"},{"command":"jupyter.runByLineStop","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells && notebookCellToolbarLocation == right","group":"inline/cell@0"},{"command":"jupyter.selectPrecedentCells","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"executionAnalysis@0"},{"command":"jupyter.selectDependentCells","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"executionAnalysis@1"}],"notebook/cell/execute":[{"command":"jupyter.runAndDebugCell","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted","group":"jupyterCellExecute@0"},{"command":"jupyter.runPrecedentCells","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"jupyterCellExecute@1"},{"command":"jupyter.runDependentCells","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && config.jupyter.executionAnalysis.enabled","group":"jupyterCellExecute@2"}],"interactive/toolbar":[{"command":"jupyter.interactive.clearAllCells","group":"navigation@0","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.restartkernel","group":"navigation@1","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.openVariableView","group":"navigation@3","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.exportasnotebook","group":"navigation@4","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.exportas","group":"navigation@5","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.expandallcells","group":"navigation@6","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.collapseallcells","group":"navigation@7","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"}],"interactive/cell/title":[{"command":"jupyter.interactive.copyCell","group":"inline@0","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.goToCode","group":"inline@1","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"}],"explorer/context":[{"when":"resourceLangId == python && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runFileInteractive","group":"Jupyter2"},{"when":"resourceExtname == .ipynb && isWorkspaceTrusted","command":"jupyter.importnotebookfile","group":"Jupyter"}],"commandPalette":[{"command":"jupyter.replayPylanceLog","title":"Replay Pylance Log","when":"jupyter.development && isWorkspaceTrusted"},{"command":"jupyter.manageAccessToKernels","title":"Manage Access To Jupyter Kernels"},{"command":"jupyter.interactive.copyCell","when":"false"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted && jupyter.ispythonnotebook && isWorkspaceTrusted"},{"command":"jupyter.refreshDataViewer","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","when":"editorLangId == python && jupyter.hascodecells && isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && isWorkspaceTrusted"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","when":"false"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.restartkernel","title":"Restart Kernel","category":"Jupyter","when":"(jupyter.ispythonorinteractiveeactive || jupyter.isnativeactive) && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","when":"jupyter.havenativecells && jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.expandallcells","title":"Expand All Cell Inputs","shortTitle":"Expand","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.collapseallcells","title":"Collapse All Cell Inputs","shortTitle":"Collapse","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.runcellandallbelow","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runallcellsabove","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcontinue","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstop","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstepover","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive"},{"command":"jupyter.createnewnotebook","category":"Jupyter","when":"false"},{"command":"jupyter.runtoline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runfromline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.execSelectionInteractive","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.latestExtension","title":"Download the latest version of the Jupyter Extension","category":"Jupyter","when":"false"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","when":"false"},{"command":"jupyter.notebookeditor.export","title":"Export As","category":"Notebook","when":"false"},{"command":"jupyter.showDataViewer","category":"Jupyter","when":"false"},{"command":"jupyter.openVariableView","title":"Open Variables View","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.interactive.goToCode","when":"false"},{"command":"jupyter.interactive.clearAllCells","when":"editorFocus && editorLangId == python || activeEditor == 'workbench.editor.interactive'"},{"command":"jupyter.clearSavedJupyterUris","title":"Clear Jupyter Remote Server List"},{"command":"jupyter.selectPrecedentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.selectDependentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.runPrecedentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.runDependentCells","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.debugCellSymbols","when":"config.jupyter.executionAnalysis.enabled"},{"command":"jupyter.listPipPackages","when":"false"},{"command":"jupyter.listVariables","when":"false"}],"debug/variables/context":[{"command":"jupyter.showDataViewer","group":"1_view","when":"debugProtocolVariableMenuContext == 'viewableInDataViewer'"}],"editor/title/run":[{"command":"jupyter.runFileInteractive","group":"jupyter","title":"Run Current File in Interactive Window","when":"resourceLangId == python && !isInDiffEditor && isWorkspaceTrusted"}]},"configuration":{"type":"object","title":"Jupyter","properties":{"jupyter.experiments.enabled":{"type":"boolean","default":true,"description":"Enables/disables A/B tests.","scope":"machine"},"jupyter.showVariableViewWhenDebugging":{"type":"boolean","default":false,"description":"Bring up the Variable View when starting a Run by Line session.","scope":"resource"},"jupyter.logging.level":{"type":"string","default":"info","enum":["off","error","warn","info","debug","trace"],"enumDescriptions":["No messages are logged with this level.","Only error messages are logged with this level.","Warning and error messages are logged with this level.","Information, warning and error messages are logged with this level.","Debug and higher severity messages are logged with this level.","All messages are logged with this level."],"description":"The logging level the extension logs at."},"jupyter.experiments.optInto":{"type":"array","default":[],"items":{"enum":["DoNotWaitForZmqPortsToBeUsed"]},"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.experiments.optOutFrom":{"type":"array","default":[],"items":{"enum":["DoNotWaitForZmqPortsToBeUsed"]},"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.widgetScriptSources":{"type":"array","default":[],"items":{"type":"string","enum":["jsdelivr.com","unpkg.com"],"enumDescriptions":["Loads widget (javascript) scripts from https://www.jsdelivr.com/","Loads widget (javascript) scripts from https://unpkg.com/"]},"uniqueItems":true,"markdownDescription":"Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.","scope":"resource"},"jupyter.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"jupyter.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel."},"jupyter.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"jupyter.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start."},"jupyter.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook"},"jupyter.jupyterCommandLineArguments":{"type":"array","default":[],"description":"If and when a Jupyter server is started, these arguments will be passed to into the Jupyter Notebook CLI. By default this list is generated by the Jupyter Extension.","scope":"resource"},"jupyter.notebookFileRoot":{"type":"string","default":"${fileDirname}","markdownDescription":"Set the root directory for Jupyter Notebooks and the Interactive Window running locally.  \n\n**Note:** This does not apply to Remote Jupyter Kernels.","scope":"resource"},"jupyter.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config"},"jupyter.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel."},"jupyter.interactiveWindow.textEditor.executeSelection":{"type":"boolean","default":false,"description":"When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.","scope":"resource"},"jupyter.interactiveWindow.textEditor.normalizeSelection":{"type":"boolean","default":false,"description":"Selected text will be normalized before it is executed in the Interactive Window.","scope":"resource"},"jupyter.interactiveWindow.splitRunFileIntoCells":{"type":"boolean","default":true,"description":"A file run in the Interactive Window will be run in individual cells if it has them.","scope":"resource"},"jupyter.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method;ABCMeta;type;ModelMetaclass","description":"Types to exclude from showing in the Interactive variable explorer","scope":"resource"},"jupyter.interactiveWindow.cellMarker.codeRegex":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell.","scope":"resource"},"jupyter.interactiveWindow.cellMarker.default":{"type":"string","default":"# %%","description":"Cell marker used for delineating a cell in a python file.","scope":"resource"},"jupyter.interactiveWindow.cellMarker.markdownRegex":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.","scope":"resource"},"jupyter.themeMatplotlibPlots":{"type":"boolean","default":false,"description":"In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme."},"jupyter.interactiveWindow.cellMarker.decorateCells":{"type":"string","enum":["currentCell","allCells","None"],"default":"currentCell","description":"Draw a highlight behind the currently active cell, or all cells, in a python file.","scope":"resource"},"jupyter.interactiveWindow.codeLens.enable":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"jupyter.interactiveWindow.textEditor.autoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"jupyter.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers."},"jupyter.interactiveWindow.codeLens.commands":{"type":"string","default":"jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell","description":"Set of commands to put as code lens above a cell.","scope":"resource"},"jupyter.interactiveWindow.codeLes.debugCommands":{"type":"string","default":"jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"jupyter.debugpyDistPath":{"type":"string","default":"","description":"Path to debugpy bits for debugging cells.","scope":"resource"},"jupyter.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"jupyter.disableJupyterAutoStart":{"type":"boolean","default":false,"description":"When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter."},"jupyter.interactiveWindow.codeLens.enableGotoCell":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"jupyter.kernels.excludePythonEnvironments":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"List of Python environments to be excluded from the Kernel picker.","scope":"machine-overridable","examples":[["~/miniconda3/envs/tf/scripts/python.exe","~/miniconda3/envs/ds"]]},"jupyter.kernels.trusted":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Enter fully qualified paths to Kernel specification files that are to be trusted. E.g. 'C:\\Program Data\\Jupyter\\kernels\\python3\\kernel.json'.  \n**Note**: Kernels can execute code with user privileges. Click [here](https://aka.ms/JupyterTrustedKernelPaths) for further details.","scope":"machine"},"jupyter.interactiveWindow.creationMode":{"type":"string","enum":["perFile","single","multiple"],"scope":"resource","description":"Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.","default":"multiple"},"jupyter.interactiveWindow.textEditor.cellFolding":{"type":"boolean","default":true,"description":"Enable folding regions for code cells in Python files. This setting requires a reload of VS Code.","scope":"resource"},"jupyter.interactiveWindow.viewColumn":{"type":"string","enum":["beside","active","secondGroup"],"scope":"resource","description":"Where to open an Interactive Window that is not associated with a python file. 'beside' will open the interactive window to the right of the active editor. 'active' will open the interactive window in place of the active editor. 'secondGroup' will open the interactive window in the second editor group.","default":"secondGroup"},"jupyter.interactiveWindow.textEditor.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells."},"jupyter.pythonExportMethod":{"type":"string","enum":["direct","commentMagics","nbconvert"],"default":"direct","description":"The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.","scope":"application"},"jupyter.runStartupCommands":{"type":"array","default":"","description":"A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.","scope":"application"},"jupyter.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, only step through user-written code. Disable this to allow stepping into library code.","scope":"resource"},"jupyter.showOutlineButtonInNotebookToolbar":{"type":"boolean","default":true,"description":"Show the Outline button in the Jupyter notebook toolbar."},"jupyter.interactiveWindow.textEditor.autoAddNewCell":{"type":"boolean","default":true,"description":"Append a new empty cell to an interactive window file on running the currently last cell.","scope":"resource"},"jupyter.pythonCompletionTriggerCharacters":{"type":"string","default":".%'\"","deprecationMessage":"This setting has been deprecated in favor of jupyter.completionTriggerCharacters.","description":"Characters which trigger auto completion on a python jupyter kernel.","scope":"application"},"jupyter.logKernelOutputSeparately":{"type":"boolean","default":false,"description":"Creates separate output panels for kernels/jupyter server console output"},"jupyter.excludeUserSitePackages":{"type":"boolean","default":false,"description":"Add PYTHONNOUSERSITE to kernels before starting. This prevents global/user site-packages from being used in the PYTHONPATH of the kernel.","scope":"application"},"jupyter.enableExtendedKernelCompletions":{"type":"boolean","default":false,"deprecationMessage":"This setting has been deprecated in favor of jupyter.enableExtendedPythonKernelCompletions.","markdownDescription":"Enables Jedi support for extended IntelliSense completions in running Python Jupyter kernels for Python (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.","scope":"application"},"jupyter.enableExtendedPythonKernelCompletions":{"type":"boolean","default":false,"markdownDescription":"Enables Jedi support for extended IntelliSense completions in running Python Jupyter kernels for Python (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.","scope":"application"},"jupyter.executionAnalysis.enabled":{"type":"boolean","default":false,"description":"Experimental feature to enable execution analysis in notebooks","scope":"application"},"jupyter.enableKernelCompletions":{"type":"boolean","default":true,"markdownDescription":"Enable code completions in Notebooks and Interactive Windows using results from the associated Jupyter Kernel.","scope":"application","tags":["experimental"]},"jupyter.formatStackTraces":{"type":"boolean","default":false,"description":"Inject stack frame links into the stored traceback for the notebook.","deprecationMessage":"This setting has been deprecated and will be removed in a future release.","scope":"application"},"jupyter.completionTriggerCharacters":{"type":"object","patternProperties":{"^[A-Za-z_][A-Za-z0-9]*":{"type":"array","items":{"type":"string"}}},"default":{"bash":["$","{"],"java":[".","@","#"],"javascript":[".","\"","'","/","@"],"python":[".","%","'","\""],"julia":["."],"r":["[","(",",","$","@","\"","'"],"rust":[".",":"],"scala":["."],"typescript":[".","\"","'","/","@","<"]},"markdownDescription":"Mapping of characters which trigger auto completion in a Jupyter Kernel language. Following is an example of trigger characters for rust and julia kernel languages:\n```json \n{\n  \"julia\": [\".\"],\n  \"rust\": [\".\",\":\"] \n}\n```","scope":"application","examples":[{"bash":["$","{"]},{"java":[".","@","#"]},{"javascript":[".","\"","'","/","@"]},{"julia":["."]},{"typescript":[".","\"","'","/","@","<"]},{"r":["[","(",",","$","@","\"","'"]},{"rust":[".",":"]},{"scala":["."]},{"xonsh":[" ",".","%","'","\""]}]}}},"languages":[{"id":"raw"},{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"]}],"notebookPreload":[{"type":"jupyter-notebook","localResourceRoots":["./temp"],"entrypoint":"./dist/webviews/webview-side/ipywidgetsKernel/ipywidgetsKernel.js"},{"type":"interactive","localResourceRoots":["./temp"],"entrypoint":"./dist/webviews/webview-side/ipywidgetsKernel/ipywidgetsKernel.js"}],"notebookRenderer":[{"id":"jupyter-ipywidget-renderer","entrypoint":"./dist/webviews/webview-side/ipywidgetsRenderer/ipywidgetsRenderer.js","displayName":"Jupyter IPyWidget Renderer","mimeTypes":["application/vnd.jupyter.widget-view+json"],"requiresMessaging":"always"}],"viewsContainers":{"activitybar":[{"id":"jupyter","title":"Jupyter","icon":"$(notebook)"}],"panel":[{"id":"jupyter-variables","title":"Jupyter","icon":"$(notebook)"}]},"views":{"jupyter-variables":[{"type":"webview","id":"jupyterViewVariables","name":"Variables","when":"jupyter.hasNativeNotebookOrInteractiveWindowOpen"}]},"debuggers":[{"type":"Python Kernel Debug Adapter","label":"Python Kernel Debug Adapter"},{"type":"Python Interactive Window Debug Adapter","label":"Python Interactive Window"}],"jupyterVariableViewers":[{"command":"jupyter.showJupyterDataViewer","title":"View Value in Data Viewer","dataTypes":["DataFrame","list","dict","ndarray","Series","Tensor","EagerTensor","DataArray"]}]},"enabledApiProposals":["notebookDeprecated","notebookMessaging","notebookMime","contribNotebookStaticPreloads","portsAttributes","quickPickSortByLabel","notebookKernelSource","interactiveWindow","quickPickItemTooltip","notebookExecution","notebookCellExecution","notebookVariableProvider"],"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-toolsai-jupyter-insiders.vsix","packagePreRelease":"gulp clean && gulp prePublishBundle && vsce package --pre-release -o ms-toolsai-jupyter-insiders.vsix","prePublishBundleStable":"cross-env IS_PRE_RELEASE_VERSION_OF_JUPYTER_EXTENSION=false gulp prePublishBundle","prePublishBundlePreRelease":"cross-env IS_PRE_RELEASE_VERSION_OF_JUPYTER_EXTENSION=true gulp prePublishBundle","createNycFolder":"gulp createNycFolder","validateTranslationFiles":"gulp validateTranslationFiles","preprePublishBundle":"gulp clean","prePublishBundle":"concurrently npm:compile-release npm:updatePackageJsonForBundle","preprePublishNonBundle":"gulp clean","updatePackageJsonForBundle":"gulp updatePackageJsonForBundle","prePublishNonBundle":"npm run compile-no-watch","compile":"concurrently \"tsc -watch -p ./\" \"npx tsx build/esbuild/build.ts --watch\"","compile-watch-all":"concurrently \"tsc -watch -p ./\" \"npx tsx build/esbuild/build.ts --watch-all\"","compile-no-watch":"concurrently npm:compile-out npm:esbuild-all","compile-out":"tsc -p ./","compile-web-test":"webpack --mode development --config ./build/webpack/webpack.extension.web.config.js","compile-web-test-watch":"webpack --mode development --config ./build/webpack/webpack.extension.web.config.js --stats-error-details --watch --progress","esbuild-all":"npx tsx build/esbuild/build.ts","compile-release":"concurrently npm:compile-out npm:esbuild-release","esbuild-release":"npx tsx build/esbuild/build.ts --production","esbuild-watch":"npx tsx build/esbuild/build.ts --watch","checkDependencies":"gulp checkDependencies","postinstall":"npm run download-api && node ./build/ci/postInstall.js","test:unittests":"mocha --config ./build/.mocha.unittests.js.json ./out/**/*.unit.test.js","test:cover:report":"nyc report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_JUPYTER_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js && node ./out/test/languageServers/jedi/lspTeardown.node.js","pretestNativeNotebooksInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@notebookPerformance VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true VSC_JUPYTER_PERF_TEST=1 VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@notebookPerformance VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true VSC_JUPYTER_NOTEBOOK_PERF_TEST=true VSC_JUPYTER_PERF_TEST=1 CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestExecPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@executionPerformance VSC_JUPYTER_PERF_TEST=1 VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testExecPerfInVSCode":"cross-env VSC_JUPYTER_CI_TEST_GREP=@executionPerformance VSC_JUPYTER_PERF_TEST=1 CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING= node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testNativeNotebooksInVSCodeWithoutTestSuffix":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_FORCE_LOGGING=1 node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestNativeNotebooksWithoutPythonInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksWithoutPythonInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_CI_TEST_GREP=@nonPython VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testNativeNotebooksAndWebviews":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_CI_TEST_GREP=webview-test node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testWebExtension":"node ./build/launchWebTest.js","launchWebExtension":"node ./build/launchWeb.js","testSmoke":"node ./out/test/testBootstrap.node.js ./out/test/smokeTest.node.js","testSmokeLogged":"cross-env VSC_JUPYTER_FORCE_LOGGING=true node --no-force-async-hooks-checks ./out/test/testBootstrap.node.js ./out/test/smokeTest.node.js","lint":"eslint --ext .ts,.js src","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format":"prettier --write *.js *.json 'src/**/*.ts*' 'build/**/*.js' '.github/**/*.yml' 'build/**/*.yml' 'build/**/*.ts' 'build/**/*.json' gulpfile.js","format-check":"prettier --check *.js *.json 'src/**/*.ts*' 'build/**/*.js' '.github/**/*.yml' 'build/**/*.yml' 'build/**/*.ts' 'build/**/*.json' gulpfile.js","clean":"gulp clean","webpack":"webpack","download-api":"npx vscode-dts dev","postdownload-api":"npx vscode-dts main","generateTelemetry":"gulp generateTelemetry","openInBrowser":"vscode-test-web --extensionDevelopmentPath=. ./src/test/datascience","startJupyterServer":"node build/preDebugWebTest.js","stopJupyterServer":"node build/postDebugWebTest.js","validateTelemetry":"gulp validateTelemetry","verifyUnhandledErrors":"gulp verifyUnhandledErrors","printTestResults":"gulp printTestResults","setup-precommit-hook":"husky install"},"dependencies":{"@c4312/evt":"^0.1.1","@enonic/fnv-plus":"^1.3.0","@jupyter-widgets/base":"4.0.0","@jupyter-widgets/controls":"3.0.0","@jupyter-widgets/schema":"0.4.0","@jupyterlab/coreutils":"5.1.17","@jupyterlab/nbformat":"3.1.17","@jupyterlab/services":"6.1.17","@lumino/widgets":"^1.28.0","@nteract/messaging":"^7.0.0","@vscode/extension-telemetry":"^0.7.7","@vscode/python-extension":"^1.0.4","ajv-keywords":"^3.5.2","ansi-to-html":"^0.6.7","bootstrap":"^4.3.1","bootstrap-less":"^3.3.8","cross-fetch":"^3.1.5","decompress-response":"^4.2.0","encoding":"^0.1.13","fast-deep-equal":"^2.0.1","format-util":"^1.0.5","fs-extra":"^4.0.3","glob":"^7.1.2","iconv-lite":"^0.6.3","inversify":"^6.0.1","isomorphic-ws":"^4.0.1","jquery":"^3.6.0","jsonc-parser":"^2.0.3","lodash":"^4.17.21","marked":"^4.0.10","node-fetch":"^2.6.7","node-gyp-build":"^4.6.0","node-stream-zip":"^1.6.0","pdfkit":"^0.13.0","pidtree":"^0.6.0","portfinder":"^1.0.25","re-resizable":"~6.5.5","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dom":"^16.5.2","react-redux":"^7.1.1","react-svg-pan-zoom":"3.9.0","react-svgmt":"1.1.11","react-virtualized":"^9.21.1","redux":"^4.0.4","redux-logger":"^3.0.6","reflect-metadata":"^0.1.12","safe-buffer":"^5.2.1","sanitize-filename":"^1.6.3","semver":"^5.7.2","slickgrid":"^2.4.17","stack-trace":"0.0.10","string-argv":"^0.3.1","strip-comments":"^2.0.1","styled-components":"^5.2.1","sudo-prompt":"^9.2.1","svg-to-pdfkit":"^0.1.8","tcp-port-used":"^1.0.1","tmp":"^0.0.29","uint64be":"^1.0.1","underscore":"^1.12.1","url-parse":"^1.5.10","uuid":"^3.3.2","vscode-debugprotocol":"^1.41.0","vscode-languageclient":"8.0.2-next.5","vscode-tas-client":"^0.1.75","ws":"^6.2.2","zeromq":"^6.0.0-beta.16","zeromqold":"npm:zeromq@^6.0.0-beta.6"},"devDependencies":{"@actions/core":"^1.9.1","@actions/github":"^4.0.0","@actions/glob":"^0.3.0","@babel/polyfill":"^7.4.4","@istanbuljs/nyc-config-typescript":"^1.0.2","@sinonjs/fake-timers":"^6.0.1","@types/ansi-regex":"^4.0.0","@types/chai":"^4.3.6","@types/chai-arrays":"^2.0.1","@types/chai-as-promised":"^7.1.6","@types/cors":"^2.8.6","@types/debug":"^4.1.5","@types/dedent":"^0.7.0","@types/del":"^4.0.0","@types/event-stream":"^3.3.33","@types/format-util":"^1.0.2","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/jsdom":"^21.1.1","@types/json2csv":"^5.0.3","@types/loadable__component":"^5.10.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/memoize-one":"^4.1.1","@types/mocha":"^9.1.0","@types/nock":"^10.0.3","@types/node":"^18.15.0","@types/node-fetch":"^2.5.7","@types/pdfkit":"^0.11.0","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-redux":"^7.1.5","@types/react-virtualized":"^9.21.2","@types/redux-logger":"^3.0.7","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.15","@types/sinonjs__fake-timers":"^6.0.1","@types/stack-trace":"0.0.29","@types/strip-comments":"^2.0.1","@types/svg-to-pdfkit":"^0.1.0","@types/tcp-port-used":"^1.0.0","@types/temp":"^0.8.32","@types/tmp":"^0.2.3","@types/url-parse":"^1.4.8","@types/uuid":"^3.4.3","@types/uuid-to-hex":"^1.1.0","@types/vscode-notebook-renderer":"^1.60.0","@types/webpack-env":"^1.18.1","@types/ws":"^6.0.1","@typescript-eslint/eslint-plugin":"^6.9.0","@typescript-eslint/eslint-plugin-tslint":"^6.9.0","@typescript-eslint/parser":"^6.9.0","@vscode/dts":"^0.4.0","@vscode/test-cli":"^0.0.8","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.50","@vscode/zeromq":"^0.2.1","acorn":"^8.9.0","babel-polyfill":"^6.26.0","buffer":"^6.0.3","bufferutil":"^4.0.6","chai":"^4.3.10","chai-arrays":"^2.2.0","chai-as-promised":"^7.1.1","chai-exclude":"^2.1.0","codecov":"^3.7.1","colors":"^1.4.0","concurrently":"^8.2.2","cross-env":"^7.0.3","cross-spawn":"^7.0.3","css-loader":"^6.8.1","dedent":"^0.7.0","del":"^3.0.0","es-abstract":"^1.19.1","es5-ext":"^0.10.63","esbuild":"^0.19.4","esbuild-plugin-less":"^1.3.1","eslint":"^8.52.0","eslint-config-airbnb":"^19.0.4","eslint-config-prettier":"^9.0.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.29.0","eslint-plugin-jsdoc":"^46.8.2","eslint-plugin-jsx-a11y":"^6.7.1","eslint-plugin-local-rules":"file:build/eslint-rules","eslint-plugin-no-null":"^1.0.2","eslint-plugin-no-only-tests":"^3.1.0","eslint-plugin-prefer-arrow":"^1.2.3","eslint-plugin-prettier":"^5.0.1","eslint-plugin-react":"^7.33.2","eslint-plugin-react-hooks":"^4.6.0","expose-loader":"^4.1.0","flat":"^5.0.1","get-port":"^3.2.0","glob-parent":"^6.0.2","gulp":"^4.0.2","gulp-filter":"^7.0.0","gulp-rename":"^2.0.0","gulp-typescript":"^6.0.0-alpha.1","husky":"^8.0.3","jsdom":"^22.1.0","json2csv":"^5.0.7","jsonschema":"^1.4.1","keyv":"^4.1.0","less":"^4.1.3","less-loader":"^11.1.3","less-plugin-inline-urls":"^1.2.0","lolex":"^6.0.0","lru-cache":"^10.0.0","mocha":"^10.2.0","mocha-junit-reporter":"^2.2.0","mocha-multi-reporters":"^1.5.1","nock":"^13.3.1","node-has-native-dependencies":"^1.0.2","nyc":"^15.1.0","path-browserify":"^1.0.1","popper.js":"^1.16.1","postcss":"^8.4.31","postcss-import":"^15.1.0","postcss-loader":"^7.3.3","postcss-preset-env":"^8.5.1","prettier":"^3.0.0","relative":"^3.0.2","rewiremock":"^3.14.5","rimraf":"^5.0.1","screenshot-desktop":"^1.14.0","sinon":"^15.2.0","source-map":"^0.7.4","source-map-support":"^0.5.21","style-loader":"^3.3.3","svg-inline-loader":"^0.8.2","thread-loader":"^4.0.2","transform-loader":"^0.2.4","ts-loader":"^9.2.8","ts-mock-imports":"^1.3.0","ts-mockito":"^2.6.1","tsconfig-paths-webpack-plugin":"^3.2.0","tsx":"^3.13.0","typemoq":"^2.1.0","typescript":"^5.4.5","unicode-properties":"^1.3.1","utf-8-validate":"^5.0.8","util":"^0.12.4","uuid-to-hex":"^1.1.1","webpack":"^5.88.1","webpack-cli":"^5.1.4"},"optionalDependencies":{"canvas":"^2.7.0","fsevents":"^2.3.2"},"overrides":{"json5":"2.2.2","string_decoder":"1.3.0","simple-get@<3.1.1":"3.1.1","validator@<13.7.0":"13.7.0","word-wrap@<1.2.5":"1.2.5","jpeg-js@<0.4.4":"0.4.4","playwright-core":{"jpeg-js":"0.4.4"},"terser@<5.14.2":"5.14.2","glob-parent@<5.1.2":"5.1.2","jquery-ui@<1.13.2":"1.13.2","@jupyterlab/coreutils":{"url-parse":"$url-parse"},"d3-color":"3.1.0"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-toolsai.jupyter-2024.5.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148208,"pinned":false,"source":"gallery","id":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2024.6.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","contribIssueReporter","debugVisualization"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.87.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.1","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.31.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.0.0","prettier":"^3.0.3","rewiremock":"^3.13.0","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.2.2","vscode-test":"^1.6.1","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.1","jsonc-parser":"^3.2.0","lodash":"^4.17.21","reflect-metadata":"^0.1.13","vscode-debugadapter":"^1.51.0","vscode-debugprotocol":"^1.51.0","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148360,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2024.8.1","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","contribIssueReporter","terminalShellIntegration"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.89.0-20240415"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Python REPL"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend","pythonRecommendTensorboardExt"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment.","Denotes the Tensorboard Extension recommendation experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string","tags":["experimental"]},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["experimental"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string","markdownDeprecationMessage":"Tensorboard support has been moved to the extension [Tensorboard extension](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Instead use the setting `tensorBoard.logDirectory`.","deprecationMessage":"Tensorboard support has been moved to the extension Tensorboard extension. Instead use the setting `tensorBoard.logDirectory`."},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["experimental"]},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"!config.python.REPL.sendToNativeREPL && editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && activeEditor != 'workbench.editor.interactive'"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && activeEditor != 'workbench.editor.interactive'&& editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Python REPL","when":"false"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported && !python.tensorboardExtInstalled"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","@vscode/jupyter-lsp-middleware":"^0.2.50","arch":"^2.1.0","fs-extra":"^10.0.1","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^5.0.4","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","untildify":"^4.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.2","vscode-languageclient":"^10.0.0-next.2","vscode-languageserver-protocol":"^3.17.6-next.3","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^18.17.1","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.11","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.81.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.26.1","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^4.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^13.0.1","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.5.5","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-python.python-2024.8.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"isApplicationScoped":false,"installedTimestamp":1719078186127,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":true,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2024.6.1","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.86.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available.","restrictedConfigurations":["python.analysis.nodeExecutable"]},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.profiling.start","title":"Pylance: Start Profiling"},{"command":"pylance.profiling.stop","title":"Pylance: Stop Profiling"},{"command":"pylance.logging.start","title":"Pylance: Start Logging"},{"command":"pylance.logging.stop","title":"Pylance: Stop Logging"},{"command":"pylance.gotoOutputChannel","title":"Pylance: Go to output channel"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices","when":"!isWeb"},{"command":"pylance.profiling.start","when":"!isWeb"},{"command":"pylance.profiling.stop","when":"!isWeb"},{"command":"pylance.logging.start","when":"!isWeb"},{"command":"pylance.logging.stop","when":"!isWeb"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":"off"}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"description":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"description":"Enable auto-import completions.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"description":"When typing a '{' in a string, automatically prefix the string with an 'f'.","scope":"resource"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"description":"Automatically add common search paths like 'src'.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","description":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","description":"Analysis scope for showing diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"description":"Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"description":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":true,"description":"Indices for all third party libraries will be persisted to disk.","scope":"resource"},"python.analysis.extraCommitChars":{"type":"boolean","default":false,"description":"Allow using '.', '(' as commit characters when applicable.","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"description":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.autoIndent":{"type":"boolean","default":true,"description":"Automatically adjust indentation based on language semantics when typing Python code.","scope":"resource"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","standard","strict"],"description":"Defines the default rule set for type checking.","enumDescriptions":["Show diagnostics for invalid syntax, unresolved imports, undefined variables.","All \"off\" rules + basic type checking rules.","All \"off\" rules + basic type checking rules + standard typechecker rules.","All \"off\" rules + all type checking rules."],"scope":"resource","tags":["experimental"]},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"enumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"description":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. Use the rule name as a key and one of \"error\", \"warning\", \"information\", \"none\", `true` (alias for \"error\") or `false` (alias for \"none\") as value. The default value shown for each diagnostic is the default when \"python.analysis.typeCheckingMode\" is set to \"off\". See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (\"off\", \"basic\" and \"strict\").","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportInvalidTypeForm":{"type":["string","boolean"],"description":"Diagnostics for type expression that uses an invalid form.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportAbstractUsage":{"type":["string","boolean"],"description":"Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.","default":"error","enum":["none","information","warning","error",true,false]},"reportArgumentType":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility for an argument to a call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssertTypeFailure":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility detected by a typing.assert_type call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssignmentType":{"type":["string","boolean"],"description":"Diagnostics for type incompatibilities for assignments.","default":"error","enum":["none","information","warning","error",true,false]},"reportAttributeAccessIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving attribute accesses.","default":"error","enum":["none","information","warning","error",true,false]},"reportCallIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving call expressions and arguments.","default":"error","enum":["none","information","warning","error",true,false]},"reportInconsistentOverload":{"type":["string","boolean"],"description":"Diagnostics for inconsistencies between function overload signatures and implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportIndexIssue":{"type":["string","boolean"],"description":"Diagnostics related to index operations and expressions.","default":"error","enum":["none","information","warning","error",true,false]},"reportInvalidTypeArguments":{"type":["string","boolean"],"description":"Diagnostics for invalid type argument usage.","default":"error","enum":["none","information","warning","error",true,false]},"reportNoOverloadImplementation":{"type":["string","boolean"],"description":"Diagnostics for an overloaded function or method with a missing implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportOperatorIssue":{"type":["string","boolean"],"description":"Diagnostics for related to unary or binary operators.","default":"error","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportRedeclaration":{"type":["string","boolean"],"description":"Diagnostics for an attempt to declare the type of a symbol multiple times.","default":"error","enum":["none","information","warning","error",true,false]},"reportReturnType":{"type":["string","boolean"],"description":"Diagnostics related to function return type compatibility.","default":"error","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportPossiblyUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of variables that may be unbound on some code paths.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for undefined variables.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnhashable":{"type":["string","boolean"],"description":"Diagnostics for the use of an unhashable object in a container that requires hashability.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExcept":{"type":["string","boolean"],"description":"Diagnostics for unreachable except clause.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.logLevel":{"type":"string","default":"Information","description":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"]},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"description":"Defines the default format for import module.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.perfReporting":{"type":"boolean","default":false,"scope":"resource","description":"Allow pylance to ask users to report performance issues","tags":["experimental"]},"python.analysis.enableSyncServer":{"type":"boolean","default":false,"scope":"resource","description":"Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.","tags":["experimental"]},"python.analysis.experimentalserver":{"type":"boolean","default":false,"scope":"resource","description":"testing experiemental server","tags":["experimental"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"description":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":true,"description":"For string literals that look like module names, enables go to definition to go to the module.","scope":"resource"},"python.analysis.nodeExecutable":{"type":"string","default":"","markdownDescription":"Path to a Node.js executable to use for running the language server. If not specified, the language server will use the Node.js executable that ships with VS Code. Set this option if you're having trouble with Pylance running out of memory. See [here](https://aka.ms/AApf7ox) for more information.","scope":"machine"}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","watch:tests":"tsc --watch","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run webpack && npm run test:extension && npm run test:web","test:extension":"npm run build:tests && node ./src/tests/runTests.js extension","test:smoke":"npm run build:tests && node ./src/tests/runTests.js smoke","test:web":"npm run webpack && node ./build/launchWebTests.js","test:copytestbundle":"shx cp ./dist/browser.tests/web/index.bundle.js ./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","test:web:exists:nocoi":"vscode-test-web --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose"},"devDependencies":{"@types/jest":"^29.5.12","@types/mocha":"^10.0.6","@types/node":"^17.0.45","@types/source-map-support":"^0.5.10","@types/vscode":"^1.82.0","@types/webpack":"^5.28.5","@types/webpack-env":"^1.18.4","@types/which":"^3.0.3","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.51","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.2.0","javascript-obfuscator":"4.1.0","jest":"^29.7.0","jest-cli":"^29.7.0","jest-environment-node":"^29.7.0","jest-junit":"^16.0.0","mocha":"^10.3.0","shx":"^0.3.4","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.10","ts-jest":"^29.1.2","ts-loader":"^9.5.1","ts-mockito":"^2.6.1","ts-node":"^10.9.2","typescript":"~5.2","vsce":"^2.7.0","webpack":"^5.90.1","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.9.2","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","semver":"^7.6.0","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-languageclient":"^10.0.0-next.2","vscode-languageserver":"^10.0.0-next.2","vscode-languageserver-protocol":"^3.17.6-next.3","vscode-languageserver-types":"^3.17.6-next.3","vscode-tas-client":"^0.1.84","which":"^4.0.0"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-python.vscode-pylance-2024.6.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719078148350,"pinned":false,"source":"gallery","id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-kubernetes-tools.vscode-kubernetes-tools","uuid":"4837e4f3-1b01-4732-b1a6-daa57ef64cab"},"manifest":{"name":"vscode-kubernetes-tools","displayName":"Kubernetes","description":"Develop, deploy and debug Kubernetes applications","version":"1.3.16","publisher":"ms-kubernetes-tools","engines":{"vscode":"^1.82.0"},"license":"Apache-2.0","categories":["Snippets","Linters","Debuggers","Azure","Other"],"keywords":["kubernetes","helm","aks","gke","aws"],"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","icon":"images/k8s-logo.png","activationEvents":["onCommand:extension.vsKubernetesCreate","onCommand:extension.vsKubernetesCreateFile","onCommand:extension.vsKubernetesAddWatch","onCommand:extension.vsKubernetesDelete","onCommand:extension.vsKubernetesDeleteNow","onCommand:extension.vsKubernetesDeleteUri","onCommand:extension.vsKubernetesDeleteWatch","onCommand:extension.vsKubernetesDescribe.Refresh","onCommand:extension.vsKubernetesApply","onCommand:extension.vsKubernetesApplyFile","onCommand:extension.vsKubernetesExplain","onCommand:extension.vsKubernetesLoad","onCommand:extension.vsKubernetesGet","onCommand:extension.vsKubernetesRun","onCommand:extension.vsKubernetesLogs","onCommand:extension.vsKubernetesExpose","onCommand:extension.vsKubernetesDescribe","onCommand:extension.vsKubernetesSync","onCommand:extension.vsKubernetesExec","onCommand:extension.vsKubernetesTerminal","onCommand:extension.vsKubernetesDiff","onCommand:extension.vsKubernetesScale","onCommand:extension.vsKubernetesDebug","onCommand:extension.vsKubernetesDebugLocalTunnel","onCommand:extension.vsKubernetesFindLocalTunnelDebugProviders","onCommand:extension.vsKubernetesSelectPod","onCommand:extension.vsKubernetesRemoveDebug","onCommand:extension.vsKubernetesConfigureFromCluster","onCommand:extension.vsKubernetesCreateCluster","onCommand:extension.vsKubernetesUseKubeconfig","onCommand:extension.vsKubernetesDashboard","onCommand:extension.vsMinikubeStop","onCommand:extension.vsMinikubeStart","onCommand:extension.vsMinikubeStatus","onCommand:extension.vsKubernetesPortForward","onCommand:extension.vsKubernetesDeleteFile","onCommand:extension.vsKubernetesAddFile","onCommand:extension.vsKubernetesUseNamespace","onCommand:extension.vsKubernetesShowEvents","onCommand:extension.vsKubernetesFollowEvents","onCommand:extension.vsKubernetesCronJobRunNow","onCommand:extension.helmTemplate","onCommand:extension.helmTemplatePreview","onCommand:extension.helmLint","onCommand:extension.helmDryRun","onCommand:extension.helmVersion","onCommand:extension.helmCreate","onCommand:extension.helmInsertReq","onCommand:extension.helmDepUp","onCommand:extension.helmInspectChart","onCommand:extension.helmFetchValues","onCommand:extension.helmGet","onCommand:extension.helmPackage","onCommand:extension.helmFetch","onCommand:extension.helmInstall","onCommand:extension.helmUninstall","onCommand:extension.helmRollback","onCommand:extension.helmDependencies","onCommand:extension.helmConvertToTemplate","onCommand:extension.helmParameterise","onView:extension.vsKubernetesExplorer","onView:extension.vsKubernetesHelmRepoExplorer","onView:kubernetes.cloudExplorer","onCommand:kubernetes.cloudExplorer.mergeIntoKubeconfig","onCommand:kubernetes.cloudExplorer.saveKubeconfig","onCommand:kubernetes.cloudExplorer.findProviders","onCommand:kubernetes.portForwarding.showSessions","onLanguage:helm","onLanguage:yaml","onFileSystem:k8smsx"],"main":"./dist/extension","contributes":{"configuration":{"type":"object","title":"Kubernetes","properties":{"vs-kubernetes":{"type":"object","title":"Additional settings","description":"Kubernetes configuration","properties":{"vs-kubernetes.namespace":{"type":"string","description":"The namespace to use for all commands"},"vs-kubernetes.kubectl-path":{"type":"string","description":"[deprecated - use top level property] File path to a kubectl binary."},"vs-kubernetes.helm-path":{"type":"string","description":"[deprecated - use top level property] File path to a helm binary."},"vs-kubernetes.minikube-path":{"type":"string","description":"[deprecated - use top level property] File path to a minikube binary."},"vs-kubernetes.kubectl-path.windows":{"type":"string","description":"[deprecated - use top level property] File path to a kubectl binary."},"vs-kubernetes.helm-path.windows":{"type":"string","description":"[deprecated - use top level property] File path to a helm binary."},"vs-kubernetes.minikube-path.windows":{"type":"string","description":"[deprecated - use top level property] File path to a minikube binary."},"vs-kubernetes.kubectl-path.mac":{"type":"string","description":"[deprecated - use top level property] File path to a kubectl binary."},"vs-kubernetes.helm-path.mac":{"type":"string","description":"[deprecated - use top level property] File path to a helm binary."},"vs-kubernetes.minikube-path.mac":{"type":"string","description":"[deprecated - use top level property] File path to a minikube binary."},"vs-kubernetes.kubectl-path.linux":{"type":"string","description":"[deprecated - use top level property] File path to a kubectl binary."},"vs-kubernetes.helm-path.linux":{"type":"string","description":"[deprecated - use top level property] File path to a helm binary."},"vs-kubernetes.minikube-path.linux":{"type":"string","description":"[deprecated - use top level property] File path to a minikube binary."},"vs-kubernetes.kubectlVersioning":{"type":"string","enum":["user-provided","infer"],"description":"Whether to use the kubectl binary you provide ('user-provided'), or to automatically download the right version of kubectl for each cluster ('infer')."},"vs-kubernetes.kubeconfig":{"type":"string","description":"File path to the kubeconfig file."},"vs-kubernetes.knownKubeconfigs":{"type":"array","description":"File paths to kubeconfig files from which you can select."},"vs-kubernetes.autoCleanupOnDebugTerminate":{"type":"boolean","description":"Once the debug session is terminated, automatically clean up the created Deployment and associated Pod by the command \"Kubernetes: Debug (Launch)\"."},"vs-kubernetes.outputFormat":{"enum":["json","yaml"],"type":"string","description":"Output format for Kubernetes specs. One of 'json' or 'yaml' (default)."},"vs-kubernetes.nodejs-autodetect-remote-root":{"type":"boolean","description":"If true will try to automatically get the root location of the source code in the container (nodejs)."},"vs-kubernetes.nodejs-remote-root":{"type":"string","description":"The root location of the source code in the container (nodejs)."},"vs-kubernetes.nodejs-debug-port":{"type":"number","description":"Remote debugging port for nodejs. Usually 9229."},"checkForMinikubeUpgrade":{"type":"boolean","description":"Notify on startup if update is available for minikube"},"disable-lint":{"type":"boolean","description":"Disable all linting of Kubernetes files"},"disable-linters":{"type":"array","description":"List of linters by name to disable"},"resource-commands-on-files":{"type":"boolean","description":"If true, show Kubernetes resource commands on file context menu for all YAML files"},"imageBuildTool":{"type":"string","enum":["Docker","Buildah"],"description":"Container image build tool. By default, Docker."},"vs-kubernetes.python-autodetect-remote-root":{"type":"boolean","description":"If true will try to automatically get the root location of the source code in the container (Python)."},"vs-kubernetes.python-remote-root":{"type":"string","description":"The root location of the source code in the container (Python)."},"vs-kubernetes.python-debug-port":{"type":"number","description":"Remote debugging port for Python. Usually 5678."},"vs-kubernetes.dotnet-vsdbg-path":{"type":"string","description":"The path to the vsdbg debugger in the container (.NET)."},"vs-kubernetes.dotnet-source-file-map":{"type":"string","description":"The compilation root for the vsdbg debugger in order to have a sourceFileMap in the attach configuration of debug (.NET)."},"vs-kubernetes.debug-just-my-code":{"type":"boolean","description":"Enable/disable justMyCode debug configuration property for .NET, Python."},"vs-kubernetes.resources-to-watch":{"type":"array","description":"List of resources to be watched."},"vs-kubernetes.enable-snap-flag":{"type":"boolean","description":"Enables compatibility with instances of VS Code that were installed using snap."},"vs-kubernetes.disable-context-info-status-bar":{"type":"boolean","description":"Disable displaying your current Kubernetes context in VS Code's status bar."},"vs-kubernetes.disable-namespace-info-status-bar":{"type":"boolean","description":"Disable displaying your current Kubernetes namespace in VS Code's status bar."},"vs-kubernetes.local-tunnel-debug-provider":{"type":"string","description":"Configure the Local Tunnel debug provider you want to use by default."},"vs-kubernetes.enable-minimal-workflow":{"type":"boolean","description":"Enables the minimal workflow for several actions (Get, Describe, Scale, Expose, Switch). It reduces the queries to the cluster but the guided prompt has limited options."},"vs-kubernetes.suppress-kubectl-not-found-alerts":{"type":"boolean","default":false,"description":"Suppresses the display of warnings if no kubectl binary is available"},"vs-kubernetes.suppress-helm-not-found-alerts":{"type":"boolean","default":false,"description":"Suppresses the display of warnings if no helm binary is available"},"vs-kubernetes.ignore-recommendations":{"type":"boolean","default":false,"description":"Set to true to silence Kubernetes extension recommendation notifications."},"vs-kubernetes.crd-code-completion":{"type":"string","enum":["enabled","disabled"],"description":"Set the smart code completion for CRDs. This would always prevent/allow the plugin to fetch all custom schemas from all CRDs on cluster, despite of their number."},"vs-kubernetes.minikube-show-information-expiration":{"type":"string","default":"Install","description":"Set installation expiration for displaying minikube installation dialog box."}},"default":{"vs-kubernetes.namespace":"","vs-kubernetes.kubectl-path":"","vs-kubernetes.helm-path":"","vs-kubernetes.minikube-path":"","vs-kubernetes.kubectlVersioning":"user-provided","vs-kubernetes.outputFormat":"yaml","vs-kubernetes.kubeconfig":"","vs-kubernetes.knownKubeconfigs":[],"vs-kubernetes.autoCleanupOnDebugTerminate":false,"vs-kubernetes.nodejs-autodetect-remote-root":true,"vs-kubernetes.nodejs-remote-root":"","vs-kubernetes.nodejs-debug-port":9229,"vs-kubernetes.dotnet-vsdbg-path":"~/vsdbg/vsdbg","vs-kubernetes.local-tunnel-debug-provider":"","checkForMinikubeUpgrade":true,"imageBuildTool":"Docker"}},"vsdocker.imageUser":{"type":"string","default":null,"description":"Image prefix for docker images ie 'docker.io/brendanburns'"},"vscode-kubernetes.kubectl-path":{"type":"string","scope":"machine","title":"Path to kubectl","description":"File path to a kubectl binary. (You can override this on a per-OS basis if required)."},"vscode-kubernetes.helm-path":{"type":"string","scope":"machine","title":"Helm path","description":"File path to a helm binary. (You can override this on a per-OS basis if required)."},"vscode-kubernetes.minikube-path":{"type":"string","scope":"machine","title":"Minikube path","description":"File path to a minikube binary. (You can override this on a per-OS basis if required)."},"vscode-kubernetes.kubectl-path-windows":{"type":"string","scope":"machine","title":"Path to kubectl (Windows)","description":"File path to a kubectl binary."},"vscode-kubernetes.helm-path-windows":{"type":"string","scope":"machine","title":"Helm path (Windows)","description":"File path to a helm binary."},"vscode-kubernetes.minikube-path-windows":{"type":"string","scope":"machine","title":"Minikube path (Windows)","description":"File path to a minikube binary."},"vscode-kubernetes.kubectl-path-mac":{"type":"string","scope":"machine","title":"Path to kubectl (Mac)","description":"File path to a kubectl binary."},"vscode-kubernetes.helm-path-mac":{"type":"string","scope":"machine","title":"Helm path (Mac)","description":"File path to a helm binary."},"vscode-kubernetes.minikube-path-mac":{"type":"string","scope":"machine","title":"Minikube path (Mac)","description":"File path to a minikube binary."},"vscode-kubernetes.kubectl-path-linux":{"type":"string","scope":"machine","title":"Path to kubectl (Linux)","description":"File path to a kubectl binary."},"vscode-kubernetes.helm-path-linux":{"type":"string","scope":"machine","title":"Helm path (Linux)","description":"File path to a helm binary."},"vscode-kubernetes.minikube-path-linux":{"type":"string","scope":"machine","title":"Minikube path (Linux)","description":"File path to a minikube binary."},"vscode-kubernetes.log-viewer.follow":{"type":"boolean","default":false,"description":"Set to true to follow logs by default in the log viewer."},"vscode-kubernetes.log-viewer.timestamp":{"type":"boolean","default":false,"description":"Set to true to show timestamps by default in the log viewer."},"vscode-kubernetes.log-viewer.since":{"type":"integer","default":-1,"minimum":-1,"description":"How far back to fetch logs from in seconds by default. Set to -1 for all logs."},"vscode-kubernetes.log-viewer.tail":{"type":"integer","default":-1,"minimum":-1,"description":"The number of recent logs to display by default in the log viewer. Set to -1 for all log lines."},"vscode-kubernetes.log-viewer.destination":{"type":"string","default":"Webview","description":"Where to display logs, defaults to the dedicated Webview.","enum":["Webview","Terminal"]},"vscode-kubernetes.log-viewer.wrap":{"type":"boolean","default":false,"description":"Set to true to wrap lines by default in the log viewer."},"vscode-kubernetes.log-viewer.autorun":{"type":"boolean","default":false,"description":"Set to true to automatically begin fetching logs once the log viewer is opened using the default settings."}}},"views":{"kubernetesView":[{"id":"extension.vsKubernetesExplorer","name":"Clusters"},{"id":"extension.vsKubernetesHelmRepoExplorer","name":"Helm Repos"},{"id":"kubernetes.cloudExplorer","name":"Clouds"}]},"viewsContainers":{"activitybar":[{"icon":"images/logo.svg","id":"kubernetesView","title":"Kubernetes"}]},"menus":{"editor/title":[{"command":"extension.vsKubernetesDescribe.Refresh","when":"vscodeKubernetesDescribeContext"}],"explorer/context":[{"title":"Update Dependencies","when":"resourceFilename == requirements.yaml","command":"extension.helmDepUp","group":"2_helm@99"},{"title":"Create Kubernetes resource","when":"resourceLangId == yaml && config.vs-kubernetes.resource-commands-on-files","command":"extension.vsKubernetesCreateFile","group":"2_k8s_1"},{"title":"Apply Kubernetes resource","when":"resourceLangId == yaml && config.vs-kubernetes.resource-commands-on-files","command":"extension.vsKubernetesApplyFile","group":"2_k8s_2"},{"title":"Delete Kubernetes resource","when":"resourceLangId == yaml && config.vs-kubernetes.resource-commands-on-files","command":"extension.vsKubernetesDeleteUri","group":"2_k8s_3"},{"when":"resourceLangId == yaml","command":"extension.helmConvertToTemplate","group":"2_helm@98"}],"view/title":[{"command":"extension.vsKubernetesRefreshExplorer","when":"view == extension.vsKubernetesExplorer","group":"navigation"},{"command":"extension.vsKubernetesCreateCluster","when":"view == extension.vsKubernetesExplorer","group":"0"},{"command":"extension.vsKubernetesConfigureFromCluster","when":"view == extension.vsKubernetesExplorer","group":"0"},{"command":"extension.vsKubernetesUseKubeconfig","when":"view == extension.vsKubernetesExplorer","group":"1"},{"command":"extension.vsKubernetesRefreshHelmRepoExplorer","when":"view == extension.vsKubernetesHelmRepoExplorer","group":"navigation"},{"command":"extension.vsKubernetesRefreshCloudExplorer","when":"view == kubernetes.cloudExplorer","group":"navigation"},{"command":"kubernetes.cloudExplorer.findProviders","when":"view == kubernetes.cloudExplorer","group":"1"}],"view/item/context":[{"command":"extension.vsKubernetesUseContext","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster\\.inactive/i","group":"0@1"},{"command":"extension.vsKubernetesDeleteContext","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster.*/i","group":"0@2"},{"command":"extension.vsKubernetesCopy","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster.*/i","group":"1"},{"command":"extension.vsKubernetesClusterInfo","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster($|\\s)/i","group":"0@1"},{"command":"extension.vsKubernetesDashboard","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster($|\\s)/i","group":"0@3"},{"command":"extension.vsMinikubeStop","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.minikubeCluster/i","group":"2@1"},{"command":"extension.vsMinikubeStart","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.minikubeCluster/i","group":"2@0"},{"command":"extension.vsMinikubeStatus","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.minikubeCluster/i","group":"2@3"},{"command":"extension.vsKubernetesUseNamespace","group":"0","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.namespace\\.inactive/i"},{"command":"extension.vsKubernetesShowEvents","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.namespace/","group":"1"},{"command":"extension.vsKubernetesFollowEvents","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.namespace/","group":"1"},{"command":"extension.vsKubernetesCopy","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\./i","group":"1"},{"command":"extension.vsKubernetesGet","group":"1@1","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.kind/i"},{"command":"extension.vsKubernetesAddWatch","group":"3@1","when":"view == extension.vsKubernetesExplorer && viewItem =~ /k8s-watchable/i"},{"command":"extension.vsKubernetesDeleteWatch","group":"3@2","when":"view == extension.vsKubernetesExplorer && viewItem =~ /k8s-watchable/i"},{"command":"extension.vsKubernetesLoad","group":"0","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource(?!\\.namespace).*/i"},{"command":"extension.vsKubernetesGet","group":"2@1","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource(?!\\.namespace).*/i"},{"command":"extension.vsKubernetesDelete","group":"2@2","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource.*/i"},{"command":"extension.vsKubernetesDescribe","group":"inline","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource(?!\\.namespace).*/i"},{"command":"extension.vsKubernetesDescribe","group":"3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource(?!\\.namespace).*/i"},{"command":"extension.helmConvertToTemplate","group":"2","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource(?!\\.namespace).*/i"},{"command":"extension.vsKubernetesDeleteNow","group":"2@3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.pod/i"},{"command":"extension.vsKubernetesTerminal","group":"inline","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.pod/i"},{"command":"extension.vsKubernetesTerminal","group":"2@4","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.pod/i"},{"command":"extension.vsKubernetesDebugAttach","group":"2@5","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.pod/i"},{"command":"extension.vsKubernetesDebugLocalTunnel","group":"2@5","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.(pod|job|service|deployment)/i"},{"command":"extension.vsKubernetesPortForward","group":"2@6","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.pod/i"},{"command":"extension.vsKubernetesPortForward","group":"2@6","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.service/i"},{"command":"extension.vsKubernetesPortForward","group":"2@6","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.deployment/i"},{"command":"extension.vsKubernetesScale","group":"2@6","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.(deployment|job|rc|rs|statefulset)/i"},{"command":"extension.vsKubernetesLogs","group":"inline","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.(pod|job)/i"},{"command":"extension.vsKubernetesLogs","group":"3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.(pod|job)/i"},{"command":"extension.vsKubernetesCronJobRunNow","group":"3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.cronjob/i"},{"command":"extension.vsKubernetesAddFile","group":"3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.configmap/i"},{"command":"extension.vsKubernetesAddFile","group":"3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.secret/i"},{"command":"extension.vsKubernetesDeleteFile","group":"3","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.file/i"},{"command":"extension.vsKubernetesCopy","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.helmrelease/i","group":"1"},{"command":"extension.helmFetch","group":"1","when":"view == extension.vsKubernetesHelmRepoExplorer && viewItem =~ /vsKubernetes\\.((chart)|(chartversion))/i"},{"command":"extension.helmInstall","group":"2","when":"view == extension.vsKubernetesHelmRepoExplorer && viewItem =~ /vsKubernetes\\.((chart)|(chartversion))/i"},{"command":"extension.helmDependencies","group":"0@3","when":"view == extension.vsKubernetesHelmRepoExplorer && viewItem =~ /vsKubernetes\\.((chart)|(chartversion))/i"},{"command":"extension.helmInspectChart","group":"0@1","when":"view == extension.vsKubernetesHelmRepoExplorer && viewItem =~ /vsKubernetes\\.((chart)|(chartversion))/i"},{"command":"extension.helmFetchValues","group":"0@3","when":"view == extension.vsKubernetesHelmRepoExplorer && viewItem =~ /vsKubernetes\\.((chart)|(chartversion))/i"},{"command":"extension.helmRollback","group":"3@1","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.helmhistory/i"},{"command":"extension.helmUninstall","group":"3@2","when":"view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.helmrelease/i"},{"command":"kubernetes.cloudExplorer.mergeIntoKubeconfig","group":"7","when":"view == kubernetes.cloudExplorer && viewItem =~ /kubernetes\\.providesKubeconfig/i"},{"command":"kubernetes.cloudExplorer.saveKubeconfig","group":"7","when":"view == kubernetes.cloudExplorer && viewItem =~ /kubernetes\\.providesKubeconfig/i"},{"command":"kubernetes.cloudExplorer.findProviders","when":"view == kubernetes.cloudExplorer && viewItem == kubernetes.noProviders","group":"1"}],"commandPalette":[{"command":"extension.vsKubernetesDebounceActivation","when":"context == thiscontextdoesnotexist7603253285"},{"command":"extension.vsKubernetesApplyFile","when":"filesExplorerFocus"},{"command":"extension.vsKubernetesCreateFile","when":"filesExplorerFocus"},{"command":"extension.vsKubernetesDeleteUri","when":"filesExplorerFocus"},{"command":"extension.vsKubernetesRefreshExplorer","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.vsKubernetesRefreshHelmRepoExplorer","when":"view == extension.vsKubernetesHelmRepoExplorer"},{"command":"extension.vsKubernetesRefreshCloudExplorer","when":"view == kubernetes.cloudExplorer"},{"command":"extension.vsKubernetesUseContext","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.vsKubernetesClusterInfo","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.vsKubernetesDeleteContext","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.vsKubernetesUseNamespace","when":""},{"command":"extension.vsKubernetesCopy","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.vsKubernetesAddFile","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.vsKubernetesDeleteFile","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.helmGet","when":"view == extension.vsKubernetesExplorer"},{"command":"extension.helmInspectChart","when":"view === extension.vsKubernetesHelmRepoExplorer"},{"command":"kubernetes.cloudExplorer.mergeIntoKubeconfig","when":""},{"command":"kubernetes.cloudExplorer.saveKubeconfig","when":""},{"command":"kubernetes.portForwarding.showSessions","when":""}]},"commands":[{"command":"extension.vsKubernetesDebounceActivation","title":"Debounce Activation","category":"Kubernetes"},{"command":"extension.vsKubernetesDescribe.Refresh","title":"Refresh","category":"Kubernetes"},{"command":"extension.vsKubernetesCreate","title":"Create","category":"Kubernetes"},{"command":"extension.vsKubernetesCreateFile","title":"Create Kubernetes resource","category":"Kubernetes"},{"command":"extension.vsKubernetesAddWatch","title":"Watch","category":"Kubernetes"},{"command":"extension.vsKubernetesDelete","title":"Delete","category":"Kubernetes"},{"command":"extension.vsKubernetesDeleteNow","title":"Delete Now","category":"Kubernetes"},{"command":"extension.vsKubernetesDeleteUri","title":"Delete Kubernetes resource","category":"Kubernetes"},{"command":"extension.vsKubernetesDeleteWatch","title":"Stop Watching","category":"Kubernetes"},{"command":"extension.vsKubernetesApply","title":"Apply","category":"Kubernetes"},{"command":"extension.vsKubernetesApplyFile","title":"Apply Kubernetes resource","category":"Kubernetes"},{"command":"extension.vsKubernetesExplain","title":"Explain","category":"Kubernetes"},{"command":"extension.vsKubernetesLoad","title":"Load","category":"Kubernetes"},{"command":"extension.vsKubernetesGet","title":"Get","category":"Kubernetes"},{"command":"extension.vsKubernetesRun","title":"Run","category":"Kubernetes"},{"command":"extension.vsKubernetesLogs","title":"Logs","category":"Kubernetes","icon":"$(list-flat)"},{"command":"extension.vsKubernetesExpose","title":"Expose","category":"Kubernetes"},{"command":"extension.vsKubernetesDescribe","title":"Describe","category":"Kubernetes","icon":"$(eye)"},{"command":"extension.vsKubernetesSync","title":"Sync Working Copy to Cluster","category":"Kubernetes"},{"command":"extension.vsKubernetesExec","title":"Exec","category":"Kubernetes"},{"command":"extension.vsKubernetesTerminal","title":"Terminal","category":"Kubernetes","icon":"$(terminal)"},{"command":"extension.vsKubernetesDiff","title":"Diff","category":"Kubernetes"},{"command":"extension.vsKubernetesScale","title":"Scale","category":"Kubernetes"},{"command":"extension.vsKubernetesDebug","title":"Debug (Launch)","category":"Kubernetes"},{"command":"extension.vsKubernetesDebugAttach","title":"Debug (Attach)","category":"Kubernetes"},{"command":"extension.vsKubernetesDebugLocalTunnel","title":"Debug (Local Tunnel)","category":"Kubernetes"},{"command":"extension.vsKubernetesFindLocalTunnelDebugProviders","title":"Find Local Tunnel Debug Providers on Marketplace","category":"Kubernetes"},{"command":"extension.vsKubernetesRemoveDebug","title":"Remove Debug","category":"Kubernetes"},{"command":"extension.vsKubernetesConfigureFromCluster","title":"Add Existing Cluster","category":"Kubernetes"},{"command":"extension.vsKubernetesCreateCluster","title":"Create Cluster","category":"Kubernetes"},{"command":"extension.vsKubernetesUseContext","title":"Set as Current Cluster","category":"Kubernetes"},{"command":"extension.vsKubernetesUseKubeconfig","title":"Set Kubeconfig","category":"Kubernetes"},{"command":"extension.vsKubernetesClusterInfo","title":"Show Cluster Info","category":"Kubernetes"},{"command":"extension.vsKubernetesDeleteContext","title":"Delete from kubeconfig","category":"Kubernetes"},{"command":"extension.vsKubernetesUseNamespace","title":"Use Namespace","category":"Kubernetes"},{"command":"extension.vsKubernetesDashboard","title":"Open Dashboard","category":"Kubernetes"},{"command":"extension.vsMinikubeStop","title":"Stop minikube","category":"Kubernetes"},{"command":"extension.vsMinikubeStart","title":"Start minikube","category":"Kubernetes"},{"command":"extension.vsMinikubeStatus","title":"Minikube status","category":"Kubernetes"},{"command":"extension.vsKubernetesPortForward","title":"Port Forward","category":"Kubernetes"},{"command":"extension.vsKubernetesCopy","title":"Copy Name","category":"Kubernetes"},{"command":"extension.vsKubernetesAddFile","title":"Add File(s)","category":"Kubernetes"},{"command":"extension.vsKubernetesDeleteFile","title":"Delete File","category":"Kubernetes"},{"command":"extension.vsKubernetesCronJobRunNow","title":"Run CronJob Now","category":"Kubernetes"},{"command":"extension.vsKubernetesRefreshExplorer","title":"Refresh","category":"Kubernetes","icon":{"light":"images/light/refresh.svg","dark":"images/dark/refresh.svg"}},{"command":"extension.vsKubernetesShowEvents","title":"Show Events","category":"Kubernetes"},{"command":"extension.vsKubernetesFollowEvents","title":"Follow Events","category":"Kubernetes"},{"command":"extension.vsKubernetesRefreshHelmRepoExplorer","title":"Refresh","category":"Helm","icon":{"light":"images/light/refresh.svg","dark":"images/dark/refresh.svg"}},{"command":"extension.helmVersion","title":"Version","description":"Get the version of the local Helm client.","category":"Helm"},{"command":"extension.helmLint","title":"Lint","description":"Run the Helm linter on this chart.","category":"Helm"},{"command":"extension.helmDepUp","title":"Dependency Update","description":"Update the dependencies listed in requirements.yaml.","category":"Helm"},{"command":"extension.helmDryRun","title":"Dry Run","description":"Run 'helm install --dry-run --debug' on this chart.","category":"Helm"},{"command":"extension.helmTemplate","title":"Template","description":"Run 'helm template' on this chart.","category":"Helm"},{"command":"extension.helmInsertReq","title":"Insert Dependency","description":"Insert a dependency YAML fragment","category":"Helm"},{"command":"extension.helmTemplatePreview","title":"Preview Template","description":"Run 'helm template' on this chart and show only this file.","category":"Helm"},{"command":"extension.helmFetchValues","title":"Fetch values","description":"Fetches values.yaml from the chart","category":"Helm"},{"command":"extension.helmInspectChart","title":"Inspect Chart","description":"Inspect a Helm Chart","category":"Helm"},{"command":"extension.helmCreate","title":"Create Chart","description":"Create a new Helm Chart","category":"Helm"},{"command":"extension.helmConvertToTemplate","title":"Convert to Template","description":"Convert this manifest to a Helm template","category":"Helm"},{"command":"extension.helmParameterise","title":"Convert to Template Parameter","description":"Convert this value to a Helm template parameter","category":"Helm"},{"command":"extension.helmGet","title":"Get Release","description":"Get a Helm release from the cluster","category":"Helm"},{"command":"extension.helmPackage","title":"Package","description":"Package a chart directory into a versioned chart archive file.","category":"Helm"},{"command":"extension.helmFetch","title":"Fetch","description":"Fetch a Helm chart into the current project","category":"Helm"},{"command":"extension.helmInstall","title":"Install","description":"Install a Helm chart into the cluster","category":"Helm"},{"command":"extension.helmUninstall","title":"Uninstall","description":"Uninstall a Helm release","category":"Helm"},{"command":"extension.helmRollback","title":"Rollback","description":"Rollback Helm Release","category":"Helm"},{"command":"extension.helmDependencies","title":"Show Dependencies","description":"List the dependencies of a Helm chart","category":"Helm"},{"command":"extension.vsKubernetesRefreshCloudExplorer","title":"Refresh","category":"Kubernetes","icon":{"light":"images/light/refresh.svg","dark":"images/dark/refresh.svg"}},{"command":"kubernetes.cloudExplorer.mergeIntoKubeconfig","title":"Merge into Kubeconfig","description":"Merge the cluster's kubeconfig into your existing kubeconfig"},{"command":"kubernetes.cloudExplorer.saveKubeconfig","title":"Save Kubeconfig","description":"Save the cluster's kubeconfig as a kubeconfig file"},{"command":"kubernetes.cloudExplorer.findProviders","title":"Find Cloud Providers on Marketplace","description":"Find extensions that add clouds to the Cloud Explorer"},{"command":"kubernetes.portForwarding.showSessions","title":"Show Port Forwarding Sessions","category":"Kubernetes"}],"keybindings":[{"command":"extension.vsKubernetesDescribe.Refresh","key":"shift+ctrl+r","mac":"shift+cmd+r","when":"vscodeKubernetesDescribeContext"}],"languages":[{"id":"helm","aliases":["helm-template","helm"],"filenamePatterns":["**/templates/*.yaml","**/templates/*.yml","**/templates/*.tpl","**/templates/**/*.yaml","**/templates/**/*.yml","**/templates/**/*.tpl"],"configuration":"./language-configuration.json"},{"id":"ignore","filenames":[".helmignore"]},{"id":"yaml","filenames":["Chart.lock","requirements.lock","**/.kube/config"]}],"grammars":[{"language":"helm","scopeName":"source.helm","path":"./syntaxes/helm.tmLanguage.json"}],"snippets":[{"language":"helm","path":"./snippets/helm.json"}],"debuggers":[]},"scripts":{"vscode:prepublish":"npm run vscode:prepublish:ext && npm run vscode:prepublish:view","vscode:prepublish:ext":"webpack --mode production","vscode:prepublish:view":"webpack --mode production --config src/components/logs/webpack.config.js","lint":"eslint -c .eslintrc.js --ext .ts ./src","compile":"npm run compile:ext && npm run compile:view","compile:ext":"webpack --mode none","compile:view":"webpack --mode none --config src/components/logs/webpack.config.js","watch":"webpack --mode development --watch --info-verbosity verbose","test-compile":"tsc -p ./","test":"npm run test-compile && node ./out/test/runTest.js"},"extensionDependencies":["redhat.vscode-yaml"],"dependencies":{"@kubernetes/client-node":"^0.14.0","@vscode/test-electron":"^2.3.8","ajv":"^6.9.1","ansi-to-html":"^0.7.2","await-notify":"^1.0.1","clipboardy":"^1.2.3","compare-versions":"^3.1.0","debug":"^3.1.0","docker-file-parser":"^1.0.3","dockerfile-parse":"^0.2.0","download":"^7.1.0","fuzzysearch":"^1.0.3","got":"^11.8.2","graceful-fs":"^4.1.11","js-yaml":"^3.13.1","lodash":"^4.17.21","mixin-deep":"^1.3.2","mkdirp":"^0.5.1","moment":"^2.29.1","natives":"^1.1.3","node-yaml-parser":"^0.0.9","opn":"^5.2.0","pluralize":"^4.0.0","portfinder":"^1.0.13","rxjs":"^6.5.4","semver":"^5.5.1","shelljs":"^0.7.7","spawn-rx":"^3.0.0","sshpk":"^1.13.2","tar":"^4.4.1","tmp":"^0.0.31","unzipper":"^0.10.5","url-parse":"^1.5.1","uuid":"^3.1.0","vscode-debugadapter":"1.27.0","vscode-debugprotocol":"1.27.0","vscode-extension-telemetry":"^0.1.1","vscode-uri":"^1.0.1","yaml-ast-parser":"^0.0.40","yamljs":"^0.3.0"},"devDependencies":{"@bendera/vscode-webview-elements":"^0.2.0","@types/clipboardy":"^1.1.0","@types/js-yaml":"^3.12.0","@types/lodash":"^4.14.113","@types/mkdirp":"^0.5.2","@types/mocha":"^8.0.4","@types/node":"^10.2.0","@types/opn":"^5.1.0","@types/pluralize":"^0.0.29","@types/request":"^2.48.1","@types/semver":"^5.5.0","@types/shelljs":"^0.7.8","@types/sinon":"^7.0.0","@types/tar":"^4.0.0","@types/tmp":"^0.0.33","@types/unzipper":"^0.10.0","@types/uuid":"^3.4.4","@types/vscode":"^1.52.0","@types/websocket":"^0.0.40","@types/yamljs":"^0.2.30","@typescript-eslint/eslint-plugin":"^4.28.1","@typescript-eslint/eslint-plugin-tslint":"4.28.1","@typescript-eslint/parser":"^4.28.1","electron":"^13.1.4","eslint":"^7.29.0","file-loader":"^6.2.0","gulp":"^4.0.2","gulp-tslint":"^8.1.2","html-webpack-plugin":"^4.2.0","mocha":"^8.1.3","sinon":"^6.3.5","ts-loader":"^6.0.4","tslint":"^5.18.0","typescript":"^3.5.2","webpack":"^4.35.2","webpack-cli":"^3.3.5"},"repository":{"type":"git","url":"https://github.com/vscode-kubernetes-tools/vscode-kubernetes-tools"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/ms-kubernetes-tools.vscode-kubernetes-tools-1.3.16","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1719149783971,"pinned":false,"source":"gallery","id":"4837e4f3-1b01-4732-b1a6-daa57ef64cab","publisherId":"d5b943eb-b968-4c2d-b241-a117ce9c3961","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"redhat.vscode-yaml","uuid":"2061917f-f76a-458a-8da9-f162de22b97e"},"manifest":{"name":"vscode-yaml","displayName":"YAML","description":"YAML Language Support by Red Hat, with built-in Kubernetes syntax support","author":"Red Hat","contributors":[{"name":"Joshua Pinkney","email":"jpinkney@redhat.com"},{"name":"Yevhen Vydolob","email":"yvydolob@redhat.com"}],"license":"MIT","version":"1.15.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-yaml/issues","repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-yaml"},"icon":"icon/icon128.png","engines":{"npm":">=7.0.0","vscode":"^1.63.0"},"categories":["Programming Languages","Linters","Snippets","Formatters"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onLanguage:yaml","onLanguage:dockercompose"],"keywords":["kubernetes","yaml","autocompletion","validation"],"main":"./dist/extension","browser":"./dist/extension-web","contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"filenames":[".clang-format","_clang-format"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configuration":{"title:":"YAML","properties":{"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["telemetry","usesOnlineServices"]},"yaml.yamlVersion":{"type":"string","default":"1.2","enum":["1.1","1.2"],"markdownDescription":"Default YAML spec version"},"yaml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the YAML language service."},"yaml.schemas":{"type":"object","default":{},"description":"Associate schemas to YAML files in the current workspace"},"yaml.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default YAML formatter"},"yaml.format.singleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes"},"yaml.format.bracketSpacing":{"type":"boolean","default":true,"description":"Print spaces between brackets in objects"},"yaml.format.proseWrap":{"type":"string","default":"preserve","enum":["preserve","never","always"],"description":"Always: wrap prose if it exceeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is"},"yaml.format.printWidth":{"type":"integer","default":80,"description":"Specify the line length that the printer will wrap on"},"yaml.validate":{"type":"boolean","default":true,"description":"Enable/disable validation feature"},"yaml.hover":{"type":"boolean","default":true,"description":"Enable/disable hover feature"},"yaml.completion":{"type":"boolean","default":true,"description":"Enable/disable completion feature"},"yaml.customTags":{"type":"array","default":[],"description":"Custom tags for the parser to use"},"yaml.schemaStore.enable":{"type":"boolean","default":true,"description":"Automatically pull available YAML schemas from JSON Schema Store"},"yaml.schemaStore.url":{"type":"string","default":"https://www.schemastore.org/api/json/catalog.json","description":"URL of schema store catalog to use"},"yaml.disableAdditionalProperties":{"type":"boolean","default":false,"description":"Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml."},"yaml.disableDefaultProperties":{"type":"boolean","default":false,"description":"Disable adding not required properties with default values into completion text."},"yaml.maxItemsComputed":{"type":"integer","default":5000,"description":"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."},"yaml.suggest.parentSkeletonSelectedFirst":{"type":"boolean","default":false,"description":"If true, the user must select some parent skeleton first before autocompletion starts to suggest the rest of the properties. When yaml object is not empty, autocompletion ignores this setting and returns all properties and skeletons"},"yaml.style.flowMapping":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style mappings"},"yaml.style.flowSequence":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style sequences"},"yaml.keyOrdering":{"type":"boolean","default":false,"description":"Enforces alphabetical ordering of keys in mappings when set to true"},"yaml.extension.recommendations":{"type":"boolean","default":"true","description":"Suggest additional extensions based on YAML usage."}}},"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.quickSuggestions":{"other":true,"comments":false,"strings":true},"editor.autoIndent":"keep"}}},"extensionDependencies":[],"scripts":{"build":"yarn run clean && yarn run lint && yarn run vscode:prepublish","check-dependencies":"node ./scripts/check-dependencies.js","clean":"rimraf out && rimraf dist","compile":"webpack --mode none","format":"prettier --write .","lint":"eslint -c .eslintrc.js --ext .ts src test","test":"yarn test-compile && sh scripts/e2e.sh","ui-test":"yarn test-compile && extest setup-and-run -y out/test/ui-test/allTestsSuite.js -c 1.76.2","vscode:prepublish":"webpack --mode production","watch":"webpack --mode development --watch --info-verbosity verbose","test-compile":"yarn clean && tsc -p ./ && webpack --mode development","run-in-chromium":"npm run compile && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"devDependencies":{"@types/chai":"^4.2.12","@types/fs-extra":"^9.0.6","@types/mocha":"^2.2.48","@types/node":"^12.12.6","@types/sinon":"^10.0.6","@types/sinon-chai":"^3.2.5","@types/vscode":"^1.63.0","@types/webpack":"^4.4.10","@typescript-eslint/eslint-plugin":"^7.11.0","@typescript-eslint/parser":"^7.11.0","@vscode/test-electron":"^2.4.0","@vscode/test-web":"0.0.11","buffer":"^6.0.3","chai":"^4.2.0","crypto-browserify":"^3.12.0","eslint":"^8.57.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","glob":"^7.1.6","mocha":"^9.1.2","path-browserify":"^1.0.1","prettier":"2.2.1","process":"^0.11.10","rimraf":"^3.0.2","sinon":"^12.0.1","sinon-chai":"^3.7.0","ts-loader":"^9.2.5","ts-node":"^3.3.0","typescript":"^5.4.5","umd-compat-loader":"^2.1.2","url":"^0.11.0","util":"^0.12.5","vscode-extension-tester":"^5.3.0","webpack":"^5.76.1","webpack-cli":"^5.0.1"},"dependencies":{"@redhat-developer/vscode-redhat-telemetry":"^0.8.0","fs-extra":"^9.1.0","request-light":"^0.5.7","vscode-languageclient":"7.0.0","vscode-nls":"^3.2.1","vscode-uri":"^2.0.3","whatwg-fetch":"^3.6.2","yaml-language-server":"1.15.0"}},"location":{"$mid":1,"path":"/home/griffin/.vscode/extensions/redhat.vscode-yaml-1.15.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1719149783988,"pinned":false,"source":"gallery","id":"2061917f-f76a-458a-8da9-f162de22b97e","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]}]}